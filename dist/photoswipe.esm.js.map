{"version":3,"file":"photoswipe.esm.js","sources":["../../../src/js/util/util.js","../../../src/js/util/dom-events.js","../../../src/js/util/viewport-size.js","../../../src/js/slide/pan-bounds.js","../../../src/js/slide/zoom-level.js","../../../src/js/slide/slide.js","../../../src/js/gestures/drag-handler.js","../../../src/js/gestures/zoom-handler.js","../../../src/js/gestures/tap-handler.js","../../../src/js/gestures/gestures.js","../../../src/js/main-scroll.js","../../../src/js/keyboard.js","../../../src/js/util/css-animation.js","../../../src/js/util/spring-easer.js","../../../src/js/util/spring-animation.js","../../../src/js/util/animations.js","../../../src/js/scroll-wheel.js","../../../src/js/ui/ui-element.js","../../../src/js/ui/button-arrow.js","../../../src/js/ui/button-close.js","../../../src/js/ui/button-zoom.js","../../../src/js/ui/loading-indicator.js","../../../src/js/ui/counter-indicator.js","../../../src/js/ui/ui.js","../../../src/js/slide/get-thumb-bounds.js","../../../src/js/core/eventable.js","../../../src/js/slide/placeholder.js","../../../src/js/slide/content.js","../../../src/js/slide/loader.js","../../../src/js/core/base.js","../../../src/js/opener.js","../../../src/js/photoswipe.js"],"sourcesContent":["/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\n * @template {keyof HTMLElementTagNameMap} T\n * @param {string} className\n * @param {T} tagName\n * @param {Node} [appendToEl]\n * @returns {HTMLElementTagNameMap[T]}\n */\nexport function createElement(className, tagName, appendToEl) {\n  const el = document.createElement(tagName);\n  if (className) {\n    el.className = className;\n  }\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  }\n  return el;\n}\n\n/**\n * @param {Point} p1\n * @param {Point} p2\n * @returns {Point}\n */\nexport function equalizePoints(p1, p2) {\n  p1.x = p2.x;\n  p1.y = p2.y;\n  if (p2.id !== undefined) {\n    p1.id = p2.id;\n  }\n  return p1;\n}\n\n/**\n * @param {Point} p\n */\nexport function roundPoint(p) {\n  p.x = Math.round(p.x);\n  p.y = Math.round(p.y);\n}\n\n/**\n * Returns distance between two points.\n *\n * @param {Point} p1\n * @param {Point} p2\n * @returns {number}\n */\nexport function getDistanceBetween(p1, p2) {\n  const x = Math.abs(p1.x - p2.x);\n  const y = Math.abs(p1.y - p2.y);\n  return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * Whether X and Y positions of points are equal\n *\n * @param {Point} p1\n * @param {Point} p2\n * @returns {boolean}\n */\nexport function pointsEqual(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\n/**\n * The float result between the min and max values.\n *\n * @param {number} val\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nexport function clamp(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Get transform string\n *\n * @param {number} x\n * @param {number} [y]\n * @param {number} [scale]\n * @returns {string}\n */\nexport function toTransformString(x, y, scale) {\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n\n  if (scale !== undefined) {\n    propValue += ` scale3d(${scale},${scale},1)`;\n  }\n\n  return propValue;\n}\n\n/**\n * Apply transform:translate(x, y) scale(scale) to element\n *\n * @param {HTMLElement} el\n * @param {number} x\n * @param {number} [y]\n * @param {number} [scale]\n */\nexport function setTransform(el, x, y, scale) {\n  el.style.transform = toTransformString(x, y, scale);\n}\n\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\n\n/**\n * Apply CSS transition to element\n *\n * @param {HTMLElement} el\n * @param {string} [prop] CSS property to animate\n * @param {number} [duration] in ms\n * @param {string} [ease] CSS easing function\n */\nexport function setTransitionStyle(el, prop, duration, ease) {\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\n  el.style.transition = prop\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\n    : 'none';\n}\n\n/**\n * Apply width and height CSS properties to element\n *\n * @param {HTMLElement} el\n * @param {string | number} w\n * @param {string | number} h\n */\nexport function setWidthHeight(el, w, h) {\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport function removeTransitionStyle(el) {\n  setTransitionStyle(el);\n}\n\n/**\n * @param {HTMLImageElement} img\n * @returns {Promise<HTMLImageElement | void>}\n */\nexport function decodeImage(img) {\n  if ('decode' in img) {\n    return img.decode().catch(() => {});\n  }\n\n  if (img.complete) {\n    return Promise.resolve(img);\n  }\n\n  return new Promise((resolve, reject) => {\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\n\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\nexport const LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error',\n};\n\n\n/**\n * Check if click or keydown event was dispatched\n * with a special key or via mouse wheel.\n *\n * @param {MouseEvent | KeyboardEvent} e\n * @returns {boolean}\n */\nexport function specialKeyUsed(e) {\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n\n/**\n * Parse `gallery` or `children` options.\n *\n * @param {import('../photoswipe.js').ElementProvider} [option]\n * @param {string} [legacySelector]\n * @param {HTMLElement | Document} [parent]\n * @returns HTMLElement[]\n */\nexport function getElementsFromOption(option, legacySelector, parent = document) {\n  /** @type {HTMLElement[]} */\n  let elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    const selector = typeof option === 'string' ? option : legacySelector;\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n\n/**\n * Check if variable is PhotoSwipe class\n *\n * @param {any} fn\n * @returns {boolean}\n */\nexport function isPswpClass(fn) {\n  return typeof fn === 'function'\n    && fn.prototype\n    && fn.prototype.goTo;\n}\n\n/**\n * Check if browser is Safari\n *\n * @returns {boolean}\n */\nexport function isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n\n","// Detect passive event listener support\nlet supportsPassive = false;\n/* eslint-disable */\ntry {\n  /* @ts-ignore */\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n    get: () => {\n      supportsPassive = true;\n    }\n  }));\n} catch (e) {}\n/* eslint-enable */\n\n/**\n * @typedef {Object} PoolItem\n * @prop {HTMLElement | Window | Document | undefined | null} target\n * @prop {string} type\n * @prop {EventListenerOrEventListenerObject} listener\n * @prop {boolean} [passive]\n */\n\nclass DOMEvents {\n  constructor() {\n    /**\n     * @type {PoolItem[]}\n     * @private\n     */\n    this._pool = [];\n  }\n\n  /**\n   * Adds event listeners\n   *\n   * @param {PoolItem['target']} target\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\n   * @param {PoolItem['listener']} listener\n   * @param {PoolItem['passive']} [passive]\n   */\n  add(target, type, listener, passive) {\n    this._toggleListener(target, type, listener, passive);\n  }\n\n  /**\n   * Removes event listeners\n   *\n   * @param {PoolItem['target']} target\n   * @param {PoolItem['type']} type\n   * @param {PoolItem['listener']} listener\n   * @param {PoolItem['passive']} [passive]\n   */\n  remove(target, type, listener, passive) {\n    this._toggleListener(target, type, listener, passive, true);\n  }\n\n  /**\n   * Removes all bound events\n   */\n  removeAll() {\n    this._pool.forEach((poolItem) => {\n      this._toggleListener(\n        poolItem.target,\n        poolItem.type,\n        poolItem.listener,\n        poolItem.passive,\n        true,\n        true\n      );\n    });\n    this._pool = [];\n  }\n\n  /**\n   * Adds or removes event\n   *\n   * @private\n   * @param {PoolItem['target']} target\n   * @param {PoolItem['type']} type\n   * @param {PoolItem['listener']} listener\n   * @param {PoolItem['passive']} [passive]\n   * @param {boolean} [unbind] Whether the event should be added or removed\n   * @param {boolean} [skipPool] Whether events pool should be skipped\n   */\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\n    if (!target) {\n      return;\n    }\n\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\n    const types = type.split(' ');\n    types.forEach((eType) => {\n      if (eType) {\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\n        // so developer doesn't need to do this manually\n        if (!skipPool) {\n          if (unbind) {\n            // Remove from the events pool\n            this._pool = this._pool.filter((poolItem) => {\n              return poolItem.type !== eType\n                || poolItem.listener !== listener\n                || poolItem.target !== target;\n            });\n          } else {\n            // Add to the events pool\n            this._pool.push({\n              target,\n              type: eType,\n              listener,\n              passive\n            });\n          }\n        }\n\n        // most PhotoSwipe events call preventDefault,\n        // and we do not need browser to scroll the page\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\n\n        target[methodName](\n          eType,\n          listener,\n          eventOptions\n        );\n      }\n    });\n  }\n}\n\nexport default DOMEvents;\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n/** @typedef {import('../photoswipe.js').Point} Point */\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\n * @param {PhotoSwipeOptions} options\n * @param {PhotoSwipeBase} pswp\n * @returns {Point}\n */\nexport function getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n\n/**\n * Parses padding option.\n * Supported formats:\n *\n * // Object\n * padding: {\n *  top: 0,\n *  bottom: 0,\n *  left: 0,\n *  right: 0\n * }\n *\n * // A function that returns the object\n * paddingFn: (viewportSize, itemData, index) => {\n *  return {\n *    top: 0,\n *    bottom: 0,\n *    left: 0,\n *    right: 0\n *  };\n * }\n *\n * // Legacy variant\n * paddingLeft: 0,\n * paddingRight: 0,\n * paddingTop: 0,\n * paddingBottom: 0,\n *\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\n * @param {PhotoSwipeOptions} options PhotoSwipe options\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\n * @param {SlideData} itemData Data about the slide\n * @param {number} index Slide index\n * @returns {number}\n */\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  let paddingValue = 0;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\n    // @ts-expect-error\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return Number(paddingValue) || 0;\n}\n\n/**\n * @param {PhotoSwipeOptions} options\n * @param {Point} viewportSize\n * @param {SlideData} itemData\n * @param {number} index\n * @returns {Point}\n */\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n","import { clamp } from '../util/util.js';\nimport { parsePaddingOption } from '../util/viewport-size.js';\n\n/** @typedef {import('./slide.js').default} Slide */\n/** @typedef {Record<Axis, number>} Point */\n/** @typedef {'x' | 'y'} Axis */\n\n/**\n * Calculates minimum, maximum and initial (center) bounds of a slide\n */\nclass PanBounds {\n  /**\n   * @param {Slide} slide\n   */\n  constructor(slide) {\n    this.slide = slide;\n    this.currZoomLevel = 1;\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\n  }\n\n  /**\n   * _getItemBounds\n   *\n   * @param {number} currZoomLevel\n   */\n  update(currZoomLevel) {\n    this.currZoomLevel = currZoomLevel;\n\n    if (!this.slide.width) {\n      this.reset();\n    } else {\n      this._updateAxis('x');\n      this._updateAxis('y');\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\n    }\n  }\n\n  /**\n   * _calculateItemBoundsForAxis\n   *\n   * @param {Axis} axis\n   */\n  _updateAxis(axis) {\n    const { pswp } = this.slide;\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\n    const paddingProp = axis === 'x' ? 'left' : 'top';\n    const padding = parsePaddingOption(\n      paddingProp,\n      pswp.options,\n      pswp.viewportSize,\n      this.slide.data,\n      this.slide.index\n    );\n\n    const panAreaSize = this.slide.panAreaSize[axis];\n\n    // Default position of element.\n    // By default, it is center of viewport:\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\n\n    // maximum pan position\n    this.max[axis] = (elSize > panAreaSize)\n      ? Math.round(panAreaSize - elSize) + padding\n      : this.center[axis];\n\n    // minimum pan position\n    this.min[axis] = (elSize > panAreaSize)\n      ? padding\n      : this.center[axis];\n  }\n\n  // _getZeroBounds\n  reset() {\n    this.center.x = 0;\n    this.center.y = 0;\n    this.max.x = 0;\n    this.max.y = 0;\n    this.min.x = 0;\n    this.min.y = 0;\n  }\n\n  /**\n   * Correct pan position if it's beyond the bounds\n   *\n   * @param {Axis} axis x or y\n   * @param {number} panOffset\n   * @returns {number}\n   */\n  correctPan(axis, panOffset) { // checkPanBounds\n    return clamp(panOffset, this.max[axis], this.min[axis]);\n  }\n}\n\nexport default PanBounds;\n","const MAX_IMAGE_WIDTH = 4000;\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n/** @typedef {import('../photoswipe.js').Point} Point */\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\n * Calculates zoom levels for specific slide.\n * Depends on viewport size and image size.\n */\nclass ZoomLevel {\n  /**\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\n   * @param {SlideData} itemData Slide data\n   * @param {number} index Slide index\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\n   */\n  constructor(options, itemData, index, pswp) {\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n    /** @type { Point | null } */\n    this.panAreaSize = null;\n    /** @type { Point | null } */\n    this.elementSize = null;\n    this.fit = 1;\n    this.fill = 1;\n    this.vFill = 1;\n    this.initial = 1;\n    this.secondary = 1;\n    this.max = 1;\n    this.min = 1;\n  }\n\n  /**\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\n   *\n   * It should be called when either image or viewport size changes.\n   *\n   * @param {number} maxWidth\n   * @param {number} maxHeight\n   * @param {Point} panAreaSize\n   */\n  update(maxWidth, maxHeight, panAreaSize) {\n    /** @type {Point} */\n    const elementSize = { x: maxWidth, y: maxHeight };\n    this.elementSize = elementSize;\n    this.panAreaSize = panAreaSize;\n\n    const hRatio = panAreaSize.x / elementSize.x;\n    const vRatio = panAreaSize.y / elementSize.y;\n\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\n\n    // zoom.vFill defines zoom level of the image\n    // when it has 100% of viewport vertical space (height)\n    this.vFill = Math.min(1, vRatio);\n\n    this.initial = this._getInitial();\n    this.secondary = this._getSecondary();\n    this.max = Math.max(\n      this.initial,\n      this.secondary,\n      this._getMax()\n    );\n\n    this.min = Math.min(\n      this.fit,\n      this.initial,\n      this.secondary\n    );\n\n    if (this.pswp) {\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\n    }\n  }\n\n  /**\n   * Parses user-defined zoom option.\n   *\n   * @private\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\n   * @returns { number | undefined }\n   */\n  _parseZoomLevelOption(optionPrefix) {\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\n      optionPrefix + 'ZoomLevel'\n    );\n    const optionValue = this.options[optionName];\n\n    if (!optionValue) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      return optionValue(this);\n    }\n\n    if (optionValue === 'fill') {\n      return this.fill;\n    }\n\n    if (optionValue === 'fit') {\n      return this.fit;\n    }\n\n    return Number(optionValue);\n  }\n\n  /**\n   * Get zoom level to which image will be zoomed after double-tap gesture,\n   * or when user clicks on zoom icon,\n   * or mouse-click on image itself.\n   * If you return 1 image will be zoomed to its original size.\n   *\n   * @private\n   * @return {number}\n   */\n  _getSecondary() {\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\n\n    if (currZoomLevel) {\n      return currZoomLevel;\n    }\n\n    // 3x of \"fit\" state, but not larger than original\n    currZoomLevel = Math.min(1, this.fit * 3);\n\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n    }\n\n    return currZoomLevel;\n  }\n\n  /**\n   * Get initial image zoom level.\n   *\n   * @private\n   * @return {number}\n   */\n  _getInitial() {\n    return this._parseZoomLevelOption('initial') || this.fit;\n  }\n\n  /**\n   * Maximum zoom level when user zooms\n   * via zoom/pinch gesture,\n   * via cmd/ctrl-wheel or via trackpad.\n   *\n   * @private\n   * @return {number}\n   */\n  _getMax() {\n    // max zoom level is x4 from \"fit state\",\n    // used for zoom gesture and ctrl/trackpad zoom\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\n  }\n}\n\nexport default ZoomLevel;\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\n * @typedef {_SlideData & Record<string, any>} SlideData\n * @typedef {Object} _SlideData\n * @prop {HTMLElement} [element] thumbnail element\n * @prop {string} [src] image URL\n * @prop {string} [srcset] image srcset\n * @prop {number} [w] image width (deprecated)\n * @prop {number} [h] image height (deprecated)\n * @prop {number} [width] image width\n * @prop {number} [height] image height\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\n * @prop {string} [alt] image alt text\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\n * @prop {string} [html] html content of a slide\n * @prop {'image' | 'html' | string} [type] slide type\n */\n\nimport {\n  createElement,\n  setTransform,\n  equalizePoints,\n  roundPoint,\n  toTransformString,\n  clamp,\n} from '../util/util.js';\n\nimport PanBounds from './pan-bounds.js';\nimport ZoomLevel from './zoom-level.js';\nimport { getPanAreaSize } from '../util/viewport-size.js';\n\n/**\n * Renders and allows to control a single slide\n */\nclass Slide {\n  /**\n   * @param {SlideData} data\n   * @param {number} index\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(data, index, pswp) {\n    this.data = data;\n    this.index = index;\n    this.pswp = pswp;\n    this.isActive = (index === pswp.currIndex);\n    this.currentResolution = 0;\n    /** @type {Point} */\n    this.panAreaSize = { x: 0, y: 0 };\n    /** @type {Point} */\n    this.pan = { x: 0, y: 0 };\n\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\n\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\n\n    this.pswp.dispatch('gettingData', {\n      slide: this,\n      data: this.data,\n      index\n    });\n\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\n    this.container = createElement('pswp__zoom-wrap', 'div');\n    /** @type {HTMLElement | null} */\n    this.holderElement = null;\n\n    this.currZoomLevel = 1;\n    /** @type {number} */\n    this.width = this.content.width;\n    /** @type {number} */\n    this.height = this.content.height;\n    this.heavyAppended = false;\n    this.bounds = new PanBounds(this);\n\n    this.prevDisplayedWidth = -1;\n    this.prevDisplayedHeight = -1;\n\n    this.pswp.dispatch('slideInit', { slide: this });\n  }\n\n  /**\n   * If this slide is active/current/visible\n   *\n   * @param {boolean} isActive\n   */\n  setIsActive(isActive) {\n    if (isActive && !this.isActive) {\n      // slide just became active\n      this.activate();\n    } else if (!isActive && this.isActive) {\n      // slide just became non-active\n      this.deactivate();\n    }\n  }\n\n  /**\n   * Appends slide content to DOM\n   *\n   * @param {HTMLElement} holderElement\n   */\n  append(holderElement) {\n    this.holderElement = holderElement;\n\n    this.container.style.transformOrigin = '0 0';\n\n    // Slide appended to DOM\n    if (!this.data) {\n      return;\n    }\n\n    this.calculateSize();\n\n    this.load();\n    this.updateContentSize();\n    this.appendHeavy();\n\n    this.holderElement.appendChild(this.container);\n\n    this.zoomAndPanToInitial();\n\n    this.pswp.dispatch('firstZoomPan', { slide: this });\n\n    this.applyCurrentZoomPan();\n\n    this.pswp.dispatch('afterSetContent', { slide: this });\n\n    if (this.isActive) {\n      this.activate();\n    }\n  }\n\n  load() {\n    this.content.load(false);\n    this.pswp.dispatch('slideLoad', { slide: this });\n  }\n\n  /**\n   * Append \"heavy\" DOM elements\n   *\n   * This may depend on a type of slide,\n   * but generally these are large images.\n   */\n  appendHeavy() {\n    const { pswp } = this;\n    const appendHeavyNearby = true; // todo\n\n    // Avoid appending heavy elements during animations\n    if (this.heavyAppended\n        || !pswp.opener.isOpen\n        || pswp.mainScroll.isShifted()\n        || (!this.isActive && !appendHeavyNearby)) {\n      return;\n    }\n\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\n      return;\n    }\n\n    this.heavyAppended = true;\n\n    this.content.append();\n\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\n  }\n\n  /**\n   * Triggered when this slide is active (selected).\n   *\n   * If it's part of opening/closing transition -\n   * activate() will trigger after the transition is ended.\n   */\n  activate() {\n    this.isActive = true;\n    this.appendHeavy();\n    this.content.activate();\n    this.pswp.dispatch('slideActivate', { slide: this });\n  }\n\n  /**\n   * Triggered when this slide becomes inactive.\n   *\n   * Slide can become inactive only after it was active.\n   */\n  deactivate() {\n    this.isActive = false;\n    this.content.deactivate();\n\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\n      // allow filtering\n      this.calculateSize();\n    }\n\n    // reset zoom level\n    this.currentResolution = 0;\n    this.zoomAndPanToInitial();\n    this.applyCurrentZoomPan();\n    this.updateContentSize();\n\n    this.pswp.dispatch('slideDeactivate', { slide: this });\n  }\n\n  /**\n   * The slide should destroy itself, it will never be used again.\n   * (unbind all events and destroy internal components)\n   */\n  destroy() {\n    this.content.hasSlide = false;\n    this.content.remove();\n    this.container.remove();\n    this.pswp.dispatch('slideDestroy', { slide: this });\n  }\n\n  resize() {\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\n      // Keep initial zoom level if it was before the resize,\n      // as well as when this slide is not active\n\n      // Reset position and scale to original state\n      this.calculateSize();\n      this.currentResolution = 0;\n      this.zoomAndPanToInitial();\n      this.applyCurrentZoomPan();\n      this.updateContentSize();\n    } else {\n      // readjust pan position if it's beyond the bounds\n      this.calculateSize();\n      this.bounds.update(this.currZoomLevel);\n      this.panTo(this.pan.x, this.pan.y);\n    }\n  }\n\n\n  /**\n   * Apply size to current slide content,\n   * based on the current resolution and scale.\n   *\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\n   */\n  updateContentSize(force) {\n    // Use initial zoom level\n    // if resolution is not defined (user didn't zoom yet)\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\n\n    if (!scaleMultiplier) {\n      return;\n    }\n\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\n\n    if (!this.sizeChanged(width, height) && !force) {\n      return;\n    }\n    this.content.setDisplayedSize(width, height);\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  sizeChanged(width, height) {\n    if (width !== this.prevDisplayedWidth\n        || height !== this.prevDisplayedHeight) {\n      this.prevDisplayedWidth = width;\n      this.prevDisplayedHeight = height;\n      return true;\n    }\n\n    return false;\n  }\n\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\n  getPlaceholderElement() {\n    return this.content.placeholder?.element;\n  }\n\n  /**\n   * Zoom current slide image to...\n   *\n   * @param {number} destZoomLevel Destination zoom level.\n   * @param {Point} [centerPoint]\n   * Transform origin center point, or false if viewport center should be used.\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\n   */\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\n    const { pswp } = this;\n    if (!this.isZoomable()\n        || pswp.mainScroll.isShifted()) {\n      return;\n    }\n\n    pswp.dispatch('beforeZoomTo', {\n      destZoomLevel, centerPoint, transitionDuration\n    });\n\n    // stop all pan and zoom transitions\n    pswp.animations.stopAllPan();\n\n    // if (!centerPoint) {\n    //   centerPoint = pswp.getViewportCenterPoint();\n    // }\n\n    const prevZoomLevel = this.currZoomLevel;\n\n    if (!ignoreBounds) {\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\n    }\n\n    // if (transitionDuration === undefined) {\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\n    // }\n\n    this.setZoomLevel(destZoomLevel);\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\n    roundPoint(this.pan);\n\n    const finishTransition = () => {\n      this._setResolution(destZoomLevel);\n      this.applyCurrentZoomPan();\n    };\n\n    if (!transitionDuration) {\n      finishTransition();\n    } else {\n      pswp.animations.startTransition({\n        isPan: true,\n        name: 'zoomTo',\n        target: this.container,\n        transform: this.getCurrentTransform(),\n        onComplete: finishTransition,\n        duration: transitionDuration,\n        easing: pswp.options.easing\n      });\n    }\n  }\n\n  /**\n   * @param {Point} [centerPoint]\n   */\n  toggleZoom(centerPoint) {\n    this.zoomTo(\n      this.currZoomLevel === this.zoomLevels.initial\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\n      centerPoint,\n      this.pswp.options.zoomAnimationDuration\n    );\n  }\n\n  /**\n   * Updates zoom level property and recalculates new pan bounds,\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\n   *\n   * @param {number} currZoomLevel\n   */\n  setZoomLevel(currZoomLevel) {\n    this.currZoomLevel = currZoomLevel;\n    this.bounds.update(this.currZoomLevel);\n  }\n\n  /**\n   * Get pan position after zoom at a given `point`.\n   *\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\n   * pan bounds according to the new zoom level.\n   *\n   * @param {'x' | 'y'} axis\n   * @param {Point} [point]\n   * point based on which zoom is performed, usually refers to the current mouse position,\n   * if false - viewport center will be used.\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\n   * @returns {number}\n   */\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\n    if (totalPanDistance === 0) {\n      return this.bounds.center[axis];\n    }\n\n    if (!point) {\n      point = this.pswp.getViewportCenterPoint();\n    }\n\n    if (!prevZoomLevel) {\n      prevZoomLevel = this.zoomLevels.initial;\n    }\n\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\n    return this.bounds.correctPan(\n      axis,\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\n    );\n  }\n\n  /**\n   * Apply pan and keep it within bounds.\n   *\n   * @param {number} panX\n   * @param {number} panY\n   */\n  panTo(panX, panY) {\n    this.pan.x = this.bounds.correctPan('x', panX);\n    this.pan.y = this.bounds.correctPan('y', panY);\n    this.applyCurrentZoomPan();\n  }\n\n  /**\n   * If the slide in the current state can be panned by the user\n   * @returns {boolean}\n   */\n  isPannable() {\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\n  }\n\n  /**\n   * If the slide can be zoomed\n   * @returns {boolean}\n   */\n  isZoomable() {\n    return Boolean(this.width) && this.content.isZoomable();\n  }\n\n  /**\n   * Apply transform and scale based on\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\n   */\n  applyCurrentZoomPan() {\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\n    if (this === this.pswp.currSlide) {\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\n    }\n  }\n\n  zoomAndPanToInitial() {\n    this.currZoomLevel = this.zoomLevels.initial;\n\n    // pan according to the zoom level\n    this.bounds.update(this.currZoomLevel);\n    equalizePoints(this.pan, this.bounds.center);\n    this.pswp.dispatch('initialZoomPan', { slide: this });\n  }\n\n  /**\n   * Set translate and scale based on current resolution\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} zoom\n   * @private\n   */\n  _applyZoomTransform(x, y, zoom) {\n    zoom /= this.currentResolution || this.zoomLevels.initial;\n    setTransform(this.container, x, y, zoom);\n  }\n\n  calculateSize() {\n    const { pswp } = this;\n\n    equalizePoints(\n      this.panAreaSize,\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\n    );\n\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\n\n    pswp.dispatch('calcSlideSize', {\n      slide: this\n    });\n  }\n\n  /** @returns {string} */\n  getCurrentTransform() {\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\n    return toTransformString(this.pan.x, this.pan.y, scale);\n  }\n\n  /**\n   * Set resolution and re-render the image.\n   *\n   * For example, if the real image size is 2000x1500,\n   * and resolution is 0.5 - it will be rendered as 1000x750.\n   *\n   * Image with zoom level 2 and resolution 0.5 is\n   * the same as image with zoom level 1 and resolution 1.\n   *\n   * Used to optimize animations and make\n   * sure that browser renders image in the highest quality.\n   * Also used by responsive images to load the correct one.\n   *\n   * @param {number} newResolution\n   */\n  _setResolution(newResolution) {\n    if (newResolution === this.currentResolution) {\n      return;\n    }\n\n    this.currentResolution = newResolution;\n    this.updateContentSize();\n\n    this.pswp.dispatch('resolutionChanged');\n  }\n}\n\nexport default Slide;\n","import {\n  equalizePoints, roundPoint, clamp\n} from '../util/util.js';\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n/** @typedef {import('./gestures.js').default} Gestures */\n\nconst PAN_END_FRICTION = 0.35;\nconst VERTICAL_DRAG_FRICTION = 0.6;\n\n// 1 corresponds to the third of viewport height\nconst MIN_RATIO_TO_CLOSE = 0.4;\n\n// Minimum speed required to navigate\n// to next or previous slide\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\n\n/**\n * @param {number} initialVelocity\n * @param {number} decelerationRate\n * @returns {number}\n */\nfunction project(initialVelocity, decelerationRate) {\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\n}\n\n/**\n * Handles single pointer dragging\n */\nclass DragHandler {\n  /**\n   * @param {Gestures} gestures\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n    this.pswp = gestures.pswp;\n    /** @type {Point} */\n    this.startPan = { x: 0, y: 0 };\n  }\n\n  start() {\n    if (this.pswp.currSlide) {\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\n    }\n    this.pswp.animations.stopAll();\n  }\n\n  change() {\n    const { p1, prevP1, dragAxis } = this.gestures;\n    const { currSlide } = this.pswp;\n\n    if (dragAxis === 'y'\n        && this.pswp.options.closeOnVerticalDrag\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\n        && !this.gestures.isMultitouch) {\n      // Handle vertical drag to close\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\n        this.pswp.applyBgOpacity(bgOpacity);\n        currSlide.applyCurrentZoomPan();\n      }\n    } else {\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\n      if (!mainScrollChanged) {\n        this._panOrMoveMainScroll('y');\n\n        if (currSlide) {\n          roundPoint(currSlide.pan);\n          currSlide.applyCurrentZoomPan();\n        }\n      }\n    }\n  }\n\n  end() {\n    const { velocity } = this.gestures;\n    const { mainScroll, currSlide } = this.pswp;\n    let indexDiff = 0;\n\n    this.pswp.animations.stopAll();\n\n    // Handle main scroll if it's shifted\n    if (mainScroll.isShifted()) {\n      // Position of the main scroll relative to the viewport\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\n\n      // Ratio between 0 and 1:\n      // 0 - slide is not visible at all,\n      // 0.5 - half of the slide is visible\n      // 1 - slide is fully visible\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\n\n      // Go next slide.\n      //\n      // - if velocity and its direction is matched,\n      //   and we see at least tiny part of the next slide\n      //\n      // - or if we see less than 50% of the current slide\n      //   and velocity is close to 0\n      //\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\n        // Go to next slide\n        indexDiff = 1;\n        velocity.x = Math.min(velocity.x, 0);\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\n        // Go to prev slide\n        indexDiff = -1;\n        velocity.x = Math.max(velocity.x, 0);\n      }\n\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\n    }\n\n    // Restore zoom level\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\n        || this.gestures.isMultitouch) {\n      this.gestures.zoomLevels.correctZoomPan(true);\n    } else {\n      // we run two animations instead of one,\n      // as each axis has own pan boundaries and thus different spring function\n      // (correctZoomPan does not have this functionality,\n      //  it animates all properties with single timing function)\n      this._finishPanGestureForAxis('x');\n      this._finishPanGestureForAxis('y');\n    }\n  }\n\n  /**\n   * @private\n   * @param {'x' | 'y'} axis\n   */\n  _finishPanGestureForAxis(axis) {\n    const { velocity } = this.gestures;\n    const { currSlide } = this.pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const { pan, bounds } = currSlide;\n    const panPos = pan[axis];\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\n\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\n    // Increasing this number will reduce travel distance\n    const decelerationRate = 0.995; // 0.99\n\n    // Pan position if there is no bounds\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\n\n    if (restoreBgOpacity) {\n      const vDragRatio = this._getVerticalDragRatio(panPos);\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\n\n      // If we are above and moving upwards,\n      // or if we are below and moving downwards\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\n        this.pswp.close();\n        return;\n      }\n    }\n\n    // Pan position with corrected bounds\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\n\n    // Exit if pan position should not be changed\n    // or if speed it too low\n    if (panPos === correctedPanPosition) {\n      return;\n    }\n\n    // Overshoot if the final position is out of pan bounds\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\n\n    const initialBgOpacity = this.pswp.bgOpacity;\n    const totalPanDist = correctedPanPosition - panPos;\n\n    this.pswp.animations.startSpring({\n      name: 'panGesture' + axis,\n      isPan: true,\n      start: panPos,\n      end: correctedPanPosition,\n      velocity: velocity[axis],\n      dampingRatio,\n      onUpdate: (pos) => {\n        // Animate opacity of background relative to Y pan position of an image\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\n          // 0 - start of animation, 1 - end of animation\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\n\n          // We clamp opacity to keep it between 0 and 1.\n          // As progress ratio can be larger than 1 due to overshoot,\n          // and we do not want to bounce opacity.\n          this.pswp.applyBgOpacity(clamp(\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\n            0,\n            1\n          ));\n        }\n\n        pan[axis] = Math.floor(pos);\n        currSlide.applyCurrentZoomPan();\n      },\n    });\n  }\n\n  /**\n   * Update position of the main scroll,\n   * or/and update pan position of the current slide.\n   *\n   * Should return true if it changes (or can change) main scroll.\n   *\n   * @private\n   * @param {'x' | 'y'} axis\n   * @returns {boolean}\n   */\n  _panOrMoveMainScroll(axis) {\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\n    const { currSlide, mainScroll } = this.pswp;\n    const delta = (p1[axis] - prevP1[axis]);\n    const newMainScrollX = mainScroll.x + delta;\n\n    if (!delta || !currSlide) {\n      return false;\n    }\n\n    // Always move main scroll if image can not be panned\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\n      mainScroll.moveTo(newMainScrollX, true);\n      return true; // changed main scroll\n    }\n\n    const { bounds } = currSlide;\n    const newPan = currSlide.pan[axis] + delta;\n\n    if (this.pswp.options.allowPanToNext\n        && dragAxis === 'x'\n        && axis === 'x'\n        && !isMultitouch) {\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\n\n      // Position of the main scroll relative to the viewport\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\n\n      const isLeftToRight = delta > 0;\n      const isRightToLeft = !isLeftToRight;\n\n      if (newPan > bounds.min[axis] && isLeftToRight) {\n        // Panning from left to right, beyond the left edge\n\n        // Wether the image was at minimum pan position (or less)\n        // when this drag gesture started.\n        // Minimum pan position refers to the left edge of the image.\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\n\n        if (wasAtMinPanPosition) {\n          mainScroll.moveTo(newMainScrollX, true);\n          return true;\n        } else {\n          this._setPanWithFriction(axis, newPan);\n          //currSlide.pan[axis] = newPan;\n        }\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\n        // Paning from right to left, beyond the right edge\n\n        // Maximum pan position refers to the right edge of the image.\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\n\n        if (wasAtMaxPanPosition) {\n          mainScroll.moveTo(newMainScrollX, true);\n          return true;\n        } else {\n          this._setPanWithFriction(axis, newPan);\n          //currSlide.pan[axis] = newPan;\n        }\n      } else {\n        // If main scroll is shifted\n        if (mainScrollShiftDiff !== 0) {\n          // If main scroll is shifted right\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\n            return true;\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\n            return true;\n          }\n        } else {\n          // We are within pan bounds, so just pan\n          this._setPanWithFriction(axis, newPan);\n        }\n      }\n    } else {\n      if (axis === 'y') {\n        // Do not pan vertically if main scroll is shifted o\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\n          this._setPanWithFriction(axis, newPan);\n        }\n      } else {\n        this._setPanWithFriction(axis, newPan);\n      }\n    }\n\n    return false;\n  }\n\n  // If we move above - the ratio is negative\n  // If we move below the ratio is positive\n\n  /**\n   * Relation between pan Y position and third of viewport height.\n   *\n   * When we are at initial position (center bounds) - the ratio is 0,\n   * if position is shifted upwards - the ratio is negative,\n   * if position is shifted downwards - the ratio is positive.\n   *\n   * @private\n   * @param {number} panY The current pan Y position.\n   * @returns {number}\n   */\n  _getVerticalDragRatio(panY) {\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\n  }\n\n  /**\n   * Set pan position of the current slide.\n   * Apply friction if the position is beyond the pan bounds,\n   * or if custom friction is defined.\n   *\n   * @private\n   * @param {'x' | 'y'} axis\n   * @param {number} potentialPan\n   * @param {number} [customFriction] (0.1 - 1)\n   */\n  _setPanWithFriction(axis, potentialPan, customFriction) {\n    const { currSlide } = this.pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const { pan, bounds } = currSlide;\n    const correctedPan = bounds.correctPan(axis, potentialPan);\n    // If we are out of pan bounds\n    if (correctedPan !== potentialPan || customFriction) {\n      const delta = Math.round(potentialPan - pan[axis]);\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\n    } else {\n      pan[axis] = potentialPan;\n    }\n  }\n}\n\nexport default DragHandler;\n","import {\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\n} from '../util/util.js';\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n/** @typedef {import('./gestures.js').default} Gestures */\n\nconst UPPER_ZOOM_FRICTION = 0.05;\nconst LOWER_ZOOM_FRICTION = 0.15;\n\n\n/**\n * Get center point between two points\n *\n * @param {Point} p\n * @param {Point} p1\n * @param {Point} p2\n * @returns {Point}\n */\nfunction getZoomPointsCenter(p, p1, p2) {\n  p.x = (p1.x + p2.x) / 2;\n  p.y = (p1.y + p2.y) / 2;\n  return p;\n}\n\nclass ZoomHandler {\n  /**\n   * @param {Gestures} gestures\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n    /**\n     * @private\n     * @type {Point}\n     */\n    this._startPan = { x: 0, y: 0 };\n    /**\n     * @private\n     * @type {Point}\n     */\n    this._startZoomPoint = { x: 0, y: 0 };\n    /**\n     * @private\n     * @type {Point}\n     */\n    this._zoomPoint = { x: 0, y: 0 };\n    /** @private */\n    this._wasOverFitZoomLevel = false;\n    /** @private */\n    this._startZoomLevel = 1;\n  }\n\n  start() {\n    const { currSlide } = this.gestures.pswp;\n    if (currSlide) {\n      this._startZoomLevel = currSlide.currZoomLevel;\n      equalizePoints(this._startPan, currSlide.pan);\n    }\n\n    this.gestures.pswp.animations.stopAllPan();\n    this._wasOverFitZoomLevel = false;\n  }\n\n  change() {\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\n    const { currSlide } = pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const minZoomLevel = currSlide.zoomLevels.min;\n    const maxZoomLevel = currSlide.zoomLevels.max;\n\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\n      return;\n    }\n\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\n\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\n                      * getDistanceBetween(p1, p2)\n                      * this._startZoomLevel;\n\n    // slightly over the zoom.fit\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\n      this._wasOverFitZoomLevel = true;\n    }\n\n    if (currZoomLevel < minZoomLevel) {\n      if (pswp.options.pinchToClose\n          && !this._wasOverFitZoomLevel\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\n        // fade out background if zooming out\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\n          pswp.applyBgOpacity(bgOpacity);\n        }\n      } else {\n        // Apply the friction if zoom level is below the min\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\n      }\n    } else if (currZoomLevel > maxZoomLevel) {\n      // Apply the friction if zoom level is above the max\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\n    }\n\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\n\n    currSlide.setZoomLevel(currZoomLevel);\n    currSlide.applyCurrentZoomPan();\n  }\n\n  end() {\n    const { pswp } = this.gestures;\n    const { currSlide } = pswp;\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\n        && !this._wasOverFitZoomLevel\n        && pswp.options.pinchToClose) {\n      pswp.close();\n    } else {\n      this.correctZoomPan();\n    }\n  }\n\n  /**\n   * @private\n   * @param {'x' | 'y'} axis\n   * @param {number} currZoomLevel\n   * @returns {number}\n   */\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\n    return this._zoomPoint[axis]\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\n  }\n\n  /**\n   * Correct currZoomLevel and pan if they are\n   * beyond minimum or maximum values.\n   * With animation.\n   *\n   * @param {boolean} [ignoreGesture]\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\n   */\n  correctZoomPan(ignoreGesture) {\n    const { pswp } = this.gestures;\n    const { currSlide } = pswp;\n\n    if (!currSlide?.isZoomable()) {\n      return;\n    }\n\n    if (this._zoomPoint.x === 0) {\n      ignoreGesture = true;\n    }\n\n    const prevZoomLevel = currSlide.currZoomLevel;\n\n    /** @type {number} */\n    let destinationZoomLevel;\n    let currZoomLevelNeedsChange = true;\n\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\n      destinationZoomLevel = currSlide.zoomLevels.initial;\n      // zoom to min\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\n      destinationZoomLevel = currSlide.zoomLevels.max;\n      // zoom to max\n    } else {\n      currZoomLevelNeedsChange = false;\n      destinationZoomLevel = prevZoomLevel;\n    }\n\n    const initialBgOpacity = pswp.bgOpacity;\n    const restoreBgOpacity = pswp.bgOpacity < 1;\n\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\n\n    if (ignoreGesture) {\n      this._zoomPoint.x = 0;\n      this._zoomPoint.y = 0;\n      this._startZoomPoint.x = 0;\n      this._startZoomPoint.y = 0;\n      this._startZoomLevel = prevZoomLevel;\n      equalizePoints(this._startPan, initialPan);\n    }\n\n    if (currZoomLevelNeedsChange) {\n      destinationPan = {\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\n      };\n    }\n\n    // set zoom level, so pan bounds are updated according to it\n    currSlide.setZoomLevel(destinationZoomLevel);\n\n    destinationPan = {\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\n    };\n\n    // return zoom level and its bounds to initial\n    currSlide.setZoomLevel(prevZoomLevel);\n\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\n\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\n      // update resolution after gesture\n      currSlide._setResolution(destinationZoomLevel);\n      currSlide.applyCurrentZoomPan();\n\n      // nothing to animate\n      return;\n    }\n\n    pswp.animations.stopAllPan();\n\n    pswp.animations.startSpring({\n      isPan: true,\n      start: 0,\n      end: 1000,\n      velocity: 0,\n      dampingRatio: 1,\n      naturalFrequency: 40,\n      onUpdate: (now) => {\n        now /= 1000; // 0 - start, 1 - end\n\n        if (panNeedsChange || currZoomLevelNeedsChange) {\n          if (panNeedsChange) {\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\n          }\n\n          if (currZoomLevelNeedsChange) {\n            const newZoomLevel = prevZoomLevel\n                        + (destinationZoomLevel - prevZoomLevel) * now;\n            currSlide.setZoomLevel(newZoomLevel);\n          }\n\n          currSlide.applyCurrentZoomPan();\n        }\n\n        // Restore background opacity\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\n          // We clamp opacity to keep it between 0 and 1.\n          // As progress ratio can be larger than 1 due to overshoot,\n          // and we do not want to bounce opacity.\n          pswp.applyBgOpacity(clamp(\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\n          ));\n        }\n      },\n      onComplete: () => {\n        // update resolution after transition ends\n        currSlide._setResolution(destinationZoomLevel);\n        currSlide.applyCurrentZoomPan();\n      }\n    });\n  }\n}\n\nexport default ZoomHandler;\n","/**\n * @template {string} T\n * @template {string} P\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\n */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\n\n/**\n * Whether the tap was performed on the main slide\n * (rather than controls or caption).\n *\n * @param {PointerEvent} event\n * @returns {boolean}\n */\nfunction didTapOnMainContent(event) {\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\n}\n\n/**\n * Tap, double-tap handler.\n */\nclass TapHandler {\n  /**\n   * @param {Gestures} gestures\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n  }\n\n  /**\n   * @param {Point} point\n   * @param {PointerEvent} originalEvent\n   */\n  click(point, originalEvent) {\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\n    const isImageClick = targetClassList.contains('pswp__img');\n    const isBackgroundClick = targetClassList.contains('pswp__item')\n                              || targetClassList.contains('pswp__zoom-wrap');\n\n    if (isImageClick) {\n      this._doClickOrTapAction('imageClick', point, originalEvent);\n    } else if (isBackgroundClick) {\n      this._doClickOrTapAction('bgClick', point, originalEvent);\n    }\n  }\n\n  /**\n   * @param {Point} point\n   * @param {PointerEvent} originalEvent\n   */\n  tap(point, originalEvent) {\n    if (didTapOnMainContent(originalEvent)) {\n      this._doClickOrTapAction('tap', point, originalEvent);\n    }\n  }\n\n  /**\n   * @param {Point} point\n   * @param {PointerEvent} originalEvent\n   */\n  doubleTap(point, originalEvent) {\n    if (didTapOnMainContent(originalEvent)) {\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Actions} actionName\n   * @param {Point} point\n   * @param {PointerEvent} originalEvent\n   */\n  _doClickOrTapAction(actionName, point, originalEvent) {\n    const { pswp } = this.gestures;\n    const { currSlide } = pswp;\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\n    const optionValue = pswp.options[actionFullName];\n\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      optionValue.call(pswp, point, originalEvent);\n      return;\n    }\n\n    switch (optionValue) {\n      case 'close':\n      case 'next':\n        pswp[optionValue]();\n        break;\n      case 'zoom':\n        currSlide?.toggleZoom(point);\n        break;\n      case 'zoom-or-close':\n        // by default click zooms current image,\n        // if it can not be zoomed - gallery will be closed\n        if (currSlide?.isZoomable()\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\n          currSlide.toggleZoom(point);\n        } else if (pswp.options.clickToCloseNonZoomable) {\n          pswp.close();\n        }\n        break;\n      case 'toggle-controls':\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\n        // if (_controlsVisible) {\n        //   _ui.hideControls();\n        // } else {\n        //   _ui.showControls();\n        // }\n        break;\n    }\n  }\n}\n\nexport default TapHandler;\n","import {\n  equalizePoints, pointsEqual, getDistanceBetween\n} from '../util/util.js';\n\nimport DragHandler from './drag-handler.js';\nimport ZoomHandler from './zoom-handler.js';\nimport TapHandler from './tap-handler.js';\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n// How far should user should drag\n// until we can determine that the gesture is swipe and its direction\nconst AXIS_SWIPE_HYSTERISIS = 10;\n//const PAN_END_FRICTION = 0.35;\n\nconst DOUBLE_TAP_DELAY = 300; // ms\nconst MIN_TAP_DISTANCE = 25; // px\n\n/**\n * Gestures class bind touch, pointer or mouse events\n * and emits drag to drag-handler and zoom events zoom-handler.\n *\n * Drag and zoom events are emited in requestAnimationFrame,\n * and only when one of pointers was actually changed.\n */\nclass Gestures {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n\n    /** @type {'x' | 'y' | null} */\n    this.dragAxis = null;\n\n    // point objects are defined once and reused\n    // PhotoSwipe keeps track only of two pointers, others are ignored\n    /** @type {Point} */\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\n    /** @type {Point} */\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\n    /** @type {Point} */\n    this.prevP1 = { x: 0, y: 0 };\n    /** @type {Point} */\n    this.prevP2 = { x: 0, y: 0 };\n    /** @type {Point} */\n    this.startP1 = { x: 0, y: 0 };\n    /** @type {Point} */\n    this.startP2 = { x: 0, y: 0 };\n    /** @type {Point} */\n    this.velocity = { x: 0, y: 0 };\n\n    /** @type {Point}\n     * @private\n     */\n    this._lastStartP1 = { x: 0, y: 0 };\n    /** @type {Point}\n     * @private\n     */\n    this._intervalP1 = { x: 0, y: 0 };\n    /** @private */\n    this._numActivePoints = 0;\n    /** @type {Point[]}\n     * @private\n     */\n    this._ongoingPointers = [];\n    /** @private */\n    this._touchEventEnabled = 'ontouchstart' in window;\n    /** @private */\n    this._pointerEventEnabled = !!(window.PointerEvent);\n    this.supportsTouch = this._touchEventEnabled\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\n    /** @private */\n    this._numActivePoints = 0;\n    /** @private */\n    this._intervalTime = 0;\n    /** @private */\n    this._velocityCalculated = false;\n    this.isMultitouch = false;\n    this.isDragging = false;\n    this.isZooming = false;\n    /** @type {number | null} */\n    this.raf = null;\n    /** @type {NodeJS.Timeout | null}\n     * @private\n     */\n    this._tapTimer = null;\n\n    if (!this.supportsTouch) {\n      // disable pan to next slide for non-touch devices\n      pswp.options.allowPanToNext = false;\n    }\n\n    this.drag = new DragHandler(this);\n    this.zoomLevels = new ZoomHandler(this);\n    this.tapHandler = new TapHandler(this);\n\n    pswp.on('bindEvents', () => {\n      pswp.events.add(\n        pswp.scrollWrap,\n        'click',\n        /** @type EventListener */(this._onClick.bind(this))\n      );\n\n      if (this._pointerEventEnabled) {\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\n      } else if (this._touchEventEnabled) {\n        this._bindEvents('touch', 'start', 'end', 'cancel');\n\n        // In previous versions we also bound mouse event here,\n        // in case device supports both touch and mouse events,\n        // but newer versions of browsers now support PointerEvent.\n\n        // on iOS10 if you bind touchmove/end after touchstart,\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\n        // preventDefault will have no effect on touchmove and touchend.\n        // Unless you bind it previously.\n        if (pswp.scrollWrap) {\n          pswp.scrollWrap.ontouchmove = () => {};\n          pswp.scrollWrap.ontouchend = () => {};\n        }\n      } else {\n        this._bindEvents('mouse', 'down', 'up');\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @param {'mouse' | 'touch' | 'pointer'} pref\n   * @param {'down' | 'start'} down\n   * @param {'up' | 'end'} up\n   * @param {'cancel'} [cancel]\n   */\n  _bindEvents(pref, down, up, cancel) {\n    const { pswp } = this;\n    const { events } = pswp;\n\n    const cancelEvent = cancel ? pref + cancel : '';\n\n    events.add(\n      pswp.scrollWrap,\n      pref + down,\n      /** @type EventListener */(this.onPointerDown.bind(this))\n    );\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\n    if (cancelEvent) {\n      events.add(\n        pswp.scrollWrap,\n        cancelEvent,\n        /** @type EventListener */(this.onPointerUp.bind(this))\n      );\n    }\n  }\n\n  /**\n   * @param {PointerEvent} e\n   */\n  onPointerDown(e) {\n    // We do not call preventDefault for touch events\n    // to allow browser to show native dialog on longpress\n    // (the one that allows to save image or open it in new tab).\n    //\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\n\n    // Allow dragging only via left mouse button.\n    // http://www.quirksmode.org/js/events_properties.html\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\n    if (isMousePointer && e.button > 0) {\n      return;\n    }\n\n    const { pswp } = this;\n\n    // if PhotoSwipe is opening or closing\n    if (!pswp.opener.isOpen) {\n      e.preventDefault();\n      return;\n    }\n\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\n      return;\n    }\n\n    if (isMousePointer) {\n      pswp.mouseDetected();\n\n      // preventDefault mouse event to prevent\n      // browser image drag feature\n      this._preventPointerEventBehaviour(e);\n    }\n\n    pswp.animations.stopAll();\n\n    this._updatePoints(e, 'down');\n\n    if (this._numActivePoints === 1) {\n      this.dragAxis = null;\n      // we need to store initial point to determine the main axis,\n      // drag is activated only after the axis is determined\n      equalizePoints(this.startP1, this.p1);\n    }\n\n    if (this._numActivePoints > 1) {\n      // Tap or double tap should not trigger if more than one pointer\n      this._clearTapTimer();\n      this.isMultitouch = true;\n    } else {\n      this.isMultitouch = false;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} e\n   */\n  onPointerMove(e) {\n    e.preventDefault(); // always preventDefault move event\n\n    if (!this._numActivePoints) {\n      return;\n    }\n\n    this._updatePoints(e, 'move');\n\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\n      return;\n    }\n\n    if (this._numActivePoints === 1 && !this.isDragging) {\n      if (!this.dragAxis) {\n        this._calculateDragDirection();\n      }\n\n      // Drag axis was detected, emit drag.start\n      if (this.dragAxis && !this.isDragging) {\n        if (this.isZooming) {\n          this.isZooming = false;\n          this.zoomLevels.end();\n        }\n\n        this.isDragging = true;\n        this._clearTapTimer(); // Tap can not trigger after drag\n\n        // Adjust starting point\n        this._updateStartPoints();\n        this._intervalTime = Date.now();\n        //this._startTime = this._intervalTime;\n        this._velocityCalculated = false;\n        equalizePoints(this._intervalP1, this.p1);\n        this.velocity.x = 0;\n        this.velocity.y = 0;\n        this.drag.start();\n\n        this._rafStopLoop();\n        this._rafRenderLoop();\n      }\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\n      this._finishDrag();\n\n      this.isZooming = true;\n\n      // Adjust starting points\n      this._updateStartPoints();\n\n      this.zoomLevels.start();\n\n      this._rafStopLoop();\n      this._rafRenderLoop();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _finishDrag() {\n    if (this.isDragging) {\n      this.isDragging = false;\n\n      // Try to calculate velocity,\n      // if it wasn't calculated yet in drag.change\n      if (!this._velocityCalculated) {\n        this._updateVelocity(true);\n      }\n\n      this.drag.end();\n      this.dragAxis = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} e\n   */\n  onPointerUp(e) {\n    if (!this._numActivePoints) {\n      return;\n    }\n\n    this._updatePoints(e, 'up');\n\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\n      return;\n    }\n\n    if (this._numActivePoints === 0) {\n      this._rafStopLoop();\n\n      if (this.isDragging) {\n        this._finishDrag();\n      } else if (!this.isZooming && !this.isMultitouch) {\n        //this.zoomLevels.correctZoomPan();\n        this._finishTap(e);\n      }\n    }\n\n    if (this._numActivePoints < 2 && this.isZooming) {\n      this.isZooming = false;\n      this.zoomLevels.end();\n\n      if (this._numActivePoints === 1) {\n        // Since we have 1 point left, we need to reinitiate drag\n        this.dragAxis = null;\n        this._updateStartPoints();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _rafRenderLoop() {\n    if (this.isDragging || this.isZooming) {\n      this._updateVelocity();\n\n      if (this.isDragging) {\n        // make sure that pointer moved since the last update\n        if (!pointsEqual(this.p1, this.prevP1)) {\n          this.drag.change();\n        }\n      } else /* if (this.isZooming) */ {\n        if (!pointsEqual(this.p1, this.prevP1)\n            || !pointsEqual(this.p2, this.prevP2)) {\n          this.zoomLevels.change();\n        }\n      }\n\n      this._updatePrevPoints();\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\n    }\n  }\n\n  /**\n   * Update velocity at 50ms interval\n   *\n   * @private\n   * @param {boolean} [force]\n   */\n  _updateVelocity(force) {\n    const time = Date.now();\n    const duration = time - this._intervalTime;\n\n    if (duration < 50 && !force) {\n      return;\n    }\n\n\n    this.velocity.x = this._getVelocity('x', duration);\n    this.velocity.y = this._getVelocity('y', duration);\n\n    this._intervalTime = time;\n    equalizePoints(this._intervalP1, this.p1);\n    this._velocityCalculated = true;\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} e\n   */\n  _finishTap(e) {\n    const { mainScroll } = this.pswp;\n\n    // Do not trigger tap events if main scroll is shifted\n    if (mainScroll.isShifted()) {\n      // restore main scroll position\n      // (usually happens if stopped in the middle of animation)\n      mainScroll.moveIndexBy(0, true);\n      return;\n    }\n\n    // Do not trigger tap for touchcancel or pointercancel\n    if (e.type.indexOf('cancel') > 0) {\n      return;\n    }\n\n    // Trigger click instead of tap for mouse events\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\n      this.tapHandler.click(this.startP1, e);\n      return;\n    }\n\n    // Disable delay if there is no doubleTapAction\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\n\n    // If tapTimer is defined - we tapped recently,\n    // check if the current tap is close to the previous one,\n    // if yes - trigger double tap\n    if (this._tapTimer) {\n      this._clearTapTimer();\n      // Check if two taps were more or less on the same place\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\n        this.tapHandler.doubleTap(this.startP1, e);\n      }\n    } else {\n      equalizePoints(this._lastStartP1, this.startP1);\n      this._tapTimer = setTimeout(() => {\n        this.tapHandler.tap(this.startP1, e);\n        this._clearTapTimer();\n      }, tapDelay);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearTapTimer() {\n    if (this._tapTimer) {\n      clearTimeout(this._tapTimer);\n      this._tapTimer = null;\n    }\n  }\n\n  /**\n   * Get velocity for axis\n   *\n   * @private\n   * @param {'x' | 'y'} axis\n   * @param {number} duration\n   * @returns {number}\n   */\n  _getVelocity(axis, duration) {\n    // displacement is like distance, but can be negative.\n    const displacement = this.p1[axis] - this._intervalP1[axis];\n\n    if (Math.abs(displacement) > 1 && duration > 5) {\n      return displacement / duration;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @private\n   */\n  _rafStopLoop() {\n    if (this.raf) {\n      cancelAnimationFrame(this.raf);\n      this.raf = null;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} e\n   */\n  _preventPointerEventBehaviour(e) {\n    // TODO find a way to disable e.preventDefault on some elements\n    //      via event or some class or something\n    e.preventDefault();\n  }\n\n  /**\n   * Parses and normalizes points from the touch, mouse or pointer event.\n   * Updates p1 and p2.\n   *\n   * @private\n   * @param {PointerEvent | TouchEvent} e\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\n   */\n  _updatePoints(e, pointerType) {\n    if (this._pointerEventEnabled) {\n      const pointerEvent = /** @type {PointerEvent} */ (e);\n      // Try to find the current pointer in ongoing pointers by its ID\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\n        return ongoingPointer.id === pointerEvent.pointerId;\n      });\n\n      if (pointerType === 'up' && pointerIndex > -1) {\n        // release the pointer - remove it from ongoing\n        this._ongoingPointers.splice(pointerIndex, 1);\n      } else if (pointerType === 'down' && pointerIndex === -1) {\n        // add new pointer\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\n      } else if (pointerIndex > -1) {\n        // update existing pointer\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\n      }\n\n      this._numActivePoints = this._ongoingPointers.length;\n\n      // update points that PhotoSwipe uses\n      // to calculate position and scale\n      if (this._numActivePoints > 0) {\n        equalizePoints(this.p1, this._ongoingPointers[0]);\n      }\n\n      if (this._numActivePoints > 1) {\n        equalizePoints(this.p2, this._ongoingPointers[1]);\n      }\n    } else {\n      const touchEvent = /** @type {TouchEvent} */ (e);\n\n      this._numActivePoints = 0;\n      if (touchEvent.type.indexOf('touch') > -1) {\n        // Touch Event\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\n          this._numActivePoints++;\n          if (touchEvent.touches.length > 1) {\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\n            this._numActivePoints++;\n          }\n        }\n      } else {\n        // Mouse Event\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\n        if (pointerType === 'up') {\n          // clear all points on mouseup\n          this._numActivePoints = 0;\n        } else {\n          this._numActivePoints++;\n        }\n      }\n    }\n  }\n\n  /** update points that were used during previous rAF tick\n   * @private\n   */\n  _updatePrevPoints() {\n    equalizePoints(this.prevP1, this.p1);\n    equalizePoints(this.prevP2, this.p2);\n  }\n\n  /** update points at the start of gesture\n   * @private\n   */\n  _updateStartPoints() {\n    equalizePoints(this.startP1, this.p1);\n    equalizePoints(this.startP2, this.p2);\n    this._updatePrevPoints();\n  }\n\n  /** @private */\n  _calculateDragDirection() {\n    if (this.pswp.mainScroll.isShifted()) {\n      // if main scroll position is shifted – direction is always horizontal\n      this.dragAxis = 'x';\n    } else {\n      // calculate delta of the last touchmove tick\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\n\n      if (diff !== 0) {\n        // check if pointer was shifted horizontally or vertically\n        const axisToCheck = diff > 0 ? 'x' : 'y';\n\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\n          this.dragAxis = axisToCheck;\n        }\n      }\n    }\n  }\n\n  /**\n   * Converts touch, pointer or mouse event\n   * to PhotoSwipe point.\n   *\n   * @private\n   * @param {Touch | PointerEvent} e\n   * @param {Point} p\n   * @returns {Point}\n   */\n  _convertEventPosToPoint(e, p) {\n    p.x = e.pageX - this.pswp.offset.x;\n    p.y = e.pageY - this.pswp.offset.y;\n\n    if ('pointerId' in e) {\n      p.id = e.pointerId;\n    } else if (e.identifier !== undefined) {\n      p.id = e.identifier;\n    }\n\n    return p;\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} e\n   */\n  _onClick(e) {\n    // Do not allow click event to pass through after drag\n    if (this.pswp.mainScroll.isShifted()) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n}\n\nexport default Gestures;\n","import {\n  setTransform,\n  createElement,\n} from './util/util.js';\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('./slide/slide.js').default} Slide */\n\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\n\nconst MAIN_SCROLL_END_FRICTION = 0.35;\n\n\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\n\n/**\n * Handles movement of the main scrolling container\n * (for example, it repositions when user swipes left or right).\n *\n * Also stores its state.\n */\nclass MainScroll {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.x = 0;\n    this.slideWidth = 0;\n    /** @private */\n    this._currPositionIndex = 0;\n    /** @private */\n    this._prevPositionIndex = 0;\n    /** @private */\n    this._containerShiftIndex = -1;\n\n    /** @type {ItemHolder[]} */\n    this.itemHolders = [];\n  }\n\n  /**\n   * Position the scroller and slide containers\n   * according to viewport size.\n   *\n   * @param {boolean} [resizeSlides] Whether slides content should resized\n   */\n  resize(resizeSlides) {\n    const { pswp } = this;\n    const newSlideWidth = Math.round(\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\n    );\n    // Mobile browsers might trigger a resize event during a gesture.\n    // (due to toolbar appearing or hiding).\n    // Avoid re-adjusting main scroll position if width wasn't changed\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\n\n    if (slideWidthChanged) {\n      this.slideWidth = newSlideWidth;\n      this.moveTo(this.getCurrSlideX());\n    }\n\n    this.itemHolders.forEach((itemHolder, index) => {\n      if (slideWidthChanged) {\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\n                                    * this.slideWidth);\n      }\n\n      if (resizeSlides && itemHolder.slide) {\n        itemHolder.slide.resize();\n      }\n    });\n  }\n\n  /**\n   * Reset X position of the main scroller to zero\n   */\n  resetPosition() {\n    // Position on the main scroller (offset)\n    // it is independent from slide index\n    this._currPositionIndex = 0;\n    this._prevPositionIndex = 0;\n\n    // This will force recalculation of size on next resize()\n    this.slideWidth = 0;\n\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\n    this._containerShiftIndex = -1;\n  }\n\n  /**\n   * Create and append array of three items\n   * that hold data about slides in DOM\n   */\n  appendHolders() {\n    this.itemHolders = [];\n\n    // append our three slide holders -\n    // previous, current, and next\n    for (let i = 0; i < 3; i++) {\n      const el = createElement('pswp__item', 'div', this.pswp.container);\n      el.setAttribute('role', 'group');\n      el.setAttribute('aria-roledescription', 'slide');\n      el.setAttribute('aria-hidden', 'true');\n\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n      el.style.display = (i === 1) ? 'block' : 'none';\n\n      this.itemHolders.push({\n        el,\n        //index: -1\n      });\n    }\n  }\n\n  /**\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\n   * @returns {boolean}\n   */\n  canBeSwiped() {\n    return this.pswp.getNumItems() > 1;\n  }\n\n  /**\n   * Move main scroll by X amount of slides.\n   * For example:\n   *   `-1` will move to the previous slide,\n   *    `0` will reset the scroll position of the current slide,\n   *    `3` will move three slides forward\n   *\n   * If loop option is enabled - index will be automatically looped too,\n   * (for example `-1` will move to the last slide of the gallery).\n   *\n   * @param {number} diff\n   * @param {boolean} [animate]\n   * @param {number} [velocityX]\n   * @returns {boolean} whether index was changed or not\n   */\n  moveIndexBy(diff, animate, velocityX) {\n    const { pswp } = this;\n    let newIndex = pswp.potentialIndex + diff;\n    const numSlides = pswp.getNumItems();\n\n    if (pswp.canLoop()) {\n      newIndex = pswp.getLoopedIndex(newIndex);\n      const distance = (diff + numSlides) % numSlides;\n      if (distance <= numSlides / 2) {\n        // go forward\n        diff = distance;\n      } else {\n        // go backwards\n        diff = distance - numSlides;\n      }\n    } else {\n      if (newIndex < 0) {\n        newIndex = 0;\n      } else if (newIndex >= numSlides) {\n        newIndex = numSlides - 1;\n      }\n      diff = newIndex - pswp.potentialIndex;\n    }\n\n    pswp.potentialIndex = newIndex;\n    this._currPositionIndex -= diff;\n\n    pswp.animations.stopMainScroll();\n\n    const destinationX = this.getCurrSlideX();\n    if (!animate) {\n      this.moveTo(destinationX);\n      this.updateCurrItem();\n    } else {\n      pswp.animations.startSpring({\n        isMainScroll: true,\n        start: this.x,\n        end: destinationX,\n        velocity: velocityX || 0,\n        naturalFrequency: 30,\n        dampingRatio: 1, //0.7,\n        onUpdate: (x) => {\n          this.moveTo(x);\n        },\n        onComplete: () => {\n          this.updateCurrItem();\n          pswp.appendHeavy();\n        }\n      });\n\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\n      if (pswp.canLoop()) {\n        const currDistance = (currDiff + numSlides) % numSlides;\n        if (currDistance <= numSlides / 2) {\n          // go forward\n          currDiff = currDistance;\n        } else {\n          // go backwards\n          currDiff = currDistance - numSlides;\n        }\n      }\n\n      // Force-append new slides during transition\n      // if difference between slides is more than 1\n      if (Math.abs(currDiff) > 1) {\n        this.updateCurrItem();\n      }\n    }\n\n    return Boolean(diff);\n  }\n\n  /**\n   * X position of the main scroll for the current slide\n   * (ignores position during dragging)\n   * @returns {number}\n   */\n  getCurrSlideX() {\n    return this.slideWidth * this._currPositionIndex;\n  }\n\n  /**\n   * Whether scroll position is shifted.\n   * For example, it will return true if the scroll is being dragged or animated.\n   * @returns {boolean}\n   */\n  isShifted() {\n    return this.x !== this.getCurrSlideX();\n  }\n\n  /**\n   * Update slides X positions and set their content\n   */\n  updateCurrItem() {\n    const { pswp } = this;\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\n\n    if (!positionDifference) {\n      return;\n    }\n\n    this._prevPositionIndex = this._currPositionIndex;\n\n    pswp.currIndex = pswp.potentialIndex;\n\n    let diffAbs = Math.abs(positionDifference);\n    /** @type {ItemHolder | undefined} */\n    let tempHolder;\n\n    if (diffAbs >= 3) {\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\n      diffAbs = 3;\n    }\n\n    for (let i = 0; i < diffAbs; i++) {\n      if (positionDifference > 0) {\n        tempHolder = this.itemHolders.shift();\n        if (tempHolder) {\n          this.itemHolders[2] = tempHolder; // move first to last\n\n          this._containerShiftIndex++;\n\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\n\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\n        }\n      } else {\n        tempHolder = this.itemHolders.pop();\n        if (tempHolder) {\n          this.itemHolders.unshift(tempHolder); // move last to first\n\n          this._containerShiftIndex--;\n\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\n\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\n        }\n      }\n    }\n\n    // Reset transfrom every 50ish navigations in one direction.\n    //\n    // Otherwise transform will keep growing indefinitely,\n    // which might cause issues as browsers have a maximum transform limit.\n    // I wasn't able to reach it, but just to be safe.\n    // This should not cause noticable lag.\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\n      this.resetPosition();\n      this.resize();\n    }\n\n    // Pan transition might be running (and consntantly updating pan position)\n    pswp.animations.stopAllPan();\n\n    this.itemHolders.forEach((itemHolder, i) => {\n      if (itemHolder.slide) {\n        // Slide in the 2nd holder is always active\n        itemHolder.slide.setIsActive(i === 1);\n      }\n    });\n\n    pswp.currSlide = this.itemHolders[1]?.slide;\n    pswp.contentLoader.updateLazy(positionDifference);\n\n    if (pswp.currSlide) {\n      pswp.currSlide.applyCurrentZoomPan();\n    }\n\n    pswp.dispatch('change');\n  }\n\n  /**\n   * Move the X position of the main scroll container\n   *\n   * @param {number} x\n   * @param {boolean} [dragging]\n   */\n  moveTo(x, dragging) {\n    if (!this.pswp.canLoop() && dragging) {\n      // Apply friction\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\n      newSlideIndexOffset += this.pswp.currIndex;\n      const delta = Math.round(x - this.x);\n\n      if ((newSlideIndexOffset < 0 && delta > 0)\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\n      }\n    }\n\n    this.x = x;\n\n    if (this.pswp.container) {\n      setTransform(this.pswp.container, x);\n    }\n\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\n  }\n}\n\nexport default MainScroll;\n","import { specialKeyUsed } from './util/util.js';\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\n * @template T\n * @typedef {import('./types.js').Methods<T>} Methods<T>\n */\n\nconst KeyboardKeyCodesMap = {\n  Escape: 27,\n  z: 90,\n  ArrowLeft: 37,\n  ArrowUp: 38,\n  ArrowRight: 39,\n  ArrowDown: 40,\n  Tab: 9,\n};\n\n/**\n * @template {keyof KeyboardKeyCodesMap} T\n * @param {T} key\n * @param {boolean} isKeySupported\n * @returns {T | number | undefined}\n */\nconst getKeyboardEventKey = (key, isKeySupported) => {\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\n};\n\n/**\n * - Manages keyboard shortcuts.\n * - Helps trap focus within photoswipe.\n */\nclass Keyboard {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    /** @private */\n    this._wasFocused = false;\n\n    pswp.on('bindEvents', () => {\n      // Dialog was likely opened by keyboard if initial point is not defined\n      if (!pswp.options.initialPointerPos) {\n        // focus causes layout,\n        // which causes lag during the animation,\n        // that's why we delay it until the opener transition ends\n        this._focusRoot();\n      }\n\n      pswp.events.add(document, 'focusin', /** @type EventListener */(this._onFocusIn.bind(this)));\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\n    });\n\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\n    pswp.on('destroy', () => {\n      if (pswp.options.returnFocus\n          && lastActiveElement\n          && this._wasFocused) {\n        lastActiveElement.focus();\n      }\n    });\n  }\n\n  /** @private */\n  _focusRoot() {\n    if (!this._wasFocused && this.pswp.element) {\n      this.pswp.element.focus();\n      this._wasFocused = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} e\n   */\n  _onKeyDown(e) {\n    const { pswp } = this;\n\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\n      return;\n    }\n\n    if (specialKeyUsed(e)) {\n      // don't do anything if special key pressed\n      // to prevent from overriding default browser actions\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\n      return;\n    }\n\n    /** @type {Methods<PhotoSwipe> | undefined} */\n    let keydownAction;\n    /** @type {'x' | 'y' | undefined} */\n    let axis;\n    let isForward = false;\n    const isKeySupported = 'key' in e;\n\n    switch (isKeySupported ? e.key : e.keyCode) {\n      case getKeyboardEventKey('Escape', isKeySupported):\n        if (pswp.options.escKey) {\n          keydownAction = 'close';\n        }\n        break;\n      case getKeyboardEventKey('z', isKeySupported):\n        keydownAction = 'toggleZoom';\n        break;\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\n        axis = 'x';\n        break;\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\n        axis = 'y';\n        break;\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\n        axis = 'x';\n        isForward = true;\n        break;\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\n        isForward = true;\n        axis = 'y';\n        break;\n      case getKeyboardEventKey('Tab', isKeySupported):\n        this._focusRoot();\n        break;\n      default:\n    }\n\n    // if left/right/top/bottom key\n    if (axis) {\n      // prevent page scroll\n      e.preventDefault();\n\n      const { currSlide } = pswp;\n\n      if (pswp.options.arrowKeys\n          && axis === 'x'\n          && pswp.getNumItems() > 1) {\n        keydownAction = isForward ? 'next' : 'prev';\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\n        // up/down arrow keys pan the image vertically\n        // left/right arrow keys pan horizontally.\n        // Unless there is only one image,\n        // or arrowKeys option is disabled\n        currSlide.pan[axis] += isForward ? -80 : 80;\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\n      }\n    }\n\n    if (keydownAction) {\n      e.preventDefault();\n      // @ts-ignore\n      pswp[keydownAction]();\n    }\n  }\n\n  /**\n   * Trap focus inside photoswipe\n   *\n   * @private\n   * @param {FocusEvent} e\n   */\n  _onFocusIn(e) {\n    const { template } = this.pswp;\n    if (template\n        && document !== e.target\n        && template !== e.target\n        && !template.contains(/** @type {Node} */ (e.target))) {\n      // focus root element\n      template.focus();\n    }\n  }\n}\n\nexport default Keyboard;\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\n\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\n\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\n\n/** @typedef {Object} DefaultCssAnimationProps\n *\n * @prop {HTMLElement} target\n * @prop {number} [duration]\n * @prop {string} [easing]\n * @prop {string} [transform]\n * @prop {string} [opacity]\n * */\n\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\n\n/**\n * Runs CSS transition.\n */\nclass CSSAnimation {\n  /**\n   * onComplete can be unpredictable, be careful about current state\n   *\n   * @param {CssAnimationProps} props\n   */\n  constructor(props) {\n    this.props = props;\n    const {\n      target,\n      onComplete,\n      transform,\n      onFinish = () => {},\n      duration = 333,\n      easing = DEFAULT_EASING,\n    } = props;\n\n    this.onFinish = onFinish;\n\n    // support only transform and opacity\n    const prop = transform ? 'transform' : 'opacity';\n    const propValue = props[prop] ?? '';\n\n    /** @private */\n    this._target = target;\n    /** @private */\n    this._onComplete = onComplete;\n    /** @private */\n    this._finished = false;\n\n    /** @private */\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\n\n    // Using timeout hack to make sure that animation\n    // starts even if the animated property was changed recently,\n    // otherwise transitionend might not fire or transition won't start.\n    // https://drafts.csswg.org/css-transitions/#starting\n    //\n    // ¯\\_(ツ)_/¯\n    /** @private */\n    this._helperTimeout = setTimeout(() => {\n      setTransitionStyle(target, prop, duration, easing);\n      this._helperTimeout = setTimeout(() => {\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\n\n        // Safari occasionally does not emit transitionend event\n        // if element property was modified during the transition,\n        // which may be caused by resize or third party component,\n        // using timeout as a safety fallback\n        this._helperTimeout = setTimeout(() => {\n          this._finalizeAnimation();\n        }, duration + 500);\n        target.style[prop] = propValue;\n      }, 30); // Do not reduce this number\n    }, 0);\n  }\n\n  /**\n   * @private\n   * @param {TransitionEvent} e\n   */\n  _onTransitionEnd(e) {\n    if (e.target === this._target) {\n      this._finalizeAnimation();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _finalizeAnimation() {\n    if (!this._finished) {\n      this._finished = true;\n      this.onFinish();\n      if (this._onComplete) {\n        this._onComplete();\n      }\n    }\n  }\n\n  // Destroy is called automatically onFinish\n  destroy() {\n    if (this._helperTimeout) {\n      clearTimeout(this._helperTimeout);\n    }\n    removeTransitionStyle(this._target);\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\n    if (!this._finished) {\n      this._finalizeAnimation();\n    }\n  }\n}\n\nexport default CSSAnimation;\n","const DEFAULT_NATURAL_FREQUENCY = 12;\nconst DEFAULT_DAMPING_RATIO = 0.75;\n\n/**\n * Spring easing helper\n */\nclass SpringEaser {\n  /**\n   * @param {number} initialVelocity Initial velocity, px per ms.\n   *\n   * @param {number} [dampingRatio]\n   * Determines how bouncy animation will be.\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\n   * \"overshoot\" refers to part of animation that\n   * goes beyond the final value.\n   *\n   * @param {number} [naturalFrequency]\n   * Determines how fast animation will slow down.\n   * The higher value - the stiffer the transition will be,\n   * and the faster it will slow down.\n   * Recommended value from 10 to 50\n   */\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\n\n    // https://en.wikipedia.org/wiki/Damping_ratio\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\n\n    // https://en.wikipedia.org/wiki/Natural_frequency\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\n\n    this._dampedFrequency = this._naturalFrequency;\n\n    if (this._dampingRatio < 1) {\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\n    }\n  }\n\n  /**\n   * @param {number} deltaPosition Difference between current and end position of the animation\n   * @param {number} deltaTime Frame duration in milliseconds\n   *\n   * @returns {number} Displacement, relative to the end position.\n   */\n  easeFrame(deltaPosition, deltaTime) {\n    // Inspired by Apple Webkit and Android spring function implementation\n    // https://en.wikipedia.org/wiki/Oscillation\n    // https://en.wikipedia.org/wiki/Damping_ratio\n    // we ignore mass (assume that it's 1kg)\n\n    let displacement = 0;\n    let coeff;\n\n    deltaTime /= 1000;\n\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\n\n    if (this._dampingRatio === 1) {\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\n\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\n\n      this.velocity = displacement\n                        * (-this._naturalFrequency) + coeff\n                        * naturalDumpingPow;\n    } else if (this._dampingRatio < 1) {\n      coeff = (1 / this._dampedFrequency)\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\n\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\n\n      displacement = naturalDumpingPow\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\n\n      this.velocity = displacement\n                        * (-this._naturalFrequency)\n                        * this._dampingRatio\n                        + naturalDumpingPow\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\n                        + this._dampedFrequency * coeff * dumpedFCos);\n    }\n\n    // Overdamped (>1) damping ratio is not supported\n\n    return displacement;\n  }\n}\n\nexport default SpringEaser;\n","import SpringEaser from './spring-easer.js';\n\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\n\n/**\n * @typedef {Object} DefaultSpringAnimationProps\n *\n * @prop {number} start\n * @prop {number} end\n * @prop {number} velocity\n * @prop {number} [dampingRatio]\n * @prop {number} [naturalFrequency]\n * @prop {(end: number) => void} onUpdate\n */\n\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\n\nclass SpringAnimation {\n  /**\n   * @param {SpringAnimationProps} props\n   */\n  constructor(props) {\n    this.props = props;\n    this._raf = 0;\n\n    const {\n      start,\n      end,\n      velocity,\n      onUpdate,\n      onComplete,\n      onFinish = () => {},\n      dampingRatio,\n      naturalFrequency\n    } = props;\n\n    this.onFinish = onFinish;\n\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\n    let prevTime = Date.now();\n    let deltaPosition = start - end;\n\n    const animationLoop = () => {\n      if (this._raf) {\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\n\n        // Stop the animation if velocity is low and position is close to end\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\n          // Finalize the animation\n          onUpdate(end);\n          if (onComplete) {\n            onComplete();\n          }\n          this.onFinish();\n        } else {\n          prevTime = Date.now();\n          onUpdate(deltaPosition + end);\n          this._raf = requestAnimationFrame(animationLoop);\n        }\n      }\n    };\n\n    this._raf = requestAnimationFrame(animationLoop);\n  }\n\n  // Destroy is called automatically onFinish\n  destroy() {\n    if (this._raf >= 0) {\n      cancelAnimationFrame(this._raf);\n    }\n    this._raf = 0;\n  }\n}\n\nexport default SpringAnimation;\n","import CSSAnimation from './css-animation.js';\nimport SpringAnimation from './spring-animation.js';\n\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\n\n/** @typedef {Object} SharedAnimationProps\n * @prop {string} [name]\n * @prop {boolean} [isPan]\n * @prop {boolean} [isMainScroll]\n * @prop {VoidFunction} [onComplete]\n * @prop {VoidFunction} [onFinish]\n */\n\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\n\n/**\n * Manages animations\n */\nclass Animations {\n  constructor() {\n    /** @type {Animation[]} */\n    this.activeAnimations = [];\n  }\n\n  /**\n   * @param {SpringAnimationProps} props\n   */\n  startSpring(props) {\n    this._start(props, true);\n  }\n\n  /**\n   * @param {CssAnimationProps} props\n   */\n  startTransition(props) {\n    this._start(props);\n  }\n\n  /**\n   * @private\n   * @param {AnimationProps} props\n   * @param {boolean} [isSpring]\n   * @returns {Animation}\n   */\n  _start(props, isSpring) {\n    const animation = isSpring\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\n\n    this.activeAnimations.push(animation);\n    animation.onFinish = () => this.stop(animation);\n\n    return animation;\n  }\n\n  /**\n   * @param {Animation} animation\n   */\n  stop(animation) {\n    animation.destroy();\n    const index = this.activeAnimations.indexOf(animation);\n    if (index > -1) {\n      this.activeAnimations.splice(index, 1);\n    }\n  }\n\n  stopAll() { // _stopAllAnimations\n    this.activeAnimations.forEach((animation) => {\n      animation.destroy();\n    });\n    this.activeAnimations = [];\n  }\n\n  /**\n   * Stop all pan or zoom transitions\n   */\n  stopAllPan() {\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\n      if (animation.props.isPan) {\n        animation.destroy();\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  stopMainScroll() {\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\n      if (animation.props.isMainScroll) {\n        animation.destroy();\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  /**\n   * Returns true if main scroll transition is running\n   */\n  // isMainScrollRunning() {\n  //   return this.activeAnimations.some((animation) => {\n  //     return animation.props.isMainScroll;\n  //   });\n  // }\n\n  /**\n   * Returns true if any pan or zoom transition is running\n   */\n  isPanRunning() {\n    return this.activeAnimations.some((animation) => {\n      return animation.props.isPan;\n    });\n  }\n}\n\nexport default Animations;\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\n * Handles scroll wheel.\n * Can pan and zoom current slide image.\n */\nclass ScrollWheel {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\n  }\n\n  /**\n   * @private\n   * @param {WheelEvent} e\n   */\n  _onWheel(e) {\n    e.preventDefault();\n    const { currSlide } = this.pswp;\n    let { deltaX, deltaY } = e;\n\n    if (!currSlide) {\n      return;\n    }\n\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\n      return;\n    }\n\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\n      // zoom\n      if (currSlide.isZoomable()) {\n        let zoomFactor = -deltaY;\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\n          zoomFactor *= 0.05;\n        } else {\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\n        }\n        zoomFactor = 2 ** zoomFactor;\n\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\n        currSlide.zoomTo(destZoomLevel, {\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    } else {\n      // pan\n      if (currSlide.isPannable()) {\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\n          // 18 - average line height\n          deltaX *= 18;\n          deltaY *= 18;\n        }\n\n        currSlide.panTo(\n          currSlide.pan.x - deltaX,\n          currSlide.pan.y - deltaY\n        );\n      }\n    }\n  }\n}\n\nexport default ScrollWheel;\n","import { createElement } from '../util/util.js';\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\n * @template T\n * @typedef {import('../types.js').Methods<T>} Methods<T>\n */\n\n/**\n * @typedef {Object} UIElementMarkupProps\n * @prop {boolean} [isCustomSVG]\n * @prop {string} inner\n * @prop {string} [outlineID]\n * @prop {number | string} [size]\n */\n\n/**\n * @typedef {Object} UIElementData\n * @prop {DefaultUIElements | string} [name]\n * @prop {string} [className]\n * @prop {UIElementMarkup} [html]\n * @prop {boolean} [isButton]\n * @prop {keyof HTMLElementTagNameMap} [tagName]\n * @prop {string} [title]\n * @prop {string} [ariaLabel]\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\n * @prop {number} [order]\n */\n\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\n\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\n\n/**\n * @param {UIElementMarkup} [htmlData]\n * @returns {string}\n */\nfunction addElementHTML(htmlData) {\n  if (typeof htmlData === 'string') {\n    // Allow developers to provide full svg,\n    // For example:\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\n    //   <path d=\"...\" />\n    //   <circle ... />\n    // </svg>\n    // Can also be any HTML string.\n    return htmlData;\n  }\n\n  if (!htmlData || !htmlData.isCustomSVG) {\n    return '';\n  }\n\n  const svgData = htmlData;\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\n  // replace all %d with size\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\n\n  // Icons may contain outline/shadow,\n  // to make it we \"clone\" base icon shape and add border to it.\n  // Icon itself and border are styled via CSS.\n  //\n  // Property shadowID defines ID of element that should be cloned.\n  if (svgData.outlineID) {\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\n  }\n\n  out += svgData.inner;\n\n  out += '</svg>';\n\n  return out;\n}\n\nclass UIElement {\n  /**\n   * @param {PhotoSwipe} pswp\n   * @param {UIElementData} data\n   */\n  constructor(pswp, data) {\n    const name = data.name || data.className;\n    let elementHTML = data.html;\n\n    // @ts-expect-error lookup only by `data.name` maybe?\n    if (pswp.options[name] === false) {\n      // exit if element is disabled from options\n      return;\n    }\n\n    // Allow to override SVG icons from options\n    // @ts-expect-error lookup only by `data.name` maybe?\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\n      // arrowPrevSVG\n      // arrowNextSVG\n      // closeSVG\n      // zoomSVG\n      // @ts-expect-error lookup only by `data.name` maybe?\n      elementHTML = pswp.options[name + 'SVG'];\n    }\n\n    pswp.dispatch('uiElementCreate', { data });\n\n    let className = '';\n    if (data.isButton) {\n      className += 'pswp__button ';\n      className += (data.className || `pswp__button--${data.name}`);\n    } else {\n      className += (data.className || `pswp__${data.name}`);\n    }\n\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\n    /** @type {HTMLElement} */\n    const element = createElement(className, tagName);\n\n    if (data.isButton) {\n      if (tagName === 'button') {\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\n      }\n\n      let { title } = data;\n      const { ariaLabel } = data;\n\n      // @ts-expect-error lookup only by `data.name` maybe?\n      if (typeof pswp.options[name + 'Title'] === 'string') {\n        // @ts-expect-error lookup only by `data.name` maybe?\n        title = pswp.options[name + 'Title'];\n      }\n\n      if (title) {\n        element.title = title;\n      }\n\n      const ariaText = ariaLabel || title;\n      if (ariaText) {\n        element.setAttribute('aria-label', ariaText);\n      }\n    }\n\n    element.innerHTML = addElementHTML(elementHTML);\n\n    if (data.onInit) {\n      data.onInit(element, pswp);\n    }\n\n    if (data.onClick) {\n      element.onclick = (e) => {\n        if (typeof data.onClick === 'string') {\n          // @ts-ignore\n          pswp[data.onClick]();\n        } else if (typeof data.onClick === 'function') {\n          data.onClick(e, element, pswp);\n        }\n      };\n    }\n\n    // Top bar is default position\n    const appendTo = data.appendTo || 'bar';\n    /** @type {HTMLElement | undefined} root element by default */\n    let container = pswp.element;\n    if (appendTo === 'bar') {\n      if (!pswp.topBar) {\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\n      }\n      container = pswp.topBar;\n    } else {\n      // element outside of top bar gets a secondary class\n      // that makes element fade out on close\n      element.classList.add('pswp__hide-on-close');\n\n      if (appendTo === 'wrapper') {\n        container = pswp.scrollWrap;\n      }\n    }\n\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\n  }\n}\n\nexport default UIElement;\n","/*\n  Backward and forward arrow buttons\n */\n\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\n *\n * @param {HTMLElement} element\n * @param {PhotoSwipe} pswp\n * @param {boolean} [isNextButton]\n */\nfunction initArrowButton(element, pswp, isNextButton) {\n  element.classList.add('pswp__button--arrow');\n  // TODO: this should point to a unique id for this instance\n  element.setAttribute('aria-controls', 'pswp__items');\n  pswp.on('change', () => {\n    if (!pswp.options.loop) {\n      if (isNextButton) {\n        /** @type {HTMLButtonElement} */\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\n      } else {\n        /** @type {HTMLButtonElement} */\n        (element).disabled = !(pswp.currIndex > 0);\n      }\n    }\n  });\n}\n\n/** @type {UIElementData} */\nexport const arrowPrev = {\n  name: 'arrowPrev',\n  className: 'pswp__button--arrow--prev',\n  title: 'Previous',\n  order: 10,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'prev',\n  onInit: initArrowButton\n};\n\n/** @type {UIElementData} */\nexport const arrowNext = {\n  name: 'arrowNext',\n  className: 'pswp__button--arrow--next',\n  title: 'Next',\n  order: 11,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'next',\n  onInit: (el, pswp) => {\n    initArrowButton(el, pswp, true);\n  }\n};\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst closeButton = {\n  name: 'close',\n  title: 'Close',\n  order: 20,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\n    outlineID: 'pswp__icn-close'\n  },\n  onClick: 'close'\n};\n\nexport default closeButton;\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst zoomButton = {\n  name: 'zoom',\n  title: 'Zoom',\n  order: 10,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\n    outlineID: 'pswp__icn-zoom'\n  },\n  onClick: 'toggleZoom'\n};\n\nexport default zoomButton;\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\nexport const loadingIndicator = {\n  name: 'preloader',\n  appendTo: 'bar',\n  order: 7,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\n    outlineID: 'pswp__icn-loading'\n  },\n  onInit: (indicatorElement, pswp) => {\n    /** @type {boolean | undefined} */\n    let isVisible;\n    /** @type {NodeJS.Timeout | null} */\n    let delayTimeout = null;\n\n    /**\n     * @param {string} className\n     * @param {boolean} add\n     */\n    const toggleIndicatorClass = (className, add) => {\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\n    };\n\n    /**\n     * @param {boolean} visible\n     */\n    const setIndicatorVisibility = (visible) => {\n      if (isVisible !== visible) {\n        isVisible = visible;\n        toggleIndicatorClass('active', visible);\n      }\n    };\n\n    const updatePreloaderVisibility = () => {\n      if (!pswp.currSlide?.content.isLoading()) {\n        setIndicatorVisibility(false);\n        if (delayTimeout) {\n          clearTimeout(delayTimeout);\n          delayTimeout = null;\n        }\n        return;\n      }\n\n      if (!delayTimeout) {\n        // display loading indicator with delay\n        delayTimeout = setTimeout(() => {\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\n          delayTimeout = null;\n        }, pswp.options.preloaderDelay);\n      }\n    };\n\n    pswp.on('change', updatePreloaderVisibility);\n\n    pswp.on('loadComplete', (e) => {\n      if (pswp.currSlide === e.slide) {\n        updatePreloaderVisibility();\n      }\n    });\n\n    // expose the method\n    if (pswp.ui) {\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\n    }\n  }\n};\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\nexport const counterIndicator = {\n  name: 'counter',\n  order: 5,\n  onInit: (counterElement, pswp) => {\n    pswp.on('change', () => {\n      counterElement.innerText = (pswp.currIndex + 1)\n                                  + pswp.options.indexIndicatorSep\n                                  + pswp.getNumItems();\n    });\n  }\n};\n","import UIElement from './ui-element.js';\nimport { arrowPrev, arrowNext } from './button-arrow.js';\nimport closeButton from './button-close.js';\nimport zoomButton from './button-zoom.js';\nimport { loadingIndicator } from './loading-indicator.js';\nimport { counterIndicator } from './counter-indicator.js';\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n\n/**\n * Set special class on element when image is zoomed.\n *\n * By default, it is used to adjust\n * zoom icon and zoom cursor via CSS.\n *\n * @param {HTMLElement} el\n * @param {boolean} isZoomedIn\n */\nfunction setZoomedIn(el, isZoomedIn) {\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\n}\n\nclass UI {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.isRegistered = false;\n    /** @type {UIElementData[]} */\n    this.uiElementsData = [];\n    /** @type {(UIElement | UIElementData)[]} */\n    this.items = [];\n    /** @type {() => void} */\n    this.updatePreloaderVisibility = () => {};\n\n    /**\n     * @private\n     * @type {number | undefined}\n     */\n    this._lastUpdatedZoomLevel = undefined;\n  }\n\n  init() {\n    const { pswp } = this;\n    this.isRegistered = false;\n    this.uiElementsData = [\n      closeButton,\n      arrowPrev,\n      arrowNext,\n      zoomButton,\n      loadingIndicator,\n      counterIndicator\n    ];\n\n    pswp.dispatch('uiRegister');\n\n    // sort by order\n    this.uiElementsData.sort((a, b) => {\n      // default order is 0\n      return (a.order || 0) - (b.order || 0);\n    });\n\n    this.items = [];\n\n    this.isRegistered = true;\n    this.uiElementsData.forEach((uiElementData) => {\n      this.registerElement(uiElementData);\n    });\n\n    pswp.on('change', () => {\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\n    });\n\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\n  }\n\n  /**\n   * @param {UIElementData} elementData\n   */\n  registerElement(elementData) {\n    if (this.isRegistered) {\n      this.items.push(\n        new UIElement(this.pswp, elementData)\n      );\n    } else {\n      this.uiElementsData.push(elementData);\n    }\n  }\n\n  /**\n   * Fired each time zoom or pan position is changed.\n   * Update classes that control visibility of zoom button and cursor icon.\n   *\n   * @private\n   */\n  _onZoomPanUpdate() {\n    const { template, currSlide, options } = this.pswp;\n\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\n      return;\n    }\n\n    let { currZoomLevel } = currSlide;\n\n    // if not open yet - check against initial zoom level\n    if (!this.pswp.opener.isOpen) {\n      currZoomLevel = currSlide.zoomLevels.initial;\n    }\n\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\n      return;\n    }\n    this._lastUpdatedZoomLevel = currZoomLevel;\n\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\n\n    // Initial and secondary zoom levels are almost equal\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\n      // disable zoom\n      setZoomedIn(template, false);\n      template.classList.remove('pswp--zoom-allowed');\n      return;\n    }\n\n    template.classList.add('pswp--zoom-allowed');\n\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\n\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\n\n    if (options.imageClickAction === 'zoom'\n        || options.imageClickAction === 'zoom-or-close') {\n      template.classList.add('pswp--click-to-zoom');\n    }\n  }\n}\n\nexport default UI;\n","/** @typedef {import('./slide.js').SlideData} SlideData */\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\n\n/**\n * @param {HTMLElement} el\n * @returns Bounds\n */\nfunction getBoundsByElement(el) {\n  const thumbAreaRect = el.getBoundingClientRect();\n  return {\n    x: thumbAreaRect.left,\n    y: thumbAreaRect.top,\n    w: thumbAreaRect.width\n  };\n}\n\n/**\n * @param {HTMLElement} el\n * @param {number} imageWidth\n * @param {number} imageHeight\n * @returns Bounds\n */\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\n  const thumbAreaRect = el.getBoundingClientRect();\n\n  // fill image into the area\n  // (do they same as object-fit:cover does to retrieve coordinates)\n  const hRatio = thumbAreaRect.width / imageWidth;\n  const vRatio = thumbAreaRect.height / imageHeight;\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\n\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\n\n  /**\n   * Coordinates of the image,\n   * as if it was not cropped,\n   * height is calculated automatically\n   *\n   * @type {Bounds}\n   */\n  const bounds = {\n    x: thumbAreaRect.left + offsetX,\n    y: thumbAreaRect.top + offsetY,\n    w: imageWidth * fillZoomLevel\n  };\n\n  // Coordinates of inner crop area\n  // relative to the image\n  bounds.innerRect = {\n    w: thumbAreaRect.width,\n    h: thumbAreaRect.height,\n    x: offsetX,\n    y: offsetY\n  };\n\n  return bounds;\n}\n\n/**\n * Get dimensions of thumbnail image\n * (click on which opens photoswipe or closes photoswipe to)\n *\n * @param {number} index\n * @param {SlideData} itemData\n * @param {PhotoSwipe} instance PhotoSwipe instance\n * @returns {Bounds | undefined}\n */\nexport function getThumbBounds(index, itemData, instance) {\n  // legacy event, before filters were introduced\n  const event = instance.dispatch('thumbBounds', {\n    index,\n    itemData,\n    instance\n  });\n  // @ts-expect-error\n  if (event.thumbBounds) {\n    // @ts-expect-error\n    return event.thumbBounds;\n  }\n\n  const { element } = itemData;\n  /** @type {Bounds | undefined} */\n  let thumbBounds;\n  /** @type {HTMLElement | null | undefined} */\n  let thumbnail;\n\n  if (element && instance.options.thumbSelector !== false) {\n    const thumbSelector = instance.options.thumbSelector || 'img';\n    thumbnail = element.matches(thumbSelector)\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\n  }\n\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\n\n  if (thumbnail) {\n    if (!itemData.thumbCropped) {\n      thumbBounds = getBoundsByElement(thumbnail);\n    } else {\n      thumbBounds = getCroppedBoundsByElement(\n        thumbnail,\n        itemData.width || itemData.w || 0,\n        itemData.height || itemData.h || 0\n      );\n    }\n  }\n\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\n}\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n/** @typedef {import('../slide/slide.js').default} Slide */\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\n * Allow adding an arbitrary props to the Content\n * https://photoswipe.com/custom-content/#using-webp-image-format\n * @typedef {ContentDefault & Record<string, any>} Content\n */\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\n *\n *\n * https://photoswipe.com/adding-ui-elements/\n *\n * @prop {undefined} uiRegister\n * @prop {{ data: UIElementData }} uiElementCreate\n *\n *\n * https://photoswipe.com/events/#initialization-events\n *\n * @prop {undefined} beforeOpen\n * @prop {undefined} firstUpdate\n * @prop {undefined} initialLayout\n * @prop {undefined} change\n * @prop {undefined} afterInit\n * @prop {undefined} bindEvents\n *\n *\n * https://photoswipe.com/events/#opening-or-closing-transition-events\n *\n * @prop {undefined} openingAnimationStart\n * @prop {undefined} openingAnimationEnd\n * @prop {undefined} closingAnimationStart\n * @prop {undefined} closingAnimationEnd\n *\n *\n * https://photoswipe.com/events/#closing-events\n *\n * @prop {undefined} close\n * @prop {undefined} destroy\n *\n *\n * https://photoswipe.com/events/#pointer-and-gesture-events\n *\n * @prop {{ originalEvent: PointerEvent }} pointerDown\n * @prop {{ originalEvent: PointerEvent }} pointerMove\n * @prop {{ originalEvent: PointerEvent }} pointerUp\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\n * @prop {{ panY: number }} verticalDrag can be default prevented\n *\n *\n * https://photoswipe.com/events/#slide-content-events\n *\n * @prop {{ content: Content }} contentInit\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\n * @prop {{ content: Content; slide: Slide }} loadError\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\n * @prop {{ content: Content }} contentAppend can be default prevented\n * @prop {{ content: Content }} contentActivate can be default prevented\n * @prop {{ content: Content }} contentDeactivate can be default prevented\n * @prop {{ content: Content }} contentRemove can be default prevented\n * @prop {{ content: Content }} contentDestroy can be default prevented\n *\n *\n * undocumented\n *\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\n *\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\n * @prop {{ slide: Slide }} firstZoomPan\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\n * @prop {undefined} beforeResize\n * @prop {undefined} resize\n * @prop {undefined} viewportSize\n * @prop {undefined} updateScrollOffset\n * @prop {{ slide: Slide }} slideInit\n * @prop {{ slide: Slide }} afterSetContent\n * @prop {{ slide: Slide }} slideLoad\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\n * @prop {{ slide: Slide }} appendHeavyContent\n * @prop {{ slide: Slide }} slideActivate\n * @prop {{ slide: Slide }} slideDeactivate\n * @prop {{ slide: Slide }} slideDestroy\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\n * @prop {{ slide: Slide }} zoomPanUpdate\n * @prop {{ slide: Slide }} initialZoomPan\n * @prop {{ slide: Slide }} calcSlideSize\n * @prop {undefined} resolutionChanged\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\n * @prop {{ content: Content }} contentAppendImage can be default prevented\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\n * @prop {undefined} lazyLoad\n * @prop {{ slide: Slide }} calcBounds\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\n *\n *\n * legacy\n *\n * @prop {undefined} init\n * @prop {undefined} initialZoomIn\n * @prop {undefined} initialZoomOut\n * @prop {undefined} initialZoomInEnd\n * @prop {undefined} initialZoomOutEnd\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\n * @prop {{ itemData: SlideData; index: number }} itemData\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\n */\n\n/**\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\n *\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\n * Modify the total amount of slides. Example on Data sources page.\n * https://photoswipe.com/filters/#numitems\n *\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\n * Modify slide item data. Example on Data sources page.\n * https://photoswipe.com/filters/#itemdata\n *\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\n * https://photoswipe.com/filters/#domitemdata\n *\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\n * Modify clicked gallery item index.\n * https://photoswipe.com/filters/#clickedindex\n *\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\n * Modify placeholder image source.\n * https://photoswipe.com/filters/#placeholdersrc\n *\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\n * Modify if the content is currently loading.\n * https://photoswipe.com/filters/#iscontentloading\n *\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\n * Modify if the content can be zoomed.\n * https://photoswipe.com/filters/#iscontentzoomable\n *\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\n * Modify if the placeholder should be used for the content.\n * https://photoswipe.com/filters/#usecontentplaceholder\n *\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\n * Modify if the placeholder should be kept after the content is loaded.\n * https://photoswipe.com/filters/#iskeepingplaceholder\n *\n *\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\n * Modify an element when the content has error state (for example, if image cannot be loaded).\n * https://photoswipe.com/filters/#contenterrorelement\n *\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\n * Modify a UI element that's being created.\n * https://photoswipe.com/filters/#uielement\n *\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\n * Modify the thubmnail element from which opening zoom animation starts or ends.\n * https://photoswipe.com/filters/#thumbel\n *\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\n * https://photoswipe.com/filters/#thumbbounds\n *\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\n *\n */\n\n/**\n * @template {keyof PhotoSwipeFiltersMap} T\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\n */\n\n/**\n * @template {keyof PhotoSwipeEventsMap} T\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\n */\n\n/**\n * @template {keyof PhotoSwipeEventsMap} T\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\n */\n\n/**\n * Base PhotoSwipe event object\n *\n * @template {keyof PhotoSwipeEventsMap} T\n */\nclass PhotoSwipeEvent {\n  /**\n   * @param {T} type\n   * @param {PhotoSwipeEventsMap[T]} [details]\n   */\n  constructor(type, details) {\n    this.type = type;\n    this.defaultPrevented = false;\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n}\n\n/**\n * PhotoSwipe base class that can listen and dispatch for events.\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\n */\nclass Eventable {\n  constructor() {\n    /**\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\n     */\n    this._listeners = {};\n\n    /**\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\n     */\n    this._filters = {};\n\n    /** @type {PhotoSwipe | undefined} */\n    this.pswp = undefined;\n\n    /** @type {PhotoSwipeOptions | undefined} */\n    this.options = undefined;\n  }\n\n  /**\n   * @template {keyof PhotoSwipeFiltersMap} T\n   * @param {T} name\n   * @param {PhotoSwipeFiltersMap[T]} fn\n   * @param {number} priority\n   */\n  addFilter(name, fn, priority = 100) {\n    if (!this._filters[name]) {\n      this._filters[name] = [];\n    }\n\n    this._filters[name]?.push({ fn, priority });\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\n\n    this.pswp?.addFilter(name, fn, priority);\n  }\n\n  /**\n   * @template {keyof PhotoSwipeFiltersMap} T\n   * @param {T} name\n   * @param {PhotoSwipeFiltersMap[T]} fn\n   */\n  removeFilter(name, fn) {\n    if (this._filters[name]) {\n      // @ts-expect-error\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\n    }\n\n    if (this.pswp) {\n      this.pswp.removeFilter(name, fn);\n    }\n  }\n\n  /**\n   * @template {keyof PhotoSwipeFiltersMap} T\n   * @param {T} name\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\n   */\n  applyFilters(name, ...args) {\n    this._filters[name]?.forEach((filter) => {\n      // @ts-expect-error\n      args[0] = filter.fn.apply(this, args);\n    });\n    return args[0];\n  }\n\n  /**\n   * @template {keyof PhotoSwipeEventsMap} T\n   * @param {T} name\n   * @param {EventCallback<T>} fn\n   */\n  on(name, fn) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n    this._listeners[name]?.push(fn);\n\n    // When binding events to lightbox,\n    // also bind events to PhotoSwipe Core,\n    // if it's open.\n    this.pswp?.on(name, fn);\n  }\n\n  /**\n   * @template {keyof PhotoSwipeEventsMap} T\n   * @param {T} name\n   * @param {EventCallback<T>} fn\n   */\n  off(name, fn) {\n    if (this._listeners[name]) {\n      // @ts-expect-error\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\n    }\n\n    this.pswp?.off(name, fn);\n  }\n\n  /**\n   * @template {keyof PhotoSwipeEventsMap} T\n   * @param {T} name\n   * @param {PhotoSwipeEventsMap[T]} [details]\n   * @returns {AugmentedEvent<T>}\n   */\n  dispatch(name, details) {\n    if (this.pswp) {\n      return this.pswp.dispatch(name, details);\n    }\n\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\n\n    this._listeners[name]?.forEach((listener) => {\n      listener.call(this, event);\n    });\n\n    return event;\n  }\n}\n\nexport default Eventable;\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\n\nclass Placeholder {\n  /**\n   * @param {string | false} imageSrc\n   * @param {HTMLElement} container\n   */\n  constructor(imageSrc, container) {\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\n    this.element = createElement(\n      'pswp__img pswp__img--placeholder',\n      imageSrc ? 'img' : 'div',\n      container\n    );\n\n    if (imageSrc) {\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\n      imgEl.decoding = 'async';\n      imgEl.alt = '';\n      imgEl.src = imageSrc;\n      imgEl.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.element.tagName === 'IMG') {\n      // Use transform scale() to modify img placeholder size\n      // (instead of changing width/height directly).\n      // This helps with performance, specifically in iOS15 Safari.\n      setWidthHeight(this.element, 250, 'auto');\n      this.element.style.transformOrigin = '0 0';\n      this.element.style.transform = toTransformString(0, 0, width / 250);\n    } else {\n      setWidthHeight(this.element, width, height);\n    }\n  }\n\n  destroy() {\n    if (this.element?.parentNode) {\n      this.element.remove();\n    }\n    this.element = null;\n  }\n}\n\nexport default Placeholder;\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\nimport Placeholder from './placeholder.js';\n\n/** @typedef {import('./slide.js').default} Slide */\n/** @typedef {import('./slide.js').SlideData} SlideData */\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\nclass Content {\n  /**\n   * @param {SlideData} itemData Slide data\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\n   * @param {number} index\n   */\n  constructor(itemData, instance, index) {\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\n    this.element = undefined;\n    /** @type {Placeholder | undefined} */\n    this.placeholder = undefined;\n    /** @type {Slide | undefined} */\n    this.slide = undefined;\n\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n\n    this.isAttached = false;\n    this.hasSlide = false;\n    this.isDecoding = false;\n    /** @type {LoadState} */\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', { content: this });\n  }\n\n  removePlaceholder() {\n    if (this.placeholder && !this.keepPlaceholder()) {\n      // With delay, as image might be loaded, but not rendered\n      setTimeout(() => {\n        if (this.placeholder) {\n          this.placeholder.destroy();\n          this.placeholder = undefined;\n        }\n      }, 1000);\n    }\n  }\n\n  /**\n   * Preload content\n   *\n   * @param {boolean} isLazy\n   * @param {boolean} [reload]\n   */\n  load(isLazy, reload) {\n    if (this.slide && this.usePlaceholder()) {\n      if (!this.placeholder) {\n        const placeholderSrc = this.instance.applyFilters(\n          'placeholderSrc',\n          // use  image-based placeholder only for the first slide,\n          // as rendering (even small stretched thumbnail) is an expensive operation\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\n          this\n        );\n        this.placeholder = new Placeholder(\n          placeholderSrc,\n          this.slide.container\n        );\n      } else {\n        const placeholderEl = this.placeholder.element;\n        // Add placeholder to DOM if it was already created\n        if (placeholderEl && !placeholderEl.parentElement) {\n          this.slide.container.prepend(placeholderEl);\n        }\n      }\n    }\n\n    if (this.element && !reload) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\n      return;\n    }\n\n    if (this.isImageContent()) {\n      this.element = createElement('pswp__img', 'img');\n      // Start loading only after width is defined, as sizes might depend on it.\n      // Due to Safari feature, we must define sizes before srcset.\n      if (this.displayedImageWidth) {\n        this.loadImage(isLazy);\n      }\n    } else {\n      this.element = createElement('pswp__content', 'div');\n      this.element.innerHTML = this.data.html || '';\n    }\n\n    if (reload && this.slide) {\n      this.slide.updateContentSize(true);\n    }\n  }\n\n  /**\n   * Preload image\n   *\n   * @param {boolean} isLazy\n   */\n  loadImage(isLazy) {\n    if (!this.isImageContent()\n      || !this.element\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\n      return;\n    }\n\n    const imageElement = /** @type HTMLImageElement */ (this.element);\n\n    this.updateSrcsetSizes();\n\n    if (this.data.srcset) {\n      imageElement.srcset = this.data.srcset;\n    }\n\n    imageElement.src = this.data.src ?? '';\n    imageElement.alt = this.data.alt ?? '';\n\n    this.state = LOAD_STATE.LOADING;\n\n    if (imageElement.complete) {\n      this.onLoaded();\n    } else {\n      imageElement.onload = () => {\n        this.onLoaded();\n      };\n\n      imageElement.onerror = () => {\n        this.onError();\n      };\n    }\n  }\n\n  /**\n   * Assign slide to content\n   *\n   * @param {Slide} slide\n   */\n  setSlide(slide) {\n    this.slide = slide;\n    this.hasSlide = true;\n    this.instance = slide.pswp;\n\n    // todo: do we need to unset slide?\n  }\n\n  /**\n   * Content load success handler\n   */\n  onLoaded() {\n    this.state = LOAD_STATE.LOADED;\n\n    if (this.slide && this.element) {\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\n\n      // if content is reloaded\n      if (this.slide.isActive\n          && this.slide.heavyAppended\n          && !this.element.parentNode) {\n        this.append();\n        this.slide.updateContentSize(true);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }\n\n  /**\n   * Content load error handler\n   */\n  onError() {\n    this.state = LOAD_STATE.ERROR;\n\n    if (this.slide) {\n      this.displayError();\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\n    }\n  }\n\n  /**\n   * @returns {Boolean} If the content is currently loading\n   */\n  isLoading() {\n    return this.instance.applyFilters(\n      'isContentLoading',\n      this.state === LOAD_STATE.LOADING,\n      this\n    );\n  }\n\n  /**\n   * @returns {Boolean} If the content is in error state\n   */\n  isError() {\n    return this.state === LOAD_STATE.ERROR;\n  }\n\n  /**\n   * @returns {boolean} If the content is image\n   */\n  isImageContent() {\n    return this.type === 'image';\n  }\n\n  /**\n   * Update content size\n   *\n   * @param {Number} width\n   * @param {Number} height\n   */\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.placeholder) {\n      this.placeholder.setDisplayedSize(width, height);\n    }\n\n    if (this.instance.dispatch(\n      'contentResize',\n      { content: this, width, height }).defaultPrevented\n    ) {\n      return;\n    }\n\n    setWidthHeight(this.element, width, height);\n\n    if (this.isImageContent() && !this.isError()) {\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\n\n      this.displayedImageWidth = width;\n      this.displayedImageHeight = height;\n\n      if (isInitialSizeUpdate) {\n        this.loadImage(false);\n      } else {\n        this.updateSrcsetSizes();\n      }\n\n      if (this.slide) {\n        this.instance.dispatch(\n          'imageSizeChange',\n          { slide: this.slide, width, height, content: this }\n        );\n      }\n    }\n  }\n\n  /**\n   * @returns {boolean} If the content can be zoomed\n   */\n  isZoomable() {\n    return this.instance.applyFilters(\n      'isContentZoomable',\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\n      this\n    );\n  }\n\n  /**\n   * Update image srcset sizes attribute based on width and height\n   */\n  updateSrcsetSizes() {\n    // Handle srcset sizes attribute.\n    //\n    // Never lower quality, if it was increased previously.\n    // Chrome does this automatically, Firefox and Safari do not,\n    // so we store largest used size in dataset.\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\n      return;\n    }\n\n    const image = /** @type HTMLImageElement */ (this.element);\n    const sizesWidth = this.instance.applyFilters(\n      'srcsetSizesWidth',\n      this.displayedImageWidth,\n      this\n    );\n\n    if (\n      !image.dataset.largestUsedSize\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\n    ) {\n      image.sizes = sizesWidth + 'px';\n      image.dataset.largestUsedSize = String(sizesWidth);\n    }\n  }\n\n  /**\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\n   */\n  usePlaceholder() {\n    return this.instance.applyFilters(\n      'useContentPlaceholder',\n      this.isImageContent(),\n      this\n    );\n  }\n\n  /**\n   * Preload content with lazy-loading param\n   */\n  lazyLoad() {\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\n      return;\n    }\n\n    this.load(true);\n  }\n\n  /**\n   * @returns {boolean} If placeholder should be kept after content is loaded\n   */\n  keepPlaceholder() {\n    return this.instance.applyFilters(\n      'isKeepingPlaceholder',\n      this.isLoading(),\n      this\n    );\n  }\n\n  /**\n   * Destroy the content\n   */\n  destroy() {\n    this.hasSlide = false;\n    this.slide = undefined;\n\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\n      return;\n    }\n\n    this.remove();\n\n    if (this.placeholder) {\n      this.placeholder.destroy();\n      this.placeholder = undefined;\n    }\n\n    if (this.isImageContent() && this.element) {\n      this.element.onload = null;\n      this.element.onerror = null;\n      this.element = undefined;\n    }\n  }\n\n  /**\n   * Display error message\n   */\n  displayError() {\n    if (this.slide) {\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\n        'contentErrorElement',\n        errorMsgEl,\n        this\n      ));\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\n      this.element.appendChild(errorMsgEl);\n      this.slide.container.innerText = '';\n      this.slide.container.appendChild(this.element);\n      this.slide.updateContentSize(true);\n      this.removePlaceholder();\n    }\n  }\n\n  /**\n   * Append the content\n   */\n  append() {\n    if (this.isAttached || !this.element) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.state === LOAD_STATE.ERROR) {\n      this.displayError();\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\n      return;\n    }\n\n    const supportsDecode = ('decode' in this.element);\n\n    if (this.isImageContent()) {\n      // Use decode() on nearby slides\n      //\n      // Nearby slide images are in DOM and not hidden via display:none.\n      // However, they are placed offscreen (to the left and right side).\n      //\n      // Some browsers do not composite the image until it's actually visible,\n      // using decode() helps.\n      //\n      // You might ask \"why dont you just decode() and then append all images\",\n      // that's because I want to show image before it's fully loaded,\n      // as browser can render parts of image while it is loading.\n      // We do not do this in Safari due to partial loading bug.\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n        this.isDecoding = true;\n        // purposefully using finally instead of then,\n        // as if srcset sizes changes dynamically - it may cause decode error\n        /** @type {HTMLImageElement} */\n        (this.element).decode().catch(() => {}).finally(() => {\n          this.isDecoding = false;\n          this.appendImage();\n        });\n      } else {\n        this.appendImage();\n      }\n    } else if (this.slide && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n  }\n\n  /**\n   * Activate the slide,\n   * active slide is generally the current one,\n   * meaning the user can see it.\n   */\n  activate() {\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\n      || !this.slide) {\n      return;\n    }\n\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\n      // add image to slide when it becomes active,\n      // even if it's not finished decoding\n      this.appendImage();\n    } else if (this.isError()) {\n      this.load(false, true); // try to reload\n    }\n\n    if (this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\n    }\n  }\n\n  /**\n   * Deactivate the content\n   */\n  deactivate() {\n    this.instance.dispatch('contentDeactivate', { content: this });\n    if (this.slide && this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n\n  /**\n   * Remove the content from DOM\n   */\n  remove() {\n    this.isAttached = false;\n\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\n      return;\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.remove();\n    }\n\n    if (this.placeholder && this.placeholder.element) {\n      this.placeholder.element.remove();\n    }\n  }\n\n  /**\n   * Append the image content to slide container\n   */\n  appendImage() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\n      return;\n    }\n\n    // ensure that element exists and is not already appended\n    if (this.slide && this.element && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n      this.removePlaceholder();\n    }\n  }\n}\n\nexport default Content;\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\nimport ZoomLevel from './zoom-level.js';\n\n/** @typedef {import('./content.js').default} Content */\n/** @typedef {import('./slide.js').default} Slide */\n/** @typedef {import('./slide.js').SlideData} SlideData */\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\nconst MIN_SLIDES_TO_CACHE = 5;\n\n/**\n * Lazy-load an image\n * This function is used both by Lightbox and PhotoSwipe core,\n * thus it can be called before dialog is opened.\n *\n * @param {SlideData} itemData Data about the slide\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\n * @param {number} index\n * @returns {Content} Image that is being decoded or false.\n */\nexport function lazyLoadData(itemData, instance, index) {\n  const content = instance.createContentFromData(itemData, index);\n  /** @type {ZoomLevel | undefined} */\n  let zoomLevel;\n\n  const { options } = instance;\n\n  // We need to know dimensions of the image to preload it,\n  // as it might use srcset, and we need to define sizes\n  if (options) {\n    zoomLevel = new ZoomLevel(options, itemData, -1);\n\n    let viewportSize;\n    if (instance.pswp) {\n      viewportSize = instance.pswp.viewportSize;\n    } else {\n      viewportSize = getViewportSize(options, instance);\n    }\n\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n    zoomLevel.update(content.width, content.height, panAreaSize);\n  }\n\n  content.lazyLoad();\n\n  if (zoomLevel) {\n    content.setDisplayedSize(\n      Math.ceil(content.width * zoomLevel.initial),\n      Math.ceil(content.height * zoomLevel.initial)\n    );\n  }\n\n  return content;\n}\n\n\n/**\n * Lazy-loads specific slide.\n * This function is used both by Lightbox and PhotoSwipe core,\n * thus it can be called before dialog is opened.\n *\n * By default, it loads image based on viewport size and initial zoom level.\n *\n * @param {number} index Slide index\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\n * @returns {Content | undefined}\n */\nexport function lazyLoadSlide(index, instance) {\n  const itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\n    return;\n  }\n\n  return lazyLoadData(itemData, instance, index);\n}\n\nclass ContentLoader {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    // Total amount of cached images\n    this.limit = Math.max(\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\n      MIN_SLIDES_TO_CACHE\n    );\n    /** @type {Content[]} */\n    this._cachedItems = [];\n  }\n\n  /**\n   * Lazy load nearby slides based on `preload` option.\n   *\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\n   */\n  updateLazy(diff) {\n    const { pswp } = this;\n\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\n      return;\n    }\n\n    const { preload } = pswp.options;\n    const isForward = diff === undefined ? true : (diff >= 0);\n    let i;\n\n    // preload[1] - num items to preload in forward direction\n    for (i = 0; i <= preload[1]; i++) {\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\n    }\n\n    // preload[0] - num items to preload in backward direction\n    for (i = 1; i <= preload[0]; i++) {\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\n    }\n  }\n\n  /**\n   * @param {number} initialIndex\n   */\n  loadSlideByIndex(initialIndex) {\n    const index = this.pswp.getLoopedIndex(initialIndex);\n    // try to get cached content\n    let content = this.getContentByIndex(index);\n    if (!content) {\n      // no cached content, so try to load from scratch:\n      content = lazyLoadSlide(index, this.pswp);\n      // if content can be loaded, add it to cache:\n      if (content) {\n        this.addToCache(content);\n      }\n    }\n  }\n\n  /**\n   * @param {Slide} slide\n   * @returns {Content}\n   */\n  getContentBySlide(slide) {\n    let content = this.getContentByIndex(slide.index);\n    if (!content) {\n      // create content if not found in cache\n      content = this.pswp.createContentFromData(slide.data, slide.index);\n      this.addToCache(content);\n    }\n\n    // assign slide to content\n    content.setSlide(slide);\n\n    return content;\n  }\n\n  /**\n   * @param {Content} content\n   */\n  addToCache(content) {\n    // move to the end of array\n    this.removeByIndex(content.index);\n    this._cachedItems.push(content);\n\n    if (this._cachedItems.length > this.limit) {\n      // Destroy the first content that's not attached\n      const indexToRemove = this._cachedItems.findIndex((item) => {\n        return !item.isAttached && !item.hasSlide;\n      });\n      if (indexToRemove !== -1) {\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\n        removedItem.destroy();\n      }\n    }\n  }\n\n  /**\n   * Removes an image from cache, does not destroy() it, just removes.\n   *\n   * @param {number} index\n   */\n  removeByIndex(index) {\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\n    if (indexToRemove !== -1) {\n      this._cachedItems.splice(indexToRemove, 1);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {Content | undefined}\n   */\n  getContentByIndex(index) {\n    return this._cachedItems.find(content => content.index === index);\n  }\n\n  destroy() {\n    this._cachedItems.forEach(content => content.destroy());\n    this._cachedItems = [];\n  }\n}\n\nexport default ContentLoader;\n","import Eventable from './eventable.js';\nimport { getElementsFromOption } from '../util/util.js';\nimport Content from '../slide/content.js';\nimport { lazyLoadData } from '../slide/loader.js';\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\n * PhotoSwipe base class that can retrieve data about every slide.\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\n */\nclass PhotoSwipeBase extends Eventable {\n  /**\n   * Get total number of slides\n   *\n   * @returns {number}\n   */\n  getNumItems() {\n    let numItems = 0;\n    const dataSource = this.options?.dataSource;\n\n    if (dataSource && 'length' in dataSource) {\n      // may be an array or just object with length property\n      numItems = dataSource.length;\n    } else if (dataSource && 'gallery' in dataSource) {\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      if (dataSource.items) {\n        numItems = dataSource.items.length;\n      }\n    }\n\n    // legacy event, before filters were introduced\n    const event = this.dispatch('numItems', {\n      dataSource,\n      numItems\n    });\n    return this.applyFilters('numItems', event.numItems, dataSource);\n  }\n\n  /**\n   * @param {SlideData} slideData\n   * @param {number} index\n   * @returns {Content}\n   */\n  createContentFromData(slideData, index) {\n    return new Content(slideData, this, index);\n  }\n\n  /**\n   * Get item data by index.\n   *\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\n   * For example, it may contain properties like\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\n   *\n   * @param {number} index\n   * @returns {SlideData}\n   */\n  getItemData(index) {\n    const dataSource = this.options?.dataSource;\n    /** @type {SlideData | HTMLElement} */\n    let dataSourceItem = {};\n    if (Array.isArray(dataSource)) {\n      // Datasource is an array of elements\n      dataSourceItem = dataSource[index];\n    } else if (dataSource && 'gallery' in dataSource) {\n      // dataSource has gallery property,\n      // thus it was created by Lightbox, based on\n      // gallery and children options\n\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      dataSourceItem = dataSource.items[index];\n    }\n\n    let itemData = dataSourceItem;\n\n    if (itemData instanceof Element) {\n      itemData = this._domElementToItemData(itemData);\n    }\n\n    // Dispatching the itemData event,\n    // it's a legacy verion before filters were introduced\n    const event = this.dispatch('itemData', {\n      itemData: itemData || {},\n      index\n    });\n\n    return this.applyFilters('itemData', event.itemData, index);\n  }\n\n  /**\n   * Get array of gallery DOM elements,\n   * based on childSelector and gallery element.\n   *\n   * @param {HTMLElement} galleryElement\n   * @returns {HTMLElement[]}\n   */\n  _getGalleryDOMElements(galleryElement) {\n    if (this.options?.children || this.options?.childSelector) {\n      return getElementsFromOption(\n        this.options.children,\n        this.options.childSelector,\n        galleryElement\n      ) || [];\n    }\n\n    return [galleryElement];\n  }\n\n  /**\n   * Converts DOM element to item data object.\n   *\n   * @param {HTMLElement} element DOM element\n   * @returns {SlideData}\n   */\n  _domElementToItemData(element) {\n    /** @type {SlideData} */\n    const itemData = {\n      element\n    };\n\n    const linkEl = /** @type {HTMLAnchorElement} */ (\n      element.tagName === 'A'\n        ? element\n        : element.querySelector('a')\n    );\n\n    if (linkEl) {\n      // src comes from data-pswp-src attribute,\n      // if it's empty link href is used\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n      if (linkEl.dataset.pswpSrcset) {\n        itemData.srcset = linkEl.dataset.pswpSrcset;\n      }\n\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\n\n      // support legacy w & h properties\n      itemData.w = itemData.width;\n      itemData.h = itemData.height;\n\n      if (linkEl.dataset.pswpType) {\n        itemData.type = linkEl.dataset.pswpType;\n      }\n\n      const thumbnailEl = element.querySelector('img');\n\n      if (thumbnailEl) {\n        // msrc is URL to placeholder image that's displayed before large image is loaded\n        // by default it's displayed only for the first slide\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\n      }\n\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n        itemData.thumbCropped = true;\n      }\n    }\n\n    return this.applyFilters('domItemData', itemData, element, linkEl);\n  }\n\n  /**\n   * Lazy-load by slide data\n   *\n   * @param {SlideData} itemData Data about the slide\n   * @param {number} index\n   * @returns {Content} Image that is being decoded or false.\n   */\n  lazyLoadData(itemData, index) {\n    return lazyLoadData(itemData, this, index);\n  }\n}\n\nexport default PhotoSwipeBase;\n","import {\n  setTransform,\n  equalizePoints,\n  decodeImage,\n  toTransformString\n} from './util/util.js';\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\n\n// some browsers do not paint\n// elements which opacity is set to 0,\n// since we need to pre-render elements for the animation -\n// we set it to the minimum amount\nconst MIN_OPACITY = 0.003;\n\n/**\n * Manages opening and closing transitions of the PhotoSwipe.\n *\n * It can perform zoom, fade or no transition.\n */\nclass Opener {\n  /**\n   * @param {PhotoSwipe} pswp\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.isClosed = true;\n    this.isOpen = false;\n    this.isClosing = false;\n    this.isOpening = false;\n    /**\n     * @private\n     * @type {number | false | undefined}\n     */\n    this._duration = undefined;\n    /** @private */\n    this._useAnimation = false;\n    /** @private */\n    this._croppedZoom = false;\n    /** @private */\n    this._animateRootOpacity = false;\n    /** @private */\n    this._animateBgOpacity = false;\n    /**\n     * @private\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\n     */\n    this._placeholder = undefined;\n    /**\n     * @private\n     * @type { HTMLDivElement | undefined }\n     */\n    this._opacityElement = undefined;\n    /**\n     * @private\n     * @type { HTMLDivElement | undefined }\n     */\n    this._cropContainer1 = undefined;\n    /**\n     * @private\n     * @type { HTMLElement | null | undefined }\n     */\n    this._cropContainer2 = undefined;\n\n    /**\n     * @private\n     * @type {Bounds | undefined}\n     */\n    this._thumbBounds = undefined;\n\n\n    this._prepareOpen = this._prepareOpen.bind(this);\n\n    // Override initial zoom and pan position\n    pswp.on('firstZoomPan', this._prepareOpen);\n  }\n\n  open() {\n    this._prepareOpen();\n    this._start();\n  }\n\n  close() {\n    if (this.isClosed || this.isClosing || this.isOpening) {\n      // if we close during opening animation\n      // for now do nothing,\n      // browsers aren't good at changing the direction of the CSS transition\n      return;\n    }\n\n    const slide = this.pswp.currSlide;\n\n    this.isOpen = false;\n    this.isOpening = false;\n    this.isClosing = true;\n    this._duration = this.pswp.options.hideAnimationDuration;\n\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\n      this._duration = 0;\n    }\n\n    this._applyStartProps();\n    setTimeout(() => {\n      this._start();\n    }, this._croppedZoom ? 30 : 0);\n  }\n\n  /** @private */\n  _prepareOpen() {\n    this.pswp.off('firstZoomPan', this._prepareOpen);\n    if (!this.isOpening) {\n      const slide = this.pswp.currSlide;\n      this.isOpening = true;\n      this.isClosing = false;\n      this._duration = this.pswp.options.showAnimationDuration;\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\n        this._duration = 0;\n      }\n      this._applyStartProps();\n    }\n  }\n\n  /** @private */\n  _applyStartProps() {\n    const { pswp } = this;\n    const slide = this.pswp.currSlide;\n    const { options } = pswp;\n\n    if (options.showHideAnimationType === 'fade') {\n      options.showHideOpacity = true;\n      this._thumbBounds = undefined;\n    } else if (options.showHideAnimationType === 'none') {\n      options.showHideOpacity = false;\n      this._duration = 0;\n      this._thumbBounds = undefined;\n    } else if (this.isOpening && pswp._initialThumbBounds) {\n      // Use initial bounds if defined\n      this._thumbBounds = pswp._initialThumbBounds;\n    } else {\n      this._thumbBounds = this.pswp.getThumbBounds();\n    }\n\n    this._placeholder = slide?.getPlaceholderElement();\n\n    pswp.animations.stopAll();\n\n    // Discard animations when duration is less than 50ms\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\n    this._animateZoom = Boolean(this._thumbBounds)\n                        && slide?.content.usePlaceholder()\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\n    if (!this._animateZoom) {\n      this._animateRootOpacity = true;\n\n      if (this.isOpening && slide) {\n        slide.zoomAndPanToInitial();\n        slide.applyCurrentZoomPan();\n      }\n    } else {\n      this._animateRootOpacity = options.showHideOpacity ?? false;\n    }\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\n\n    if (!this._useAnimation) {\n      this._duration = 0;\n      this._animateZoom = false;\n      this._animateBgOpacity = false;\n      this._animateRootOpacity = true;\n      if (this.isOpening) {\n        if (pswp.element) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n        }\n        pswp.applyBgOpacity(1);\n      }\n      return;\n    }\n\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\n      // Properties are used when animation from cropped thumbnail\n      this._croppedZoom = true;\n      this._cropContainer1 = this.pswp.container;\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\n\n      if (pswp.container) {\n        pswp.container.style.overflow = 'hidden';\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\n      }\n    } else {\n      this._croppedZoom = false;\n    }\n\n    if (this.isOpening) {\n      // Apply styles before opening transition\n      if (this._animateRootOpacity) {\n        if (pswp.element) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n        }\n        pswp.applyBgOpacity(1);\n      } else {\n        if (this._animateBgOpacity && pswp.bg) {\n          pswp.bg.style.opacity = String(MIN_OPACITY);\n        }\n        if (pswp.element) {\n          pswp.element.style.opacity = '1';\n        }\n      }\n\n      if (this._animateZoom) {\n        this._setClosedStateZoomPan();\n        if (this._placeholder) {\n          // tell browser that we plan to animate the placeholder\n          this._placeholder.style.willChange = 'transform';\n\n          // hide placeholder to allow hiding of\n          // elements that overlap it (such as icons over the thumbnail)\n          this._placeholder.style.opacity = String(MIN_OPACITY);\n        }\n      }\n    } else if (this.isClosing) {\n      // hide nearby slides to make sure that\n      // they are not painted during the transition\n      if (pswp.mainScroll.itemHolders[0]) {\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\n      }\n      if (pswp.mainScroll.itemHolders[2]) {\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\n      }\n\n      if (this._croppedZoom) {\n        if (pswp.mainScroll.x !== 0) {\n          // shift the main scroller to zero position\n          pswp.mainScroll.resetPosition();\n          pswp.mainScroll.resize();\n        }\n      }\n    }\n  }\n\n  /** @private */\n  _start() {\n    if (this.isOpening\n        && this._useAnimation\n        && this._placeholder\n        && this._placeholder.tagName === 'IMG') {\n      // To ensure smooth animation\n      // we wait till the current slide image placeholder is decoded,\n      // but no longer than 250ms,\n      // and no shorter than 50ms\n      // (just using requestanimationframe is not enough in Firefox,\n      // for some reason)\n      new Promise((resolve) => {\n        let decoded = false;\n        let isDelaying = true;\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\n          decoded = true;\n          if (!isDelaying) {\n            resolve(true);\n          }\n        });\n        setTimeout(() => {\n          isDelaying = false;\n          if (decoded) {\n            resolve(true);\n          }\n        }, 50);\n        setTimeout(resolve, 250);\n      }).finally(() => this._initiate());\n    } else {\n      this._initiate();\n    }\n  }\n\n  /** @private */\n  _initiate() {\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\n\n    this.pswp.dispatch(\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\n    );\n\n    // legacy event\n    this.pswp.dispatch(\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\n    );\n\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\n\n    if (this.isOpening) {\n      if (this._placeholder) {\n        // unhide the placeholder\n        this._placeholder.style.opacity = '1';\n      }\n      this._animateToOpenState();\n    } else if (this.isClosing) {\n      this._animateToClosedState();\n    }\n\n    if (!this._useAnimation) {\n      this._onAnimationComplete();\n    }\n  }\n\n  /** @private */\n  _onAnimationComplete() {\n    const { pswp } = this;\n    this.isOpen = this.isOpening;\n    this.isClosed = this.isClosing;\n    this.isOpening = false;\n    this.isClosing = false;\n\n    pswp.dispatch(\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\n    );\n\n    // legacy event\n    pswp.dispatch(\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\n    );\n\n    if (this.isClosed) {\n      pswp.destroy();\n    } else if (this.isOpen) {\n      if (this._animateZoom && pswp.container) {\n        pswp.container.style.overflow = 'visible';\n        pswp.container.style.width = '100%';\n      }\n      pswp.currSlide?.applyCurrentZoomPan();\n    }\n  }\n\n  /** @private */\n  _animateToOpenState() {\n    const { pswp } = this;\n    if (this._animateZoom) {\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\n        this._animateTo(this._cropContainer2, 'transform', 'none');\n      }\n\n      if (pswp.currSlide) {\n        pswp.currSlide.zoomAndPanToInitial();\n        this._animateTo(\n          pswp.currSlide.container,\n          'transform',\n          pswp.currSlide.getCurrentTransform()\n        );\n      }\n    }\n\n    if (this._animateBgOpacity && pswp.bg) {\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\n    }\n\n    if (this._animateRootOpacity && pswp.element) {\n      this._animateTo(pswp.element, 'opacity', '1');\n    }\n  }\n\n  /** @private */\n  _animateToClosedState() {\n    const { pswp } = this;\n\n    if (this._animateZoom) {\n      this._setClosedStateZoomPan(true);\n    }\n\n    // do not animate opacity if it's already at 0\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\n      this._animateTo(pswp.bg, 'opacity', '0');\n    }\n\n    if (this._animateRootOpacity && pswp.element) {\n      this._animateTo(pswp.element, 'opacity', '0');\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} [animate]\n   */\n  _setClosedStateZoomPan(animate) {\n    if (!this._thumbBounds) return;\n\n    const { pswp } = this;\n    const { innerRect } = this._thumbBounds;\n    const { currSlide, viewportSize } = pswp;\n\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\n      const containerTwoPanX = viewportSize.x - innerRect.w;\n      const containerTwoPanY = viewportSize.y - innerRect.h;\n\n\n      if (animate) {\n        this._animateTo(\n          this._cropContainer1,\n          'transform',\n          toTransformString(containerOnePanX, containerOnePanY)\n        );\n\n        this._animateTo(\n          this._cropContainer2,\n          'transform',\n          toTransformString(containerTwoPanX, containerTwoPanY)\n        );\n      } else {\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\n      }\n    }\n\n    if (currSlide) {\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\n      if (animate) {\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\n      } else {\n        currSlide.applyCurrentZoomPan();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {HTMLElement} target\n   * @param {'transform' | 'opacity'} prop\n   * @param {string} propValue\n   */\n  _animateTo(target, prop, propValue) {\n    if (!this._duration) {\n      target.style[prop] = propValue;\n      return;\n    }\n\n    const { animations } = this.pswp;\n    /** @type {AnimationProps} */\n    const animProps = {\n      duration: this._duration,\n      easing: this.pswp.options.easing,\n      onComplete: () => {\n        if (!animations.activeAnimations.length) {\n          this._onAnimationComplete();\n        }\n      },\n      target,\n    };\n    animProps[prop] = propValue;\n    animations.startTransition(animProps);\n  }\n}\n\nexport default Opener;\n","import {\n  createElement,\n  equalizePoints,\n  pointsEqual,\n  clamp,\n} from './util/util.js';\n\nimport DOMEvents from './util/dom-events.js';\nimport Slide from './slide/slide.js';\nimport Gestures from './gestures/gestures.js';\nimport MainScroll from './main-scroll.js';\n\nimport Keyboard from './keyboard.js';\nimport Animations from './util/animations.js';\nimport ScrollWheel from './scroll-wheel.js';\nimport UI from './ui/ui.js';\nimport { getViewportSize } from './util/viewport-size.js';\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\nimport PhotoSwipeBase from './core/base.js';\nimport Opener from './opener.js';\nimport ContentLoader from './slide/loader.js';\n\n/**\n * @template T\n * @typedef {import('./types.js').Type<T>} Type<T>\n */\n\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\n/**\n * @template {keyof PhotoSwipeEventsMap} T\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\n */\n/**\n * @template {keyof PhotoSwipeEventsMap} T\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\n */\n\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\n/** @typedef {SlideData[]} DataSourceArray */\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\n\n/**\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\n */\n\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\n/**\n * @typedef {Object} PreparedPhotoSwipeOptions\n *\n * @prop {DataSource} [dataSource]\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\n * (which may be modified further from numItems event).\n *\n * Each item should contain data that you need to generate slide\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\n *\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\n *\n * @prop {number} bgOpacity\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\n *\n * @prop {number} spacing\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\n *\n * @prop {boolean} allowPanToNext\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\n *\n * @prop {boolean} loop\n * If set to true you'll be able to swipe from the last to the first image.\n * Option is always false when there are less than 3 slides.\n *\n * @prop {boolean} [wheelToZoom]\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\n *\n * @prop {boolean} pinchToClose\n * Pinch touch gesture to close the gallery.\n *\n * @prop {boolean} closeOnVerticalDrag\n * Vertical drag gesture to close the PhotoSwipe.\n *\n * @prop {Padding} [padding]\n * Slide area padding (in pixels).\n *\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\n *\n * @prop {number | false} hideAnimationDuration\n * Transition duration in milliseconds, can be 0.\n *\n * @prop {number | false} showAnimationDuration\n * Transition duration in milliseconds, can be 0.\n *\n * @prop {number | false} zoomAnimationDuration\n * Transition duration in milliseconds, can be 0.\n *\n * @prop {string} easing\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\n *\n * @prop {boolean} escKey\n * Esc key to close.\n *\n * @prop {boolean} arrowKeys\n * Left/right arrow keys for navigation.\n *\n * @prop {boolean} returnFocus\n * Restore focus the last active element after PhotoSwipe is closed.\n *\n * @prop {boolean} clickToCloseNonZoomable\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\n *\n * @prop {ActionType | ActionFn | false} imageClickAction\n * Refer to click and tap actions page.\n *\n * @prop {ActionType | ActionFn | false} bgClickAction\n * Refer to click and tap actions page.\n *\n * @prop {ActionType | ActionFn | false} tapAction\n * Refer to click and tap actions page.\n *\n * @prop {ActionType | ActionFn | false} doubleTapAction\n * Refer to click and tap actions page.\n *\n * @prop {number} preloaderDelay\n * Delay before the loading indicator will be displayed,\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\n *\n * @prop {string} indexIndicatorSep\n * Used for slide count indicator (\"1 of 10 \").\n *\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\n *\n * @prop {string} errorMsg\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\n *\n * @prop {[number, number]} preload\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\n * first one - number of items to preload before the current image, second one - after the current image.\n * Two nearby images are always loaded.\n *\n * @prop {string} [mainClass]\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\n * Example on Styling page.\n *\n * @prop {HTMLElement} [appendToEl]\n * Element to which PhotoSwipe dialog will be appended when it opens.\n *\n * @prop {number} maxWidthToAnimate\n * Maximum width of image to animate, if initial rendered image width\n * is larger than this value - the opening/closing transition will be automatically disabled.\n *\n * @prop {string} [closeTitle]\n * Translating\n *\n * @prop {string} [zoomTitle]\n * Translating\n *\n * @prop {string} [arrowPrevTitle]\n * Translating\n *\n * @prop {string} [arrowNextTitle]\n * Translating\n *\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\n *\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\n *\n * @prop {number} index\n * Defines start slide index.\n *\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\n *\n * @prop {boolean} [arrowPrev]\n * @prop {boolean} [arrowNext]\n * @prop {boolean} [zoom]\n * @prop {boolean} [close]\n * @prop {boolean} [counter]\n *\n * @prop {string} [arrowPrevSVG]\n * @prop {string} [arrowNextSVG]\n * @prop {string} [zoomSVG]\n * @prop {string} [closeSVG]\n * @prop {string} [counterSVG]\n *\n * @prop {string} [arrowPrevTitle]\n * @prop {string} [arrowNextTitle]\n * @prop {string} [zoomTitle]\n * @prop {string} [closeTitle]\n * @prop {string} [counterTitle]\n *\n * @prop {ZoomLevelOption} [initialZoomLevel]\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\n * @prop {ZoomLevelOption} [maxZoomLevel]\n *\n * @prop {boolean} [mouseMovePan]\n * @prop {Point | null} [initialPointerPos]\n * @prop {boolean} [showHideOpacity]\n *\n * @prop {PhotoSwipeModuleOption} [pswpModule]\n * @prop {() => Promise<any>} [openPromise]\n * @prop {boolean} [preloadFirstSlide]\n * @prop {ElementProvider} [gallery]\n * @prop {string} [gallerySelector]\n * @prop {ElementProvider} [children]\n * @prop {string} [childSelector]\n * @prop {string | false} [thumbSelector]\n */\n\n/** @type {PreparedPhotoSwipeOptions} */\nconst defaultOptions = {\n  allowPanToNext: true,\n  spacing: 0.1,\n  loop: true,\n  pinchToClose: true,\n  closeOnVerticalDrag: true,\n  hideAnimationDuration: 333,\n  showAnimationDuration: 333,\n  zoomAnimationDuration: 333,\n  escKey: true,\n  arrowKeys: true,\n  returnFocus: true,\n  maxWidthToAnimate: 4000,\n  clickToCloseNonZoomable: true,\n  imageClickAction: 'zoom-or-close',\n  bgClickAction: 'close',\n  tapAction: 'toggle-controls',\n  doubleTapAction: 'zoom',\n  indexIndicatorSep: ' / ',\n  preloaderDelay: 2000,\n  bgOpacity: 0.8,\n\n  index: 0,\n  errorMsg: 'The image cannot be loaded',\n  preload: [1, 2],\n  easing: 'cubic-bezier(.4,0,.22,1)'\n};\n\n/**\n * PhotoSwipe Core\n */\nclass PhotoSwipe extends PhotoSwipeBase {\n  /**\n   * @param {PhotoSwipeOptions} [options]\n   */\n  constructor(options) {\n    super();\n\n    this.options = this._prepareOptions(options || {});\n\n    /**\n     * offset of viewport relative to document\n     *\n     * @type {Point}\n     */\n    this.offset = { x: 0, y: 0 };\n\n    /**\n     * @type {Point}\n     * @private\n     */\n    this._prevViewportSize = { x: 0, y: 0 };\n\n    /**\n     * Size of scrollable PhotoSwipe viewport\n     *\n     * @type {Point}\n     */\n    this.viewportSize = { x: 0, y: 0 };\n\n    /**\n     * background (backdrop) opacity\n     */\n    this.bgOpacity = 1;\n    this.currIndex = 0;\n    this.potentialIndex = 0;\n    this.isOpen = false;\n    this.isDestroying = false;\n    this.hasMouse = false;\n\n    /**\n     * @private\n     * @type {SlideData}\n     */\n    this._initialItemData = {};\n    /** @type {Bounds | undefined} */\n    this._initialThumbBounds = undefined;\n\n    /** @type {HTMLDivElement | undefined} */\n    this.topBar = undefined;\n    /** @type {HTMLDivElement | undefined} */\n    this.element = undefined;\n    /** @type {HTMLDivElement | undefined} */\n    this.template = undefined;\n    /** @type {HTMLDivElement | undefined} */\n    this.container = undefined;\n    /** @type {HTMLElement | undefined} */\n    this.scrollWrap = undefined;\n    /** @type {Slide | undefined} */\n    this.currSlide = undefined;\n\n    this.events = new DOMEvents();\n    this.animations = new Animations();\n    this.mainScroll = new MainScroll(this);\n    this.gestures = new Gestures(this);\n    this.opener = new Opener(this);\n    this.keyboard = new Keyboard(this);\n    this.contentLoader = new ContentLoader(this);\n  }\n\n  /** @returns {boolean} */\n  init() {\n    if (this.isOpen || this.isDestroying) {\n      return false;\n    }\n\n    this.isOpen = true;\n    this.dispatch('init'); // legacy\n    this.dispatch('beforeOpen');\n\n    this._createMainStructure();\n\n    // add classes to the root element of PhotoSwipe\n    let rootClasses = 'pswp--open';\n    if (this.gestures.supportsTouch) {\n      rootClasses += ' pswp--touch';\n    }\n    if (this.options.mainClass) {\n      rootClasses += ' ' + this.options.mainClass;\n    }\n    if (this.element) {\n      this.element.className += ' ' + rootClasses;\n    }\n\n    this.currIndex = this.options.index || 0;\n    this.potentialIndex = this.currIndex;\n    this.dispatch('firstUpdate'); // starting index can be modified here\n\n    // initialize scroll wheel handler to block the scroll\n    this.scrollWheel = new ScrollWheel(this);\n\n    // sanitize index\n    if (Number.isNaN(this.currIndex)\n        || this.currIndex < 0\n        || this.currIndex >= this.getNumItems()) {\n      this.currIndex = 0;\n    }\n\n    if (!this.gestures.supportsTouch) {\n      // enable mouse features if no touch support detected\n      this.mouseDetected();\n    }\n\n    // causes forced synchronous layout\n    this.updateSize();\n\n    this.offset.y = window.pageYOffset;\n\n    this._initialItemData = this.getItemData(this.currIndex);\n    this.dispatch('gettingData', {\n      index: this.currIndex,\n      data: this._initialItemData,\n      slide: undefined\n    });\n\n    // *Layout* - calculate size and position of elements here\n    this._initialThumbBounds = this.getThumbBounds();\n    this.dispatch('initialLayout');\n\n    this.on('openingAnimationEnd', () => {\n      const { itemHolders } = this.mainScroll;\n\n      // Add content to the previous and next slide\n      if (itemHolders[0]) {\n        itemHolders[0].el.style.display = 'block';\n        this.setContent(itemHolders[0], this.currIndex - 1);\n      }\n      if (itemHolders[2]) {\n        itemHolders[2].el.style.display = 'block';\n        this.setContent(itemHolders[2], this.currIndex + 1);\n      }\n\n      this.appendHeavy();\n\n      this.contentLoader.updateLazy();\n\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\n      this.dispatch('bindEvents');\n    });\n\n    // set content for center slide (first time)\n    if (this.mainScroll.itemHolders[1]) {\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\n    }\n    this.dispatch('change');\n\n    this.opener.open();\n\n    this.dispatch('afterInit');\n\n    return true;\n  }\n\n  /**\n   * Get looped slide index\n   * (for example, -1 will return the last slide)\n   *\n   * @param {number} index\n   * @returns {number}\n   */\n  getLoopedIndex(index) {\n    const numSlides = this.getNumItems();\n\n    if (this.options.loop) {\n      if (index > numSlides - 1) {\n        index -= numSlides;\n      }\n\n      if (index < 0) {\n        index += numSlides;\n      }\n    }\n\n    return clamp(index, 0, numSlides - 1);\n  }\n\n  appendHeavy() {\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\n      itemHolder.slide?.appendHeavy();\n    });\n  }\n\n  /**\n   * Change the slide\n   * @param {number} index New index\n   */\n  goTo(index) {\n    this.mainScroll.moveIndexBy(\n      this.getLoopedIndex(index) - this.potentialIndex\n    );\n  }\n\n  /**\n   * Go to the next slide.\n   */\n  next() {\n    this.goTo(this.potentialIndex + 1);\n  }\n\n  /**\n   * Go to the previous slide.\n   */\n  prev() {\n    this.goTo(this.potentialIndex - 1);\n  }\n\n  /**\n   * @see slide/slide.js zoomTo\n   *\n   * @param {Parameters<Slide['zoomTo']>} args\n   */\n  zoomTo(...args) {\n    this.currSlide?.zoomTo(...args);\n  }\n\n  /**\n   * @see slide/slide.js toggleZoom\n   */\n  toggleZoom() {\n    this.currSlide?.toggleZoom();\n  }\n\n  /**\n   * Close the gallery.\n   * After closing transition ends - destroy it\n   */\n  close() {\n    if (!this.opener.isOpen || this.isDestroying) {\n      return;\n    }\n\n    this.isDestroying = true;\n\n    this.dispatch('close');\n\n    this.events.removeAll();\n    this.opener.close();\n  }\n\n  /**\n   * Destroys the gallery:\n   * - instantly closes the gallery\n   * - unbinds events,\n   * - cleans intervals and timeouts\n   * - removes elements from DOM\n   */\n  destroy() {\n    if (!this.isDestroying) {\n      this.options.showHideAnimationType = 'none';\n      this.close();\n      return;\n    }\n\n    this.dispatch('destroy');\n\n    this._listeners = {};\n\n    if (this.scrollWrap) {\n      this.scrollWrap.ontouchmove = null;\n      this.scrollWrap.ontouchend = null;\n    }\n\n    this.element?.remove();\n\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\n      itemHolder.slide?.destroy();\n    });\n\n    this.contentLoader.destroy();\n    this.events.removeAll();\n  }\n\n  /**\n   * Refresh/reload content of a slide by its index\n   *\n   * @param {number} slideIndex\n   */\n  refreshSlideContent(slideIndex) {\n    this.contentLoader.removeByIndex(slideIndex);\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\n      if (this.canLoop()) {\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\n      }\n      if (potentialHolderIndex === slideIndex) {\n        // set the new slide content\n        this.setContent(itemHolder, slideIndex, true);\n\n        // activate the new slide if it's current\n        if (i === 1) {\n          this.currSlide = itemHolder.slide;\n          itemHolder.slide?.setIsActive(true);\n        }\n      }\n    });\n\n    this.dispatch('change');\n  }\n\n\n  /**\n   * Set slide content\n   *\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\n   * @param {number} index Slide index\n   * @param {boolean} [force] If content should be set even if index wasn't changed\n   */\n  setContent(holder, index, force) {\n    if (this.canLoop()) {\n      index = this.getLoopedIndex(index);\n    }\n\n    if (holder.slide) {\n      if (holder.slide.index === index && !force) {\n        // exit if holder already contains this slide\n        // this could be common when just three slides are used\n        return;\n      }\n\n      // destroy previous slide\n      holder.slide.destroy();\n      holder.slide = undefined;\n    }\n\n    // exit if no loop and index is out of bounds\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\n      return;\n    }\n\n    const itemData = this.getItemData(index);\n    holder.slide = new Slide(itemData, index, this);\n\n    // set current slide\n    if (index === this.currIndex) {\n      this.currSlide = holder.slide;\n    }\n\n    holder.slide.append(holder.el);\n  }\n\n  /** @returns {Point} */\n  getViewportCenterPoint() {\n    return {\n      x: this.viewportSize.x / 2,\n      y: this.viewportSize.y / 2\n    };\n  }\n\n  /**\n   * Update size of all elements.\n   * Executed on init and on page resize.\n   *\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\n   */\n  updateSize(force) {\n    // let item;\n    // let itemIndex;\n\n    if (this.isDestroying) {\n      // exit if PhotoSwipe is closed or closing\n      // (to avoid errors, as resize event might be delayed)\n      return;\n    }\n\n    //const newWidth = this.scrollWrap.clientWidth;\n    //const newHeight = this.scrollWrap.clientHeight;\n\n    const newViewportSize = getViewportSize(this.options, this);\n\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\n      // Exit if dimensions were not changed\n      return;\n    }\n\n    //this._prevViewportSize.x = newWidth;\n    //this._prevViewportSize.y = newHeight;\n    equalizePoints(this._prevViewportSize, newViewportSize);\n\n    this.dispatch('beforeResize');\n\n    equalizePoints(this.viewportSize, this._prevViewportSize);\n\n    this._updatePageScrollOffset();\n\n    this.dispatch('viewportSize');\n\n    // Resize slides only after opener animation is finished\n    // and don't re-calculate size on inital size update\n    this.mainScroll.resize(this.opener.isOpen);\n\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\n      this.mouseDetected();\n    }\n\n    this.dispatch('resize');\n  }\n\n  /**\n   * @param {number} opacity\n   */\n  applyBgOpacity(opacity) {\n    this.bgOpacity = Math.max(opacity, 0);\n    if (this.bg) {\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\n    }\n  }\n\n  /**\n   * Whether mouse is detected\n   */\n  mouseDetected() {\n    if (!this.hasMouse) {\n      this.hasMouse = true;\n      this.element?.classList.add('pswp--has_mouse');\n    }\n  }\n\n  /**\n   * Page resize event handler\n   *\n   * @private\n   */\n  _handlePageResize() {\n    this.updateSize();\n\n    // In iOS webview, if element size depends on document size,\n    // it'll be measured incorrectly in resize event\n    //\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\n      setTimeout(() => {\n        this.updateSize();\n      }, 500);\n    }\n  }\n\n  /**\n   * Page scroll offset is used\n   * to get correct coordinates\n   * relative to PhotoSwipe viewport.\n   *\n   * @private\n   */\n  _updatePageScrollOffset() {\n    this.setScrollOffset(0, window.pageYOffset);\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setScrollOffset(x, y) {\n    this.offset.x = x;\n    this.offset.y = y;\n    this.dispatch('updateScrollOffset');\n  }\n\n  /**\n   * Create main HTML structure of PhotoSwipe,\n   * and add it to DOM\n   *\n   * @private\n   */\n  _createMainStructure() {\n    // root DOM element of PhotoSwipe (.pswp)\n    this.element = createElement('pswp', 'div');\n    this.element.setAttribute('tabindex', '-1');\n    this.element.setAttribute('role', 'dialog');\n\n    // template is legacy prop\n    this.template = this.element;\n\n    // Background is added as a separate element,\n    // as animating opacity is faster than animating rgba()\n    this.bg = createElement('pswp__bg', 'div', this.element);\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\n\n    // aria pattern: carousel\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\n    this.container.setAttribute('aria-live', 'off');\n    this.container.setAttribute('id', 'pswp__items');\n\n    this.mainScroll.appendHolders();\n\n    this.ui = new UI(this);\n    this.ui.init();\n\n    // append to DOM\n    (this.options.appendToEl || document.body).appendChild(this.element);\n  }\n\n\n  /**\n   * Get position and dimensions of small thumbnail\n   *   {x:,y:,w:}\n   *\n   * Height is optional (calculated based on the large image)\n   *\n   * @returns {Bounds | undefined}\n   */\n  getThumbBounds() {\n    return getThumbBounds(\n      this.currIndex,\n      this.currSlide ? this.currSlide.data : this._initialItemData,\n      this\n    );\n  }\n\n  /**\n   * If the PhotoSwipe can have continuous loop\n   * @returns Boolean\n   */\n  canLoop() {\n    return (this.options.loop && this.getNumItems() > 2);\n  }\n\n  /**\n   * @private\n   * @param {PhotoSwipeOptions} options\n   * @returns {PreparedPhotoSwipeOptions}\n   */\n  _prepareOptions(options) {\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\n      options.showHideAnimationType = 'none';\n      options.zoomAnimationDuration = 0;\n    }\n\n    /** @type {PreparedPhotoSwipeOptions} */\n    return {\n      ...defaultOptions,\n      ...options\n    };\n  }\n}\n\nexport default PhotoSwipe;\n"],"names":["createElement","className","tagName","appendToEl","el","document","appendChild","equalizePoints","p1","p2","x","y","id","undefined","roundPoint","p","Math","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","min","max","toTransformString","scale","propValue","setTransform","style","transform","defaultCSSEasing","setTransitionStyle","prop","duration","ease","transition","setWidthHeight","w","h","width","height","removeTransitionStyle","decodeImage","img","decode","catch","complete","Promise","resolve","reject","onload","onerror","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","button","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","supportsPassive","window","addEventListener","Object","defineProperty","get","DOMEvents","constructor","_pool","add","target","type","listener","passive","_toggleListener","remove","removeAll","forEach","poolItem","unbind","skipPool","methodName","types","split","eType","filter","push","eventOptions","getViewportSize","options","pswp","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","parsePaddingOption","viewportSize","itemData","index","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","Number","getPanAreaSize","PanBounds","slide","currZoomLevel","center","update","reset","_updateAxis","dispatch","axis","elSize","paddingProp","data","panAreaSize","correctPan","panOffset","MAX_IMAGE_WIDTH","ZoomLevel","elementSize","fit","fill","vFill","initial","secondary","maxWidth","maxHeight","hRatio","vRatio","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","Slide","isActive","currIndex","currentResolution","pan","isFirstSlide","opener","isOpen","content","contentLoader","getContentBySlide","container","holderElement","heavyAppended","bounds","prevDisplayedWidth","prevDisplayedHeight","setIsActive","activate","deactivate","append","transformOrigin","calculateSize","load","updateContentSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","appendHeavyNearby","mainScroll","isShifted","defaultPrevented","destroy","hasSlide","resize","panTo","force","scaleMultiplier","sizeChanged","setDisplayedSize","getPlaceholderElement","placeholder","element","zoomTo","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","isZoomable","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","name","getCurrentTransform","onComplete","easing","toggleZoom","zoomAnimationDuration","point","totalPanDistance","getViewportCenterPoint","zoomFactor","panX","panY","isPannable","Boolean","_applyZoomTransform","currSlide","zoom","newResolution","PAN_END_FRICTION","VERTICAL_DRAG_FRICTION","MIN_RATIO_TO_CLOSE","MIN_NEXT_SLIDE_SPEED","project","initialVelocity","decelerationRate","DragHandler","gestures","startPan","start","stopAll","change","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","mainScrollChanged","_panOrMoveMainScroll","end","velocity","indexDiff","mainScrollShiftDiff","getCurrSlideX","currentSlideVisibilityRatio","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","onUpdate","pos","animationProgressRatio","floor","delta","newMainScrollX","moveTo","newPan","allowPanToNext","currSlideMainScrollX","isLeftToRight","isRightToLeft","wasAtMinPanPosition","wasAtMaxPanPosition","potentialPan","customFriction","correctedPan","UPPER_ZOOM_FRICTION","LOWER_ZOOM_FRICTION","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_wasOverFitZoomLevel","_startZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","event","closest","TapHandler","click","originalEvent","targetClassList","classList","isImageClick","contains","isBackgroundClick","_doClickOrTapAction","tap","doubleTap","actionName","actionFullName","call","clickToCloseNonZoomable","toggle","AXIS_SWIPE_HYSTERISIS","DOUBLE_TAP_DELAY","MIN_TAP_DISTANCE","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","_intervalTime","_velocityCalculated","isDragging","isZooming","raf","_tapTimer","drag","tapHandler","on","events","scrollWrap","_onClick","bind","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","onPointerMove","onPointerUp","isMousePointer","pointerType","preventDefault","mouseDetected","_preventPointerEventBehaviour","_updatePoints","_clearTapTimer","_calculateDragDirection","_updateStartPoints","Date","_rafStopLoop","_rafRenderLoop","_finishDrag","_updateVelocity","_finishTap","_updatePrevPoints","requestAnimationFrame","time","_getVelocity","indexOf","tapDelay","doubleTapAction","setTimeout","clearTimeout","displacement","cancelAnimationFrame","pointerEvent","pointerIndex","findIndex","ongoingPointer","pointerId","splice","_convertEventPosToPoint","length","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MAIN_SCROLL_END_FRICTION","MainScroll","slideWidth","_currPositionIndex","_prevPositionIndex","_containerShiftIndex","itemHolders","resizeSlides","newSlideWidth","spacing","slideWidthChanged","itemHolder","resetPosition","appendHolders","i","setAttribute","display","canBeSwiped","getNumItems","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","updateCurrItem","isMainScroll","currDiff","currDistance","positionDifference","diffAbs","tempHolder","shift","setContent","pop","unshift","updateLazy","dragging","newSlideIndexOffset","KeyboardKeyCodesMap","Escape","z","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Tab","getKeyboardEventKey","key","isKeySupported","Keyboard","_wasFocused","initialPointerPos","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","focus","keydownAction","isForward","keyCode","escKey","arrowKeys","template","DEFAULT_EASING","CSSAnimation","props","onFinish","_target","_onComplete","_finished","_onTransitionEnd","_helperTimeout","_finalizeAnimation","removeEventListener","DEFAULT_NATURAL_FREQUENCY","DEFAULT_DAMPING_RATIO","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","easeFrame","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","_raf","easer","prevTime","animationLoop","Animations","activeAnimations","_start","isSpring","animation","stop","isPanRunning","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","clientX","clientY","addElementHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","UIElement","elementHTML","html","isButton","toLowerCase","title","ariaLabel","ariaText","innerHTML","onInit","onClick","onclick","appendTo","topBar","applyFilters","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","toggleIndicatorClass","setIndicatorVisibility","visible","updatePreloaderVisibility","isLoading","preloaderDelay","ui","counterIndicator","counterElement","innerText","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","isRegistered","uiElementsData","items","_lastUpdatedZoomLevel","init","sort","a","b","uiElementData","registerElement","_onZoomPanUpdate","elementData","isClosing","currZoomLevelDiff","potentialZoomLevel","imageClickAction","getBoundsByElement","thumbAreaRect","getBoundingClientRect","left","top","getCroppedBoundsByElement","imageWidth","imageHeight","fillZoomLevel","offsetX","offsetY","innerRect","getThumbBounds","instance","thumbBounds","thumbnail","thumbSelector","matches","querySelector","thumbCropped","PhotoSwipeEvent","details","assign","Eventable","_listeners","_filters","addFilter","fn","priority","f1","f2","removeFilter","args","apply","off","Placeholder","imageSrc","imgEl","decoding","alt","src","parentNode","Content","displayedImageWidth","displayedImageHeight","isAttached","isDecoding","state","removePlaceholder","keepPlaceholder","isLazy","reload","usePlaceholder","placeholderSrc","msrc","placeholderEl","parentElement","prepend","isImageContent","loadImage","imageElement","updateSrcsetSizes","srcset","onLoaded","onError","setSlide","displayError","isError","isInitialSizeUpdate","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","errorMsg","supportsDecode","finally","appendImage","MIN_SLIDES_TO_CACHE","lazyLoadData","createContentFromData","zoomLevel","ceil","lazyLoadSlide","getItemData","ContentLoader","limit","preload","_cachedItems","loadSlideByIndex","initialIndex","getContentByIndex","addToCache","removeByIndex","indexToRemove","item","removedItem","find","PhotoSwipeBase","numItems","dataSource","_getGalleryDOMElements","gallery","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","MIN_OPACITY","Opener","isClosed","isOpening","_duration","_useAnimation","_croppedZoom","_animateRootOpacity","_animateBgOpacity","_placeholder","_opacityElement","_cropContainer1","_cropContainer2","_thumbBounds","_prepareOpen","open","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","_animateZoom","bg","opacity","overflow","_setClosedStateZoomPan","willChange","decoded","isDelaying","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_prepareOptions","_prevViewportSize","isDestroying","hasMouse","_initialItemData","keyboard","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_handlePageResize","_updatePageScrollOffset","goTo","next","prev","refreshSlideContent","slideIndex","potentialHolderIndex","holder","matchMedia","test","userAgent","setScrollOffset","body"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,aAAT,CAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CC,UAA3C,EAAuD;AAC5D,EAAA,MAAMC,EAAE,GAAGC,QAAQ,CAACL,aAAT,CAAuBE,OAAvB,CAAX,CAAA;;AACA,EAAA,IAAID,SAAJ,EAAe;IACbG,EAAE,CAACH,SAAH,GAAeA,SAAf,CAAA;AACD,GAAA;;AACD,EAAA,IAAIE,UAAJ,EAAgB;IACdA,UAAU,CAACG,WAAX,CAAuBF,EAAvB,CAAA,CAAA;AACD,GAAA;;AACD,EAAA,OAAOA,EAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASG,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgC;AACrCD,EAAAA,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACC,CAAV,CAAA;AACAF,EAAAA,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACE,CAAV,CAAA;;AACA,EAAA,IAAIF,EAAE,CAACG,EAAH,KAAUC,SAAd,EAAyB;AACvBL,IAAAA,EAAE,CAACI,EAAH,GAAQH,EAAE,CAACG,EAAX,CAAA;AACD,GAAA;;AACD,EAAA,OAAOJ,EAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;;AACO,SAASM,UAAT,CAAoBC,CAApB,EAAuB;EAC5BA,CAAC,CAACL,CAAF,GAAMM,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACL,CAAb,CAAN,CAAA;EACAK,CAAC,CAACJ,CAAF,GAAMK,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACJ,CAAb,CAAN,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASO,kBAAT,CAA4BV,EAA5B,EAAgCC,EAAhC,EAAoC;AACzC,EAAA,MAAMC,CAAC,GAAGM,IAAI,CAACG,GAAL,CAASX,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACC,CAAnB,CAAV,CAAA;AACA,EAAA,MAAMC,CAAC,GAAGK,IAAI,CAACG,GAAL,CAASX,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACE,CAAnB,CAAV,CAAA;EACA,OAAOK,IAAI,CAACI,IAAL,CAAWV,CAAC,GAAGA,CAAL,GAAWC,CAAC,GAAGA,CAAzB,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASU,WAAT,CAAqBb,EAArB,EAAyBC,EAAzB,EAA6B;AAClC,EAAA,OAAOD,EAAE,CAACE,CAAH,KAASD,EAAE,CAACC,CAAZ,IAAiBF,EAAE,CAACG,CAAH,KAASF,EAAE,CAACE,CAApC,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASW,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AACnC,EAAA,OAAOT,IAAI,CAACQ,GAAL,CAASR,IAAI,CAACS,GAAL,CAASF,GAAT,EAAcC,GAAd,CAAT,EAA6BC,GAA7B,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,iBAAT,CAA2BhB,CAA3B,EAA8BC,CAA9B,EAAiCgB,KAAjC,EAAwC;EAC7C,IAAIC,SAAS,GAAI,CAAclB,YAAAA,EAAAA,CAAE,MAAKC,CAAC,IAAI,CAAE,CAA7C,KAAA,CAAA,CAAA;;EAEA,IAAIgB,KAAK,KAAKd,SAAd,EAAyB;AACvBe,IAAAA,SAAS,IAAK,CAAA,SAAA,EAAWD,KAAM,CAAA,CAAA,EAAGA,KAAM,CAAxC,GAAA,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,OAAOC,SAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,YAAT,CAAsBzB,EAAtB,EAA0BM,CAA1B,EAA6BC,CAA7B,EAAgCgB,KAAhC,EAAuC;AAC5CvB,EAAAA,EAAE,CAAC0B,KAAH,CAASC,SAAT,GAAqBL,iBAAiB,CAAChB,CAAD,EAAIC,CAAJ,EAAOgB,KAAP,CAAtC,CAAA;AACD,CAAA;AAED,MAAMK,gBAAgB,GAAG,0BAAzB,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,kBAAT,CAA4B7B,EAA5B,EAAgC8B,IAAhC,EAAsCC,QAAtC,EAAgDC,IAAhD,EAAsD;AAC3D;AACA;AACA;AACAhC,EAAAA,EAAE,CAAC0B,KAAH,CAASO,UAAT,GAAsBH,IAAI,GACrB,CAAA,EAAEA,IAAK,CAAA,CAAA,EAAGC,QAAS,CAAKC,GAAAA,EAAAA,IAAI,IAAIJ,gBAAiB,CAAA,CAD5B,GAEtB,MAFJ,CAAA;AAGD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASM,cAAT,CAAwBlC,EAAxB,EAA4BmC,CAA5B,EAA+BC,CAA/B,EAAkC;AACvCpC,EAAAA,EAAE,CAAC0B,KAAH,CAASW,KAAT,GAAkB,OAAOF,CAAP,KAAa,QAAd,GAA2B,CAAA,EAAEA,CAAE,CAAA,EAAA,CAA/B,GAAqCA,CAAtD,CAAA;AACAnC,EAAAA,EAAE,CAAC0B,KAAH,CAASY,MAAT,GAAmB,OAAOF,CAAP,KAAa,QAAd,GAA2B,CAAA,EAAEA,CAAE,CAAA,EAAA,CAA/B,GAAqCA,CAAvD,CAAA;AACD,CAAA;AAED;AACA;AACA;;AACO,SAASG,qBAAT,CAA+BvC,EAA/B,EAAmC;EACxC6B,kBAAkB,CAAC7B,EAAD,CAAlB,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAASwC,WAAT,CAAqBC,GAArB,EAA0B;EAC/B,IAAI,QAAA,IAAYA,GAAhB,EAAqB;IACnB,OAAOA,GAAG,CAACC,MAAJ,EAAA,CAAaC,KAAb,CAAmB,MAAM,EAAzB,CAAP,CAAA;AACD,GAAA;;EAED,IAAIF,GAAG,CAACG,QAAR,EAAkB;AAChB,IAAA,OAAOC,OAAO,CAACC,OAAR,CAAgBL,GAAhB,CAAP,CAAA;AACD,GAAA;;AAED,EAAA,OAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,IAAAA,GAAG,CAACO,MAAJ,GAAa,MAAMF,OAAO,CAACL,GAAD,CAA1B,CAAA;;IACAA,GAAG,CAACQ,OAAJ,GAAcF,MAAd,CAAA;AACD,GAHM,CAAP,CAAA;AAID,CAAA;AAED;;AACA;;AACO,MAAMG,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,OAAO,EAAE,SAFe;AAGxBC,EAAAA,MAAM,EAAE,QAHgB;AAIxBC,EAAAA,KAAK,EAAE,OAAA;AAJiB,CAAnB,CAAA;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;EAChC,OAAQ,QAAA,IAAYA,CAAZ,IAAiBA,CAAC,CAACC,MAAF,KAAa,CAA/B,IAAqCD,CAAC,CAACE,OAAvC,IAAkDF,CAAC,CAACG,OAApD,IAA+DH,CAAC,CAACI,MAAjE,IAA2EJ,CAAC,CAACK,QAApF,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,cAAvC,EAAuDC,MAAM,GAAGhE,QAAhE,EAA0E;AAC/E;EACA,IAAIiE,QAAQ,GAAG,EAAf,CAAA;;EAEA,IAAIH,MAAM,YAAYI,OAAtB,EAA+B;IAC7BD,QAAQ,GAAG,CAACH,MAAD,CAAX,CAAA;AACD,GAFD,MAEO,IAAIA,MAAM,YAAYK,QAAlB,IAA8BC,KAAK,CAACC,OAAN,CAAcP,MAAd,CAAlC,EAAyD;AAC9DG,IAAAA,QAAQ,GAAGG,KAAK,CAACE,IAAN,CAAWR,MAAX,CAAX,CAAA;AACD,GAFM,MAEA;IACL,MAAMS,QAAQ,GAAG,OAAOT,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,cAAvD,CAAA;;AACA,IAAA,IAAIQ,QAAJ,EAAc;MACZN,QAAQ,GAAGG,KAAK,CAACE,IAAN,CAAWN,MAAM,CAACQ,gBAAP,CAAwBD,QAAxB,CAAX,CAAX,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA,OAAON,QAAP,CAAA;AACD,CAAA;AAcD;AACA;AACA;AACA;AACA;;AACO,SAASQ,QAAT,GAAoB;AACzB,EAAA,OAAO,CAAC,EAAEC,SAAS,CAACC,MAAV,IAAoBD,SAAS,CAACC,MAAV,CAAiBC,KAAjB,CAAuB,QAAvB,CAAtB,CAAR,CAAA;AACD;;ACvOD;AACA,IAAIC,eAAe,GAAG,KAAtB,CAAA;AACA;;AACA,IAAI;AACF;AACAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCC,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACzEC,IAAAA,GAAG,EAAE,MAAM;AACTL,MAAAA,eAAe,GAAG,IAAlB,CAAA;AACD,KAAA;AAHwE,GAArC,CAAtC,CAAA,CAAA;AAKD,CAPD,CAOE,OAAOtB,CAAP,EAAU,EAAE;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAM4B,SAAN,CAAgB;AACdC,EAAAA,WAAW,GAAG;AACZ;AACJ;AACA;AACA;IACI,IAAKC,CAAAA,KAAL,GAAa,EAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkC;IACnC,IAAKC,CAAAA,eAAL,CAAqBJ,MAArB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,OAA7C,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEE,MAAM,CAACL,MAAD,EAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkC;IACtC,IAAKC,CAAAA,eAAL,CAAqBJ,MAArB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsD,IAAtD,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACEG,EAAAA,SAAS,GAAG;AACV,IAAA,IAAA,CAAKR,KAAL,CAAWS,OAAX,CAAoBC,QAAD,IAAc;MAC/B,IAAKJ,CAAAA,eAAL,CACEI,QAAQ,CAACR,MADX,EAEEQ,QAAQ,CAACP,IAFX,EAGEO,QAAQ,CAACN,QAHX,EAIEM,QAAQ,CAACL,OAJX,EAKE,IALF,EAME,IANF,CAAA,CAAA;KADF,CAAA,CAAA;;IAUA,IAAKL,CAAAA,KAAL,GAAa,EAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEM,EAAAA,eAAe,CAACJ,MAAD,EAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCM,MAAlC,EAA0CC,QAA1C,EAAoD;IACjE,IAAI,CAACV,MAAL,EAAa;AACX,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,MAAMW,UAAU,GAAGF,MAAM,GAAG,qBAAH,GAA2B,kBAApD,CAAA;AACA,IAAA,MAAMG,KAAK,GAAGX,IAAI,CAACY,KAAL,CAAW,GAAX,CAAd,CAAA;AACAD,IAAAA,KAAK,CAACL,OAAN,CAAeO,KAAD,IAAW;AACvB,MAAA,IAAIA,KAAJ,EAAW;AACT;AACA;QACA,IAAI,CAACJ,QAAL,EAAe;AACb,UAAA,IAAID,MAAJ,EAAY;AACV;YACA,IAAKX,CAAAA,KAAL,GAAa,IAAKA,CAAAA,KAAL,CAAWiB,MAAX,CAAmBP,QAAD,IAAc;AAC3C,cAAA,OAAOA,QAAQ,CAACP,IAAT,KAAkBa,KAAlB,IACFN,QAAQ,CAACN,QAAT,KAAsBA,QADpB,IAEFM,QAAQ,CAACR,MAAT,KAAoBA,MAFzB,CAAA;AAGD,aAJY,CAAb,CAAA;AAKD,WAPD,MAOO;AACL;YACA,IAAKF,CAAAA,KAAL,CAAWkB,IAAX,CAAgB;cACdhB,MADc;AAEdC,cAAAA,IAAI,EAAEa,KAFQ;cAGdZ,QAHc;AAIdC,cAAAA,OAAAA;aAJF,CAAA,CAAA;AAMD,WAAA;AACF,SApBQ;AAuBT;;;QACA,MAAMc,YAAY,GAAG3B,eAAe,GAAG;UAAEa,OAAO,EAAGA,OAAO,IAAI,KAAA;AAAvB,SAAH,GAAqC,KAAzE,CAAA;QAEAH,MAAM,CAACW,UAAD,CAAN,CACEG,KADF,EAEEZ,QAFF,EAGEe,YAHF,CAAA,CAAA;AAKD,OAAA;KAhCH,CAAA,CAAA;AAkCD,GAAA;;AAtGa;;ACrBhB;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;EAC7C,IAAID,OAAO,CAACE,iBAAZ,EAA+B;IAC7B,MAAMC,eAAe,GAAGH,OAAO,CAACE,iBAAR,CAA0BF,OAA1B,EAAmCC,IAAnC,CAAxB,CAAA;;AACA,IAAA,IAAIE,eAAJ,EAAqB;AACnB,MAAA,OAAOA,eAAP,CAAA;AACD,KAAA;AACF,GAAA;;EAED,OAAO;AACLxG,IAAAA,CAAC,EAAEL,QAAQ,CAAC8G,eAAT,CAAyBC,WADvB;AAGL;AACA;AACA;AACA;IACAzG,CAAC,EAAEwE,MAAM,CAACkC,WAAAA;GAPZ,CAAA;AASD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,kBAAT,CAA4BpF,IAA5B,EAAkC6E,OAAlC,EAA2CQ,YAA3C,EAAyDC,QAAzD,EAAmEC,KAAnE,EAA0E;EAC/E,IAAIC,YAAY,GAAG,CAAnB,CAAA;;EAEA,IAAIX,OAAO,CAACY,SAAZ,EAAuB;AACrBD,IAAAA,YAAY,GAAGX,OAAO,CAACY,SAAR,CAAkBJ,YAAlB,EAAgCC,QAAhC,EAA0CC,KAA1C,CAAiDvF,CAAAA,IAAjD,CAAf,CAAA;AACD,GAFD,MAEO,IAAI6E,OAAO,CAACa,OAAZ,EAAqB;AAC1BF,IAAAA,YAAY,GAAGX,OAAO,CAACa,OAAR,CAAgB1F,IAAhB,CAAf,CAAA;AACD,GAFM,MAEA;AACL,IAAA,MAAM2F,cAAc,GAAG,SAAA,GAAY3F,IAAI,CAAC,CAAD,CAAJ,CAAQ4F,WAAR,EAAZ,GAAoC5F,IAAI,CAAC6F,KAAL,CAAW,CAAX,CAA3D,CADK;;AAGL,IAAA,IAAIhB,OAAO,CAACc,cAAD,CAAX,EAA6B;AAC3B;AACAH,MAAAA,YAAY,GAAGX,OAAO,CAACc,cAAD,CAAtB,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA,OAAOG,MAAM,CAACN,YAAD,CAAN,IAAwB,CAA/B,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASO,cAAT,CAAwBlB,OAAxB,EAAiCQ,YAAjC,EAA+CC,QAA/C,EAAyDC,KAAzD,EAAgE;EACrE,OAAO;AACL/G,IAAAA,CAAC,EAAE6G,YAAY,CAAC7G,CAAb,GACC4G,kBAAkB,CAAC,MAAD,EAASP,OAAT,EAAkBQ,YAAlB,EAAgCC,QAAhC,EAA0CC,KAA1C,CADnB,GAECH,kBAAkB,CAAC,OAAD,EAAUP,OAAV,EAAmBQ,YAAnB,EAAiCC,QAAjC,EAA2CC,KAA3C,CAHjB;AAIL9G,IAAAA,CAAC,EAAE4G,YAAY,CAAC5G,CAAb,GACC2G,kBAAkB,CAAC,KAAD,EAAQP,OAAR,EAAiBQ,YAAjB,EAA+BC,QAA/B,EAAyCC,KAAzC,CADnB,GAECH,kBAAkB,CAAC,QAAD,EAAWP,OAAX,EAAoBQ,YAApB,EAAkCC,QAAlC,EAA4CC,KAA5C,CAAA;GANxB,CAAA;AAQD;;AChGD;;AACA;;AACA;;AAEA;AACA;AACA;;AACA,MAAMS,SAAN,CAAgB;AACd;AACF;AACA;EACEzC,WAAW,CAAC0C,KAAD,EAAQ;IACjB,IAAKA,CAAAA,KAAL,GAAaA,KAAb,CAAA;IACA,IAAKC,CAAAA,aAAL,GAAqB,CAArB,CAAA;AACA,IAAA,IAAA,CAAKC,MAAL;AAAc;AAAqB,IAAA;AAAE3H,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA9C,CAAA;AACA,IAAA,IAAA,CAAKc,GAAL;AAAW;AAAqB,IAAA;AAAEf,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA3C,CAAA;AACA,IAAA,IAAA,CAAKa,GAAL;AAAW;AAAqB,IAAA;AAAEd,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA3C,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;EACE2H,MAAM,CAACF,aAAD,EAAgB;IACpB,IAAKA,CAAAA,aAAL,GAAqBA,aAArB,CAAA;;AAEA,IAAA,IAAI,CAAC,IAAA,CAAKD,KAAL,CAAW1F,KAAhB,EAAuB;AACrB,MAAA,IAAA,CAAK8F,KAAL,EAAA,CAAA;AACD,KAFD,MAEO;MACL,IAAKC,CAAAA,WAAL,CAAiB,GAAjB,CAAA,CAAA;;MACA,IAAKA,CAAAA,WAAL,CAAiB,GAAjB,CAAA,CAAA;;AACA,MAAA,IAAA,CAAKL,KAAL,CAAWnB,IAAX,CAAgByB,QAAhB,CAAyB,YAAzB,EAAuC;AAAEN,QAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;OAArD,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;;;EACEK,WAAW,CAACE,IAAD,EAAO;IAChB,MAAM;AAAE1B,MAAAA,IAAAA;AAAF,KAAA,GAAW,KAAKmB,KAAtB,CAAA;AACA,IAAA,MAAMQ,MAAM,GAAG,IAAKR,CAAAA,KAAL,CAAWO,IAAI,KAAK,GAAT,GAAe,OAAf,GAAyB,QAApC,CAAA,GAAgD,KAAKN,aAApE,CAAA;IACA,MAAMQ,WAAW,GAAGF,IAAI,KAAK,GAAT,GAAe,MAAf,GAAwB,KAA5C,CAAA;IACA,MAAMd,OAAO,GAAGN,kBAAkB,CAChCsB,WADgC,EAEhC5B,IAAI,CAACD,OAF2B,EAGhCC,IAAI,CAACO,YAH2B,EAIhC,IAAKY,CAAAA,KAAL,CAAWU,IAJqB,EAKhC,IAAKV,CAAAA,KAAL,CAAWV,KALqB,CAAlC,CAAA;IAQA,MAAMqB,WAAW,GAAG,IAAA,CAAKX,KAAL,CAAWW,WAAX,CAAuBJ,IAAvB,CAApB,CAZgB;AAehB;;AACA,IAAA,IAAA,CAAKL,MAAL,CAAYK,IAAZ,CAAoB1H,GAAAA,IAAI,CAACC,KAAL,CAAW,CAAC6H,WAAW,GAAGH,MAAf,IAAyB,CAApC,CAAyCf,GAAAA,OAA7D,CAhBgB;;IAmBhB,IAAKnG,CAAAA,GAAL,CAASiH,IAAT,CAAkBC,GAAAA,MAAM,GAAGG,WAAV,GACb9H,IAAI,CAACC,KAAL,CAAW6H,WAAW,GAAGH,MAAzB,CAAmCf,GAAAA,OADtB,GAEb,IAAA,CAAKS,MAAL,CAAYK,IAAZ,CAFJ,CAnBgB;;AAwBhB,IAAA,IAAA,CAAKlH,GAAL,CAASkH,IAAT,CAAA,GAAkBC,MAAM,GAAGG,WAAV,GACblB,OADa,GAEb,IAAA,CAAKS,MAAL,CAAYK,IAAZ,CAFJ,CAAA;AAGD,GA7Da;;;AAgEdH,EAAAA,KAAK,GAAG;AACN,IAAA,IAAA,CAAKF,MAAL,CAAY3H,CAAZ,GAAgB,CAAhB,CAAA;AACA,IAAA,IAAA,CAAK2H,MAAL,CAAY1H,CAAZ,GAAgB,CAAhB,CAAA;AACA,IAAA,IAAA,CAAKc,GAAL,CAASf,CAAT,GAAa,CAAb,CAAA;AACA,IAAA,IAAA,CAAKe,GAAL,CAASd,CAAT,GAAa,CAAb,CAAA;AACA,IAAA,IAAA,CAAKa,GAAL,CAASd,CAAT,GAAa,CAAb,CAAA;AACA,IAAA,IAAA,CAAKc,GAAL,CAASb,CAAT,GAAa,CAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEoI,EAAAA,UAAU,CAACL,IAAD,EAAOM,SAAP,EAAkB;AAAE;AAC5B,IAAA,OAAO1H,KAAK,CAAC0H,SAAD,EAAY,KAAKvH,GAAL,CAASiH,IAAT,CAAZ,EAA4B,IAAKlH,CAAAA,GAAL,CAASkH,IAAT,CAA5B,CAAZ,CAAA;AACD,GAAA;;AAlFa;;ACVhB,MAAMO,eAAe,GAAG,IAAxB,CAAA;AAEA;;AACA;;AACA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,CAAgB;AACd;AACF;AACA;AACA;AACA;AACA;EACEzD,WAAW,CAACsB,OAAD,EAAUS,QAAV,EAAoBC,KAApB,EAA2BT,IAA3B,EAAiC;IAC1C,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAKD,CAAAA,OAAL,GAAeA,OAAf,CAAA;IACA,IAAKS,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;IACA,IAAKC,CAAAA,KAAL,GAAaA,KAAb,CAAA;AACA;;IACA,IAAKqB,CAAAA,WAAL,GAAmB,IAAnB,CAAA;AACA;;IACA,IAAKK,CAAAA,WAAL,GAAmB,IAAnB,CAAA;IACA,IAAKC,CAAAA,GAAL,GAAW,CAAX,CAAA;IACA,IAAKC,CAAAA,IAAL,GAAY,CAAZ,CAAA;IACA,IAAKC,CAAAA,KAAL,GAAa,CAAb,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,CAAf,CAAA;IACA,IAAKC,CAAAA,SAAL,GAAiB,CAAjB,CAAA;IACA,IAAK/H,CAAAA,GAAL,GAAW,CAAX,CAAA;IACA,IAAKD,CAAAA,GAAL,GAAW,CAAX,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE8G,EAAAA,MAAM,CAACmB,QAAD,EAAWC,SAAX,EAAsBZ,WAAtB,EAAmC;AACvC;AACA,IAAA,MAAMK,WAAW,GAAG;AAAEzI,MAAAA,CAAC,EAAE+I,QAAL;AAAe9I,MAAAA,CAAC,EAAE+I,SAAAA;KAAtC,CAAA;IACA,IAAKP,CAAAA,WAAL,GAAmBA,WAAnB,CAAA;IACA,IAAKL,CAAAA,WAAL,GAAmBA,WAAnB,CAAA;IAEA,MAAMa,MAAM,GAAGb,WAAW,CAACpI,CAAZ,GAAgByI,WAAW,CAACzI,CAA3C,CAAA;IACA,MAAMkJ,MAAM,GAAGd,WAAW,CAACnI,CAAZ,GAAgBwI,WAAW,CAACxI,CAA3C,CAAA;AAEA,IAAA,IAAA,CAAKyI,GAAL,GAAWpI,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAYmI,MAAM,GAAGC,MAAT,GAAkBD,MAAlB,GAA2BC,MAAvC,CAAX,CAAA;AACA,IAAA,IAAA,CAAKP,IAAL,GAAYrI,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAYmI,MAAM,GAAGC,MAAT,GAAkBD,MAAlB,GAA2BC,MAAvC,CAAZ,CAVuC;AAavC;;IACA,IAAKN,CAAAA,KAAL,GAAatI,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAYoI,MAAZ,CAAb,CAAA;AAEA,IAAA,IAAA,CAAKL,OAAL,GAAe,IAAKM,CAAAA,WAAL,EAAf,CAAA;AACA,IAAA,IAAA,CAAKL,SAAL,GAAiB,IAAKM,CAAAA,aAAL,EAAjB,CAAA;AACA,IAAA,IAAA,CAAKrI,GAAL,GAAWT,IAAI,CAACS,GAAL,CACT,IAAA,CAAK8H,OADI,EAET,KAAKC,SAFI,EAGT,IAAKO,CAAAA,OAAL,EAHS,CAAX,CAAA;AAMA,IAAA,IAAA,CAAKvI,GAAL,GAAWR,IAAI,CAACQ,GAAL,CACT,IAAA,CAAK4H,GADI,EAET,IAAKG,CAAAA,OAFI,EAGT,IAAA,CAAKC,SAHI,CAAX,CAAA;;IAMA,IAAI,IAAA,CAAKxC,IAAT,EAAe;AACb,MAAA,IAAA,CAAKA,IAAL,CAAUyB,QAAV,CAAmB,kBAAnB,EAAuC;AAAEuB,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,SAAS,EAAE,IAAKzC,CAAAA,QAAAA;OAA3E,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACE0C,qBAAqB,CAACC,YAAD,EAAe;AAClC,IAAA,MAAMC,UAAU;AAAG;AACjBD,IAAAA,YAAY,GAAG,WADjB,CAAA;AAGA,IAAA,MAAME,WAAW,GAAG,IAAA,CAAKtD,OAAL,CAAaqD,UAAb,CAApB,CAAA;;IAEA,IAAI,CAACC,WAAL,EAAkB;AAChB,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;MACrC,OAAOA,WAAW,CAAC,IAAD,CAAlB,CAAA;AACD,KAAA;;IAED,IAAIA,WAAW,KAAK,MAApB,EAA4B;AAC1B,MAAA,OAAO,KAAKhB,IAAZ,CAAA;AACD,KAAA;;IAED,IAAIgB,WAAW,KAAK,KAApB,EAA2B;AACzB,MAAA,OAAO,KAAKjB,GAAZ,CAAA;AACD,KAAA;;IAED,OAAOpB,MAAM,CAACqC,WAAD,CAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEP,EAAAA,aAAa,GAAG;AACd,IAAA,IAAI1B,aAAa,GAAG,IAAA,CAAK8B,qBAAL,CAA2B,WAA3B,CAApB,CAAA;;AAEA,IAAA,IAAI9B,aAAJ,EAAmB;AACjB,MAAA,OAAOA,aAAP,CAAA;AACD,KALa;;;IAQdA,aAAa,GAAGpH,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAY,IAAK4H,CAAAA,GAAL,GAAW,CAAvB,CAAhB,CAAA;;IAEA,IAAI,IAAA,CAAKD,WAAL,IAAoBf,aAAa,GAAG,IAAKe,CAAAA,WAAL,CAAiBzI,CAAjC,GAAqCuI,eAA7D,EAA8E;AAC5Eb,MAAAA,aAAa,GAAGa,eAAe,GAAG,IAAKE,CAAAA,WAAL,CAAiBzI,CAAnD,CAAA;AACD,KAAA;;AAED,IAAA,OAAO0H,aAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEyB,EAAAA,WAAW,GAAG;AACZ,IAAA,OAAO,KAAKK,qBAAL,CAA2B,SAA3B,CAAA,IAAyC,KAAKd,GAArD,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEW,EAAAA,OAAO,GAAG;AACR;AACA;AACA,IAAA,OAAO,IAAKG,CAAAA,qBAAL,CAA2B,KAA3B,KAAqClJ,IAAI,CAACS,GAAL,CAAS,CAAT,EAAY,IAAA,CAAK2H,GAAL,GAAW,CAAvB,CAA5C,CAAA;AACD,GAAA;;AArJa;;ACbhB;AAiCA;AACA;AACA;;AACA,MAAMkB,KAAN,CAAY;AACV;AACF;AACA;AACA;AACA;AACE7E,EAAAA,WAAW,CAACoD,IAAD,EAAOpB,KAAP,EAAcT,IAAd,EAAoB;IAC7B,IAAK6B,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAKpB,CAAAA,KAAL,GAAaA,KAAb,CAAA;IACA,IAAKT,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA,IAAA,IAAA,CAAKuD,QAAL,GAAiB9C,KAAK,KAAKT,IAAI,CAACwD,SAAhC,CAAA;IACA,IAAKC,CAAAA,iBAAL,GAAyB,CAAzB,CAAA;AACA;;AACA,IAAA,IAAA,CAAK3B,WAAL,GAAmB;AAAEpI,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA9B,CAAA;AACA;;AACA,IAAA,IAAA,CAAK+J,GAAL,GAAW;AAAEhK,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAAtB,CAAA;IAEA,IAAKgK,CAAAA,YAAL,GAAqB,IAAA,CAAKJ,QAAL,IAAiB,CAACvD,IAAI,CAAC4D,MAAL,CAAYC,MAAnD,CAAA;AAEA,IAAA,IAAA,CAAKb,UAAL,GAAkB,IAAId,SAAJ,CAAclC,IAAI,CAACD,OAAnB,EAA4B8B,IAA5B,EAAkCpB,KAAlC,EAAyCT,IAAzC,CAAlB,CAAA;AAEA,IAAA,IAAA,CAAKA,IAAL,CAAUyB,QAAV,CAAmB,aAAnB,EAAkC;AAChCN,MAAAA,KAAK,EAAE,IADyB;MAEhCU,IAAI,EAAE,KAAKA,IAFqB;AAGhCpB,MAAAA,KAAAA;KAHF,CAAA,CAAA;IAMA,IAAKqD,CAAAA,OAAL,GAAe,IAAA,CAAK9D,IAAL,CAAU+D,aAAV,CAAwBC,iBAAxB,CAA0C,IAA1C,CAAf,CAAA;AACA,IAAA,IAAA,CAAKC,SAAL,GAAiBjL,aAAa,CAAC,iBAAD,EAAoB,KAApB,CAA9B,CAAA;AACA;;IACA,IAAKkL,CAAAA,aAAL,GAAqB,IAArB,CAAA;IAEA,IAAK9C,CAAAA,aAAL,GAAqB,CAArB,CAAA;AACA;;AACA,IAAA,IAAA,CAAK3F,KAAL,GAAa,IAAKqI,CAAAA,OAAL,CAAarI,KAA1B,CAAA;AACA;;AACA,IAAA,IAAA,CAAKC,MAAL,GAAc,IAAKoI,CAAAA,OAAL,CAAapI,MAA3B,CAAA;IACA,IAAKyI,CAAAA,aAAL,GAAqB,KAArB,CAAA;AACA,IAAA,IAAA,CAAKC,MAAL,GAAc,IAAIlD,SAAJ,CAAc,IAAd,CAAd,CAAA;IAEA,IAAKmD,CAAAA,kBAAL,GAA0B,CAAC,CAA3B,CAAA;IACA,IAAKC,CAAAA,mBAAL,GAA2B,CAAC,CAA5B,CAAA;AAEA,IAAA,IAAA,CAAKtE,IAAL,CAAUyB,QAAV,CAAmB,WAAnB,EAAgC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAAzC,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;EACEoD,WAAW,CAAChB,QAAD,EAAW;AACpB,IAAA,IAAIA,QAAQ,IAAI,CAAC,IAAA,CAAKA,QAAtB,EAAgC;AAC9B;AACA,MAAA,IAAA,CAAKiB,QAAL,EAAA,CAAA;AACD,KAHD,MAGO,IAAI,CAACjB,QAAD,IAAa,IAAA,CAAKA,QAAtB,EAAgC;AACrC;AACA,MAAA,IAAA,CAAKkB,UAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;;;EACEC,MAAM,CAACR,aAAD,EAAgB;IACpB,IAAKA,CAAAA,aAAL,GAAqBA,aAArB,CAAA;IAEA,IAAKD,CAAAA,SAAL,CAAenJ,KAAf,CAAqB6J,eAArB,GAAuC,KAAvC,CAHoB;;IAMpB,IAAI,CAAC,IAAK9C,CAAAA,IAAV,EAAgB;AACd,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAK+C,aAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAKC,IAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKC,iBAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKC,WAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAKb,aAAL,CAAmB5K,WAAnB,CAA+B,KAAK2K,SAApC,CAAA,CAAA;AAEA,IAAA,IAAA,CAAKe,mBAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAKhF,IAAL,CAAUyB,QAAV,CAAmB,cAAnB,EAAmC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA5C,CAAA,CAAA;AAEA,IAAA,IAAA,CAAK8D,mBAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAKjF,IAAL,CAAUyB,QAAV,CAAmB,iBAAnB,EAAsC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA/C,CAAA,CAAA;;IAEA,IAAI,IAAA,CAAKoC,QAAT,EAAmB;AACjB,MAAA,IAAA,CAAKiB,QAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAEDK,EAAAA,IAAI,GAAG;AACL,IAAA,IAAA,CAAKf,OAAL,CAAae,IAAb,CAAkB,KAAlB,CAAA,CAAA;AACA,IAAA,IAAA,CAAK7E,IAAL,CAAUyB,QAAV,CAAmB,WAAnB,EAAgC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAAzC,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE4D,EAAAA,WAAW,GAAG;IACZ,MAAM;AAAE/E,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;AACA,IAAA,MAAMkF,iBAAiB,GAAG,IAA1B,CAFY;AAIZ;;IACA,IAAI,IAAA,CAAKf,aAAL,IACG,CAACnE,IAAI,CAAC4D,MAAL,CAAYC,MADhB,IAEG7D,IAAI,CAACmF,UAAL,CAAgBC,SAAhB,EAFH,IAGI,CAAC,KAAK7B,QAAN,IAAkB,CAAC2B,iBAH3B,EAG+C;AAC7C,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,KAAKlF,IAAL,CAAUyB,QAAV,CAAmB,aAAnB,EAAkC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA3C,CAAA,CAAmDkE,gBAAvD,EAAyE;AACvE,MAAA,OAAA;AACD,KAAA;;IAED,IAAKlB,CAAAA,aAAL,GAAqB,IAArB,CAAA;IAEA,IAAKL,CAAAA,OAAL,CAAaY,MAAb,EAAA,CAAA;AAEA,IAAA,IAAA,CAAK1E,IAAL,CAAUyB,QAAV,CAAmB,oBAAnB,EAAyC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAAlD,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEqD,EAAAA,QAAQ,GAAG;IACT,IAAKjB,CAAAA,QAAL,GAAgB,IAAhB,CAAA;AACA,IAAA,IAAA,CAAKwB,WAAL,EAAA,CAAA;IACA,IAAKjB,CAAAA,OAAL,CAAaU,QAAb,EAAA,CAAA;AACA,IAAA,IAAA,CAAKxE,IAAL,CAAUyB,QAAV,CAAmB,eAAnB,EAAoC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA7C,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;AACEsD,EAAAA,UAAU,GAAG;IACX,IAAKlB,CAAAA,QAAL,GAAgB,KAAhB,CAAA;IACA,IAAKO,CAAAA,OAAL,CAAaW,UAAb,EAAA,CAAA;;AAEA,IAAA,IAAI,KAAKrD,aAAL,KAAuB,KAAK4B,UAAL,CAAgBT,OAA3C,EAAoD;AAClD;AACA,MAAA,IAAA,CAAKqC,aAAL,EAAA,CAAA;AACD,KAPU;;;IAUX,IAAKnB,CAAAA,iBAAL,GAAyB,CAAzB,CAAA;AACA,IAAA,IAAA,CAAKuB,mBAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKC,mBAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKH,iBAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAK9E,IAAL,CAAUyB,QAAV,CAAmB,iBAAnB,EAAsC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA/C,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEmE,EAAAA,OAAO,GAAG;AACR,IAAA,IAAA,CAAKxB,OAAL,CAAayB,QAAb,GAAwB,KAAxB,CAAA;IACA,IAAKzB,CAAAA,OAAL,CAAa7E,MAAb,EAAA,CAAA;IACA,IAAKgF,CAAAA,SAAL,CAAehF,MAAf,EAAA,CAAA;AACA,IAAA,IAAA,CAAKe,IAAL,CAAUyB,QAAV,CAAmB,cAAnB,EAAmC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA5C,CAAA,CAAA;AACD,GAAA;;AAEDqE,EAAAA,MAAM,GAAG;IACP,IAAI,IAAA,CAAKpE,aAAL,KAAuB,IAAK4B,CAAAA,UAAL,CAAgBT,OAAvC,IAAkD,CAAC,IAAKgB,CAAAA,QAA5D,EAAsE;AACpE;AACA;AAEA;AACA,MAAA,IAAA,CAAKqB,aAAL,EAAA,CAAA;MACA,IAAKnB,CAAAA,iBAAL,GAAyB,CAAzB,CAAA;AACA,MAAA,IAAA,CAAKuB,mBAAL,EAAA,CAAA;AACA,MAAA,IAAA,CAAKC,mBAAL,EAAA,CAAA;AACA,MAAA,IAAA,CAAKH,iBAAL,EAAA,CAAA;AACD,KAVD,MAUO;AACL;AACA,MAAA,IAAA,CAAKF,aAAL,EAAA,CAAA;AACA,MAAA,IAAA,CAAKR,MAAL,CAAY9C,MAAZ,CAAmB,KAAKF,aAAxB,CAAA,CAAA;MACA,IAAKqE,CAAAA,KAAL,CAAW,IAAA,CAAK/B,GAAL,CAAShK,CAApB,EAAuB,IAAA,CAAKgK,GAAL,CAAS/J,CAAhC,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAGD;AACF;AACA;AACA;AACA;AACA;;;EACEmL,iBAAiB,CAACY,KAAD,EAAQ;AACvB;AACA;IACA,MAAMC,eAAe,GAAG,IAAKlC,CAAAA,iBAAL,IAA0B,IAAKT,CAAAA,UAAL,CAAgBT,OAAlE,CAAA;;IAEA,IAAI,CAACoD,eAAL,EAAsB;AACpB,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,MAAMlK,KAAK,GAAGzB,IAAI,CAACC,KAAL,CAAW,IAAKwB,CAAAA,KAAL,GAAakK,eAAxB,KAA4C,IAAK3F,CAAAA,IAAL,CAAUO,YAAV,CAAuB7G,CAAjF,CAAA;AACA,IAAA,MAAMgC,MAAM,GAAG1B,IAAI,CAACC,KAAL,CAAW,IAAKyB,CAAAA,MAAL,GAAciK,eAAzB,KAA6C,IAAK3F,CAAAA,IAAL,CAAUO,YAAV,CAAuB5G,CAAnF,CAAA;;IAEA,IAAI,CAAC,IAAKiM,CAAAA,WAAL,CAAiBnK,KAAjB,EAAwBC,MAAxB,CAAD,IAAoC,CAACgK,KAAzC,EAAgD;AAC9C,MAAA,OAAA;AACD,KAAA;;AACD,IAAA,IAAA,CAAK5B,OAAL,CAAa+B,gBAAb,CAA8BpK,KAA9B,EAAqCC,MAArC,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEkK,EAAAA,WAAW,CAACnK,KAAD,EAAQC,MAAR,EAAgB;IACzB,IAAID,KAAK,KAAK,IAAK4I,CAAAA,kBAAf,IACG3I,MAAM,KAAK,IAAK4I,CAAAA,mBADvB,EAC4C;MAC1C,IAAKD,CAAAA,kBAAL,GAA0B5I,KAA1B,CAAA;MACA,IAAK6I,CAAAA,mBAAL,GAA2B5I,MAA3B,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;AAED;;;AACAoK,EAAAA,qBAAqB,GAAG;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACtB,IAAA,OAAA,CAAA,qBAAA,GAAO,KAAKhC,OAAL,CAAaiC,WAApB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAO,sBAA0BC,OAAjC,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,MAAM,CAACC,aAAD,EAAgBC,WAAhB,EAA6BC,kBAA7B,EAAiDC,YAAjD,EAA+D;IACnE,MAAM;AAAErG,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;;IACA,IAAI,CAAC,IAAKsG,CAAAA,UAAL,EAAD,IACGtG,IAAI,CAACmF,UAAL,CAAgBC,SAAhB,EADP,EACoC;AAClC,MAAA,OAAA;AACD,KAAA;;AAEDpF,IAAAA,IAAI,CAACyB,QAAL,CAAc,cAAd,EAA8B;MAC5ByE,aAD4B;MACbC,WADa;AACAC,MAAAA,kBAAAA;AADA,KAA9B,EAPmE;;AAYnEpG,IAAAA,IAAI,CAACuG,UAAL,CAAgBC,UAAhB,GAZmE;AAenE;AACA;;IAEA,MAAMC,aAAa,GAAG,IAAA,CAAKrF,aAA3B,CAAA;;IAEA,IAAI,CAACiF,YAAL,EAAmB;AACjBH,MAAAA,aAAa,GAAG5L,KAAK,CAAC4L,aAAD,EAAgB,IAAKlD,CAAAA,UAAL,CAAgBxI,GAAhC,EAAqC,IAAA,CAAKwI,UAAL,CAAgBvI,GAArD,CAArB,CAAA;AACD,KAtBkE;AAyBnE;AACA;;;IAEA,IAAKiM,CAAAA,YAAL,CAAkBR,aAAlB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKxC,GAAL,CAAShK,CAAT,GAAa,IAAKiN,CAAAA,wBAAL,CAA8B,GAA9B,EAAmCR,WAAnC,EAAgDM,aAAhD,CAAb,CAAA;AACA,IAAA,IAAA,CAAK/C,GAAL,CAAS/J,CAAT,GAAa,IAAKgN,CAAAA,wBAAL,CAA8B,GAA9B,EAAmCR,WAAnC,EAAgDM,aAAhD,CAAb,CAAA;IACA3M,UAAU,CAAC,IAAK4J,CAAAA,GAAN,CAAV,CAAA;;IAEA,MAAMkD,gBAAgB,GAAG,MAAM;MAC7B,IAAKC,CAAAA,cAAL,CAAoBX,aAApB,CAAA,CAAA;;AACA,MAAA,IAAA,CAAKjB,mBAAL,EAAA,CAAA;KAFF,CAAA;;IAKA,IAAI,CAACmB,kBAAL,EAAyB;MACvBQ,gBAAgB,EAAA,CAAA;AACjB,KAFD,MAEO;AACL5G,MAAAA,IAAI,CAACuG,UAAL,CAAgBO,eAAhB,CAAgC;AAC9BC,QAAAA,KAAK,EAAE,IADuB;AAE9BC,QAAAA,IAAI,EAAE,QAFwB;QAG9BpI,MAAM,EAAE,KAAKqF,SAHiB;QAI9BlJ,SAAS,EAAE,IAAKkM,CAAAA,mBAAL,EAJmB;AAK9BC,QAAAA,UAAU,EAAEN,gBALkB;AAM9BzL,QAAAA,QAAQ,EAAEiL,kBANoB;AAO9Be,QAAAA,MAAM,EAAEnH,IAAI,CAACD,OAAL,CAAaoH,MAAAA;OAPvB,CAAA,CAAA;AASD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;EACEC,UAAU,CAACjB,WAAD,EAAc;IACtB,IAAKF,CAAAA,MAAL,CACE,IAAA,CAAK7E,aAAL,KAAuB,IAAK4B,CAAAA,UAAL,CAAgBT,OAAvC,GACI,IAAA,CAAKS,UAAL,CAAgBR,SADpB,GACgC,IAAKQ,CAAAA,UAAL,CAAgBT,OAFlD,EAGE4D,WAHF,EAIE,IAAA,CAAKnG,IAAL,CAAUD,OAAV,CAAkBsH,qBAJpB,CAAA,CAAA;AAMD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;EACEX,YAAY,CAACtF,aAAD,EAAgB;IAC1B,IAAKA,CAAAA,aAAL,GAAqBA,aAArB,CAAA;AACA,IAAA,IAAA,CAAKgD,MAAL,CAAY9C,MAAZ,CAAmB,KAAKF,aAAxB,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEuF,EAAAA,wBAAwB,CAACjF,IAAD,EAAO4F,KAAP,EAAcb,aAAd,EAA6B;AACnD,IAAA,MAAMc,gBAAgB,GAAG,IAAKnD,CAAAA,MAAL,CAAY3J,GAAZ,CAAgBiH,IAAhB,CAAA,GAAwB,KAAK0C,MAAL,CAAY5J,GAAZ,CAAgBkH,IAAhB,CAAjD,CAAA;;IACA,IAAI6F,gBAAgB,KAAK,CAAzB,EAA4B;AAC1B,MAAA,OAAO,KAAKnD,MAAL,CAAY/C,MAAZ,CAAmBK,IAAnB,CAAP,CAAA;AACD,KAAA;;IAED,IAAI,CAAC4F,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAG,IAAA,CAAKtH,IAAL,CAAUwH,sBAAV,EAAR,CAAA;AACD,KAAA;;IAED,IAAI,CAACf,aAAL,EAAoB;AAClBA,MAAAA,aAAa,GAAG,IAAA,CAAKzD,UAAL,CAAgBT,OAAhC,CAAA;AACD,KAAA;;AAED,IAAA,MAAMkF,UAAU,GAAG,IAAKrG,CAAAA,aAAL,GAAqBqF,aAAxC,CAAA;IACA,OAAO,IAAA,CAAKrC,MAAL,CAAYrC,UAAZ,CACLL,IADK,EAEL,CAAC,IAAKgC,CAAAA,GAAL,CAAShC,IAAT,IAAiB4F,KAAK,CAAC5F,IAAD,CAAvB,IAAiC+F,UAAjC,GAA8CH,KAAK,CAAC5F,IAAD,CAF9C,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE+D,EAAAA,KAAK,CAACiC,IAAD,EAAOC,IAAP,EAAa;AAChB,IAAA,IAAA,CAAKjE,GAAL,CAAShK,CAAT,GAAa,IAAK0K,CAAAA,MAAL,CAAYrC,UAAZ,CAAuB,GAAvB,EAA4B2F,IAA5B,CAAb,CAAA;AACA,IAAA,IAAA,CAAKhE,GAAL,CAAS/J,CAAT,GAAa,IAAKyK,CAAAA,MAAL,CAAYrC,UAAZ,CAAuB,GAAvB,EAA4B4F,IAA5B,CAAb,CAAA;AACA,IAAA,IAAA,CAAK1C,mBAAL,EAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACE2C,EAAAA,UAAU,GAAG;AACX,IAAA,OAAOC,OAAO,CAAC,IAAKpM,CAAAA,KAAN,CAAP,IAAwB,IAAK2F,CAAAA,aAAL,GAAqB,IAAA,CAAK4B,UAAL,CAAgBZ,GAApE,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEkE,EAAAA,UAAU,GAAG;IACX,OAAOuB,OAAO,CAAC,IAAA,CAAKpM,KAAN,CAAP,IAAuB,IAAKqI,CAAAA,OAAL,CAAawC,UAAb,EAA9B,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACErB,EAAAA,mBAAmB,GAAG;AACpB,IAAA,IAAA,CAAK6C,mBAAL,CAAyB,IAAKpE,CAAAA,GAAL,CAAShK,CAAlC,EAAqC,IAAA,CAAKgK,GAAL,CAAS/J,CAA9C,EAAiD,KAAKyH,aAAtD,CAAA,CAAA;;AACA,IAAA,IAAI,IAAS,KAAA,IAAA,CAAKpB,IAAL,CAAU+H,SAAvB,EAAkC;AAChC,MAAA,IAAA,CAAK/H,IAAL,CAAUyB,QAAV,CAAmB,eAAnB,EAAoC;AAAEN,QAAAA,KAAK,EAAE,IAAA;OAA7C,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAED6D,EAAAA,mBAAmB,GAAG;AACpB,IAAA,IAAA,CAAK5D,aAAL,GAAqB,IAAA,CAAK4B,UAAL,CAAgBT,OAArC,CADoB;;AAIpB,IAAA,IAAA,CAAK6B,MAAL,CAAY9C,MAAZ,CAAmB,KAAKF,aAAxB,CAAA,CAAA;IACA7H,cAAc,CAAC,KAAKmK,GAAN,EAAW,KAAKU,MAAL,CAAY/C,MAAvB,CAAd,CAAA;AACA,IAAA,IAAA,CAAKrB,IAAL,CAAUyB,QAAV,CAAmB,gBAAnB,EAAqC;AAAEN,MAAAA,KAAK,EAAE,IAAA;KAA9C,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE2G,EAAAA,mBAAmB,CAACpO,CAAD,EAAIC,CAAJ,EAAOqO,IAAP,EAAa;AAC9BA,IAAAA,IAAI,IAAI,IAAKvE,CAAAA,iBAAL,IAA0B,IAAKT,CAAAA,UAAL,CAAgBT,OAAlD,CAAA;IACA1H,YAAY,CAAC,KAAKoJ,SAAN,EAAiBvK,CAAjB,EAAoBC,CAApB,EAAuBqO,IAAvB,CAAZ,CAAA;AACD,GAAA;;AAEDpD,EAAAA,aAAa,GAAG;IACd,MAAM;AAAE5E,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;IAEAzG,cAAc,CACZ,KAAKuI,WADO,EAEZb,cAAc,CAACjB,IAAI,CAACD,OAAN,EAAeC,IAAI,CAACO,YAApB,EAAkC,IAAKsB,CAAAA,IAAvC,EAA6C,IAAKpB,CAAAA,KAAlD,CAFF,CAAd,CAAA;IAKA,IAAKuC,CAAAA,UAAL,CAAgB1B,MAAhB,CAAuB,IAAA,CAAK7F,KAA5B,EAAmC,IAAKC,CAAAA,MAAxC,EAAgD,IAAA,CAAKoG,WAArD,CAAA,CAAA;AAEA9B,IAAAA,IAAI,CAACyB,QAAL,CAAc,eAAd,EAA+B;AAC7BN,MAAAA,KAAK,EAAE,IAAA;KADT,CAAA,CAAA;AAGD,GAAA;AAED;;;AACA8F,EAAAA,mBAAmB,GAAG;AACpB,IAAA,MAAMtM,KAAK,GAAG,IAAKyG,CAAAA,aAAL,IAAsB,IAAA,CAAKqC,iBAAL,IAA0B,IAAKT,CAAAA,UAAL,CAAgBT,OAAhE,CAAd,CAAA;AACA,IAAA,OAAO7H,iBAAiB,CAAC,IAAKgJ,CAAAA,GAAL,CAAShK,CAAV,EAAa,IAAA,CAAKgK,GAAL,CAAS/J,CAAtB,EAAyBgB,KAAzB,CAAxB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEkM,cAAc,CAACoB,aAAD,EAAgB;AAC5B,IAAA,IAAIA,aAAa,KAAK,IAAKxE,CAAAA,iBAA3B,EAA8C;AAC5C,MAAA,OAAA;AACD,KAAA;;IAED,IAAKA,CAAAA,iBAAL,GAAyBwE,aAAzB,CAAA;AACA,IAAA,IAAA,CAAKnD,iBAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAK9E,IAAL,CAAUyB,QAAV,CAAmB,mBAAnB,CAAA,CAAA;AACD,GAAA;;AAndS;;AChCZ;;AACA;;AAEA,MAAMyG,gBAAgB,GAAG,IAAzB,CAAA;AACA,MAAMC,sBAAsB,GAAG,GAA/B;;AAGA,MAAMC,kBAAkB,GAAG,GAA3B;AAGA;;AACA,MAAMC,oBAAoB,GAAG,GAA7B,CAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,eAAjB,EAAkCC,gBAAlC,EAAoD;AAClD,EAAA,OAAOD,eAAe,GAAGC,gBAAlB,IAAsC,CAAA,GAAIA,gBAA1C,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;;;AACA,MAAMC,WAAN,CAAkB;AAChB;AACF;AACA;EACEhK,WAAW,CAACiK,QAAD,EAAW;IACpB,IAAKA,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;AACA,IAAA,IAAA,CAAK1I,IAAL,GAAY0I,QAAQ,CAAC1I,IAArB,CAAA;AACA;;AACA,IAAA,IAAA,CAAK2I,QAAL,GAAgB;AAAEjP,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA3B,CAAA;AACD,GAAA;;AAEDiP,EAAAA,KAAK,GAAG;AACN,IAAA,IAAI,IAAK5I,CAAAA,IAAL,CAAU+H,SAAd,EAAyB;MACvBxO,cAAc,CAAC,IAAKoP,CAAAA,QAAN,EAAgB,IAAA,CAAK3I,IAAL,CAAU+H,SAAV,CAAoBrE,GAApC,CAAd,CAAA;AACD,KAAA;;AACD,IAAA,IAAA,CAAK1D,IAAL,CAAUuG,UAAV,CAAqBsC,OAArB,EAAA,CAAA;AACD,GAAA;;AAEDC,EAAAA,MAAM,GAAG;IACP,MAAM;MAAEtP,EAAF;MAAMuP,MAAN;AAAcC,MAAAA,QAAAA;AAAd,KAAA,GAA2B,KAAKN,QAAtC,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB,KAAK/H,IAA3B,CAAA;;AAEA,IAAA,IAAIgJ,QAAQ,KAAK,GAAb,IACG,IAAKhJ,CAAAA,IAAL,CAAUD,OAAV,CAAkBkJ,mBADrB,IAEIlB,SAAS,IAAIA,SAAS,CAAC3G,aAAV,IAA2B2G,SAAS,CAAC/E,UAAV,CAAqBZ,GAFjE,IAGG,CAAC,IAAKsG,CAAAA,QAAL,CAAcQ,YAHtB,EAGoC;AAClC;AACA,MAAA,MAAMvB,IAAI,GAAGI,SAAS,CAACrE,GAAV,CAAc/J,CAAd,IAAmBH,EAAE,CAACG,CAAH,GAAOoP,MAAM,CAACpP,CAAjC,CAAb,CAAA;;AACA,MAAA,IAAI,CAAC,IAAKqG,CAAAA,IAAL,CAAUyB,QAAV,CAAmB,cAAnB,EAAmC;AAAEkG,QAAAA,IAAAA;OAArC,CAAA,CAA6CtC,gBAAlD,EAAoE;AAClE,QAAA,IAAA,CAAK8D,mBAAL,CAAyB,GAAzB,EAA8BxB,IAA9B,EAAoCQ,sBAApC,CAAA,CAAA;;AACA,QAAA,MAAMiB,SAAS,GAAG,CAAA,GAAIpP,IAAI,CAACG,GAAL,CAAS,IAAA,CAAKkP,qBAAL,CAA2BtB,SAAS,CAACrE,GAAV,CAAc/J,CAAzC,CAAT,CAAtB,CAAA;AACA,QAAA,IAAA,CAAKqG,IAAL,CAAUsJ,cAAV,CAAyBF,SAAzB,CAAA,CAAA;AACArB,QAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,OAAA;AACF,KAZD,MAYO;AACL,MAAA,MAAMsE,iBAAiB,GAAG,IAAA,CAAKC,oBAAL,CAA0B,GAA1B,CAA1B,CAAA;;MACA,IAAI,CAACD,iBAAL,EAAwB;QACtB,IAAKC,CAAAA,oBAAL,CAA0B,GAA1B,CAAA,CAAA;;AAEA,QAAA,IAAIzB,SAAJ,EAAe;AACbjO,UAAAA,UAAU,CAACiO,SAAS,CAACrE,GAAX,CAAV,CAAA;AACAqE,UAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;;AAEDwE,EAAAA,GAAG,GAAG;IACJ,MAAM;AAAEC,MAAAA,QAAAA;AAAF,KAAA,GAAe,KAAKhB,QAA1B,CAAA;IACA,MAAM;MAAEvD,UAAF;AAAc4C,MAAAA,SAAAA;AAAd,KAAA,GAA4B,KAAK/H,IAAvC,CAAA;IACA,IAAI2J,SAAS,GAAG,CAAhB,CAAA;AAEA,IAAA,IAAA,CAAK3J,IAAL,CAAUuG,UAAV,CAAqBsC,OAArB,GALI;;AAQJ,IAAA,IAAI1D,UAAU,CAACC,SAAX,EAAJ,EAA4B;AAC1B;MACA,MAAMwE,mBAAmB,GAAGzE,UAAU,CAACzL,CAAX,GAAeyL,UAAU,CAAC0E,aAAX,EAA3C,CAF0B;AAK1B;AACA;AACA;;MACA,MAAMC,2BAA2B,GAAIF,mBAAmB,GAAG,IAAA,CAAK5J,IAAL,CAAUO,YAAV,CAAuB7G,CAAlF,CAR0B;AAW1B;AACA;AACA;AACA;AACA;AACA;AACA;;MACA,IAAKgQ,QAAQ,CAAChQ,CAAT,GAAa,CAAC2O,oBAAd,IAAsCyB,2BAA2B,GAAG,CAArE,IACIJ,QAAQ,CAAChQ,CAAT,GAAa,GAAb,IAAoBoQ,2BAA2B,GAAG,CAAC,GAD3D,EACiE;AAC/D;AACAH,QAAAA,SAAS,GAAG,CAAZ,CAAA;AACAD,QAAAA,QAAQ,CAAChQ,CAAT,GAAaM,IAAI,CAACQ,GAAL,CAASkP,QAAQ,CAAChQ,CAAlB,EAAqB,CAArB,CAAb,CAAA;OAJF,MAKO,IAAKgQ,QAAQ,CAAChQ,CAAT,GAAa2O,oBAAb,IAAqCyB,2BAA2B,GAAG,CAApE,IACHJ,QAAQ,CAAChQ,CAAT,GAAa,CAAC,GAAd,IAAqBoQ,2BAA2B,GAAG,GADpD,EAC0D;AAC/D;QACAH,SAAS,GAAG,CAAC,CAAb,CAAA;AACAD,QAAAA,QAAQ,CAAChQ,CAAT,GAAaM,IAAI,CAACS,GAAL,CAASiP,QAAQ,CAAChQ,CAAlB,EAAqB,CAArB,CAAb,CAAA;AACD,OAAA;;MAEDyL,UAAU,CAAC4E,WAAX,CAAuBJ,SAAvB,EAAkC,IAAlC,EAAwCD,QAAQ,CAAChQ,CAAjD,CAAA,CAAA;AACD,KAvCG;;;AA0CJ,IAAA,IAAKqO,SAAS,IAAIA,SAAS,CAAC3G,aAAV,GAA0B2G,SAAS,CAAC/E,UAAV,CAAqBvI,GAA7D,IACG,IAAA,CAAKiO,QAAL,CAAcQ,YADrB,EACmC;AACjC,MAAA,IAAA,CAAKR,QAAL,CAAc1F,UAAd,CAAyBgH,cAAzB,CAAwC,IAAxC,CAAA,CAAA;AACD,KAHD,MAGO;AACL;AACA;AACA;AACA;MACA,IAAKC,CAAAA,wBAAL,CAA8B,GAA9B,CAAA,CAAA;;MACA,IAAKA,CAAAA,wBAAL,CAA8B,GAA9B,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;EACEA,wBAAwB,CAACvI,IAAD,EAAO;IAC7B,MAAM;AAAEgI,MAAAA,QAAAA;AAAF,KAAA,GAAe,KAAKhB,QAA1B,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB,KAAK/H,IAA3B,CAAA;;IAEA,IAAI,CAAC+H,SAAL,EAAgB;AACd,MAAA,OAAA;AACD,KAAA;;IAED,MAAM;MAAErE,GAAF;AAAOU,MAAAA,MAAAA;AAAP,KAAA,GAAkB2D,SAAxB,CAAA;AACA,IAAA,MAAMmC,MAAM,GAAGxG,GAAG,CAAChC,IAAD,CAAlB,CAAA;AACA,IAAA,MAAMyI,gBAAgB,GAAI,IAAKnK,CAAAA,IAAL,CAAUoJ,SAAV,GAAsB,CAAtB,IAA2B1H,IAAI,KAAK,GAA9D,CAV6B;AAa7B;;AACA,IAAA,MAAM8G,gBAAgB,GAAG,KAAzB,CAd6B;AAgB7B;;AACA,IAAA,MAAM4B,iBAAiB,GAAGF,MAAM,GAAG5B,OAAO,CAACoB,QAAQ,CAAChI,IAAD,CAAT,EAAiB8G,gBAAjB,CAA1C,CAAA;;AAEA,IAAA,IAAI2B,gBAAJ,EAAsB;AACpB,MAAA,MAAME,UAAU,GAAG,IAAA,CAAKhB,qBAAL,CAA2Ba,MAA3B,CAAnB,CAAA;;MACA,MAAMI,mBAAmB,GAAG,IAAKjB,CAAAA,qBAAL,CAA2Be,iBAA3B,CAA5B,CAFoB;AAKpB;;;AACA,MAAA,IAAKC,UAAU,GAAG,CAAb,IAAkBC,mBAAmB,GAAG,CAAClC,kBAA1C,IACIiC,UAAU,GAAG,CAAb,IAAkBC,mBAAmB,GAAGlC,kBADhD,EACqE;QACnE,IAAKpI,CAAAA,IAAL,CAAUuK,KAAV,EAAA,CAAA;AACA,QAAA,OAAA;AACD,OAAA;AACF,KA9B4B;;;IAiC7B,MAAMC,oBAAoB,GAAGpG,MAAM,CAACrC,UAAP,CAAkBL,IAAlB,EAAwB0I,iBAAxB,CAA7B,CAjC6B;AAoC7B;;IACA,IAAIF,MAAM,KAAKM,oBAAf,EAAqC;AACnC,MAAA,OAAA;AACD,KAvC4B;;;IA0C7B,MAAMC,YAAY,GAAID,oBAAoB,KAAKJ,iBAA1B,GAA+C,CAA/C,GAAmD,IAAxE,CAAA;AAEA,IAAA,MAAMM,gBAAgB,GAAG,IAAK1K,CAAAA,IAAL,CAAUoJ,SAAnC,CAAA;AACA,IAAA,MAAMuB,YAAY,GAAGH,oBAAoB,GAAGN,MAA5C,CAAA;AAEA,IAAA,IAAA,CAAKlK,IAAL,CAAUuG,UAAV,CAAqBqE,WAArB,CAAiC;MAC/B5D,IAAI,EAAE,eAAetF,IADU;AAE/BqF,MAAAA,KAAK,EAAE,IAFwB;AAG/B6B,MAAAA,KAAK,EAAEsB,MAHwB;AAI/BT,MAAAA,GAAG,EAAEe,oBAJ0B;AAK/Bd,MAAAA,QAAQ,EAAEA,QAAQ,CAAChI,IAAD,CALa;MAM/B+I,YAN+B;MAO/BI,QAAQ,EAAGC,GAAD,IAAS;AACjB;QACA,IAAIX,gBAAgB,IAAI,IAAKnK,CAAAA,IAAL,CAAUoJ,SAAV,GAAsB,CAA9C,EAAiD;AAC/C;UACA,MAAM2B,sBAAsB,GAAG,CAAA,GAAI,CAACP,oBAAoB,GAAGM,GAAxB,IAA+BH,YAAlE,CAF+C;AAK/C;AACA;;AACA,UAAA,IAAA,CAAK3K,IAAL,CAAUsJ,cAAV,CAAyBhP,KAAK,CAC5BoQ,gBAAgB,GAAG,CAAC,CAAA,GAAIA,gBAAL,IAAyBK,sBADhB,EAE5B,CAF4B,EAG5B,CAH4B,CAA9B,CAAA,CAAA;AAKD,SAAA;;QAEDrH,GAAG,CAAChC,IAAD,CAAH,GAAY1H,IAAI,CAACgR,KAAL,CAAWF,GAAX,CAAZ,CAAA;AACA/C,QAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,OAAA;KAzBH,CAAA,CAAA;AA2BD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEuE,oBAAoB,CAAC9H,IAAD,EAAO;IACzB,MAAM;MAAElI,EAAF;MAAMwP,QAAN;MAAgBD,MAAhB;AAAwBG,MAAAA,YAAAA;AAAxB,KAAA,GAAyC,KAAKR,QAApD,CAAA;IACA,MAAM;MAAEX,SAAF;AAAa5C,MAAAA,UAAAA;AAAb,KAAA,GAA4B,KAAKnF,IAAvC,CAAA;IACA,MAAMiL,KAAK,GAAIzR,EAAE,CAACkI,IAAD,CAAF,GAAWqH,MAAM,CAACrH,IAAD,CAAhC,CAAA;AACA,IAAA,MAAMwJ,cAAc,GAAG/F,UAAU,CAACzL,CAAX,GAAeuR,KAAtC,CAAA;;AAEA,IAAA,IAAI,CAACA,KAAD,IAAU,CAAClD,SAAf,EAA0B;AACxB,MAAA,OAAO,KAAP,CAAA;AACD,KARwB;;;AAWzB,IAAA,IAAIrG,IAAI,KAAK,GAAT,IAAgB,CAACqG,SAAS,CAACH,UAAV,EAAjB,IAA2C,CAACsB,YAAhD,EAA8D;AAC5D/D,MAAAA,UAAU,CAACgG,MAAX,CAAkBD,cAAlB,EAAkC,IAAlC,CAAA,CAAA;MACA,OAAO,IAAP,CAF4D;AAG7D,KAAA;;IAED,MAAM;AAAE9G,MAAAA,MAAAA;AAAF,KAAA,GAAa2D,SAAnB,CAAA;IACA,MAAMqD,MAAM,GAAGrD,SAAS,CAACrE,GAAV,CAAchC,IAAd,IAAsBuJ,KAArC,CAAA;;AAEA,IAAA,IAAI,KAAKjL,IAAL,CAAUD,OAAV,CAAkBsL,cAAlB,IACGrC,QAAQ,KAAK,GADhB,IAEGtH,IAAI,KAAK,GAFZ,IAGG,CAACwH,YAHR,EAGsB;AACpB,MAAA,MAAMoC,oBAAoB,GAAGnG,UAAU,CAAC0E,aAAX,EAA7B,CADoB;;AAIpB,MAAA,MAAMD,mBAAmB,GAAGzE,UAAU,CAACzL,CAAX,GAAe4R,oBAA3C,CAAA;AAEA,MAAA,MAAMC,aAAa,GAAGN,KAAK,GAAG,CAA9B,CAAA;MACA,MAAMO,aAAa,GAAG,CAACD,aAAvB,CAAA;;MAEA,IAAIH,MAAM,GAAGhH,MAAM,CAAC5J,GAAP,CAAWkH,IAAX,CAAT,IAA6B6J,aAAjC,EAAgD;AAC9C;AAEA;AACA;AACA;AACA,QAAA,MAAME,mBAAmB,GAAIrH,MAAM,CAAC5J,GAAP,CAAWkH,IAAX,CAAA,IAAoB,IAAKiH,CAAAA,QAAL,CAAcjH,IAAd,CAAjD,CAAA;;AAEA,QAAA,IAAI+J,mBAAJ,EAAyB;AACvBtG,UAAAA,UAAU,CAACgG,MAAX,CAAkBD,cAAlB,EAAkC,IAAlC,CAAA,CAAA;AACA,UAAA,OAAO,IAAP,CAAA;AACD,SAHD,MAGO;AACL,UAAA,IAAA,CAAK/B,mBAAL,CAAyBzH,IAAzB,EAA+B0J,MAA/B,EADK;;AAGN,SAAA;AACF,OAfD,MAeO,IAAIA,MAAM,GAAGhH,MAAM,CAAC3J,GAAP,CAAWiH,IAAX,CAAT,IAA6B8J,aAAjC,EAAgD;AACrD;AAEA;AACA,QAAA,MAAME,mBAAmB,GAAI,IAAK/C,CAAAA,QAAL,CAAcjH,IAAd,CAAuB0C,IAAAA,MAAM,CAAC3J,GAAP,CAAWiH,IAAX,CAApD,CAAA;;AAEA,QAAA,IAAIgK,mBAAJ,EAAyB;AACvBvG,UAAAA,UAAU,CAACgG,MAAX,CAAkBD,cAAlB,EAAkC,IAAlC,CAAA,CAAA;AACA,UAAA,OAAO,IAAP,CAAA;AACD,SAHD,MAGO;AACL,UAAA,IAAA,CAAK/B,mBAAL,CAAyBzH,IAAzB,EAA+B0J,MAA/B,EADK;;AAGN,SAAA;AACF,OAbM,MAaA;AACL;QACA,IAAIxB,mBAAmB,KAAK,CAA5B,EAA+B;AAC7B;AACA,UAAA,IAAIA,mBAAmB,GAAG,CAAA;AAAE;YAAsB;AAChDzE,YAAAA,UAAU,CAACgG,MAAX,CAAkBnR,IAAI,CAACS,GAAL,CAASyQ,cAAT,EAAyBI,oBAAzB,CAAlB,EAAkE,IAAlE,CAAA,CAAA;AACA,YAAA,OAAO,IAAP,CAAA;WAFF,MAGO,IAAI1B,mBAAmB,GAAG,CAAA;AAAE;YAAsB;AACvD;AACAzE,YAAAA,UAAU,CAACgG,MAAX,CAAkBnR,IAAI,CAACQ,GAAL,CAAS0Q,cAAT,EAAyBI,oBAAzB,CAAlB,EAAkE,IAAlE,CAAA,CAAA;AACA,YAAA,OAAO,IAAP,CAAA;AACD,WAAA;AACF,SAVD,MAUO;AACL;AACA,UAAA,IAAA,CAAKnC,mBAAL,CAAyBzH,IAAzB,EAA+B0J,MAA/B,CAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAzDD,MAyDO;MACL,IAAI1J,IAAI,KAAK,GAAb,EAAkB;AAChB;AACA,QAAA,IAAI,CAACyD,UAAU,CAACC,SAAX,EAAD,IAA2BhB,MAAM,CAAC5J,GAAP,CAAWb,CAAX,KAAiByK,MAAM,CAAC3J,GAAP,CAAWd,CAA3D,EAA8D;AAC5D,UAAA,IAAA,CAAKwP,mBAAL,CAAyBzH,IAAzB,EAA+B0J,MAA/B,CAAA,CAAA;AACD,SAAA;AACF,OALD,MAKO;AACL,QAAA,IAAA,CAAKjC,mBAAL,CAAyBzH,IAAzB,EAA+B0J,MAA/B,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,OAAO,KAAP,CAAA;AACD,GAxRe;AA2RhB;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE/B,qBAAqB,CAAC1B,IAAD,EAAO;AAAA,IAAA,IAAA,oBAAA,CAAA;;IAC1B,OAAO,CAACA,IAAI,IAAI,CAAK3H,CAAAA,oBAAAA,GAAAA,IAAAA,CAAAA,IAAL,CAAU+H,SAAV,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAqB3D,MAArB,CAA4B/C,MAA5B,CAAmC1H,CAAnC,KAAwC,CAA5C,CAAL,KAAwD,IAAKqG,CAAAA,IAAL,CAAUO,YAAV,CAAuB5G,CAAvB,GAA2B,CAAnF,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEwP,EAAAA,mBAAmB,CAACzH,IAAD,EAAOiK,YAAP,EAAqBC,cAArB,EAAqC;IACtD,MAAM;AAAE7D,MAAAA,SAAAA;AAAF,KAAA,GAAgB,KAAK/H,IAA3B,CAAA;;IAEA,IAAI,CAAC+H,SAAL,EAAgB;AACd,MAAA,OAAA;AACD,KAAA;;IAED,MAAM;MAAErE,GAAF;AAAOU,MAAAA,MAAAA;AAAP,KAAA,GAAkB2D,SAAxB,CAAA;IACA,MAAM8D,YAAY,GAAGzH,MAAM,CAACrC,UAAP,CAAkBL,IAAlB,EAAwBiK,YAAxB,CAArB,CARsD;;AAUtD,IAAA,IAAIE,YAAY,KAAKF,YAAjB,IAAiCC,cAArC,EAAqD;AACnD,MAAA,MAAMX,KAAK,GAAGjR,IAAI,CAACC,KAAL,CAAW0R,YAAY,GAAGjI,GAAG,CAAChC,IAAD,CAA7B,CAAd,CAAA;MACAgC,GAAG,CAAChC,IAAD,CAAH,IAAauJ,KAAK,IAAIW,cAAc,IAAI1D,gBAAtB,CAAlB,CAAA;AACD,KAHD,MAGO;AACLxE,MAAAA,GAAG,CAAChC,IAAD,CAAH,GAAYiK,YAAZ,CAAA;AACD,KAAA;AACF,GAAA;;AAtUe;;ACzBlB;;AACA;;AAEA,MAAMG,mBAAmB,GAAG,IAA5B,CAAA;AACA,MAAMC,mBAAmB,GAAG,IAA5B,CAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BjS,CAA7B,EAAgCP,EAAhC,EAAoCC,EAApC,EAAwC;AACtCM,EAAAA,CAAC,CAACL,CAAF,GAAM,CAACF,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACC,CAAX,IAAgB,CAAtB,CAAA;AACAK,EAAAA,CAAC,CAACJ,CAAF,GAAM,CAACH,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACE,CAAX,IAAgB,CAAtB,CAAA;AACA,EAAA,OAAOI,CAAP,CAAA;AACD,CAAA;;AAED,MAAMkS,WAAN,CAAkB;AAChB;AACF;AACA;EACExN,WAAW,CAACiK,QAAD,EAAW;IACpB,IAAKA,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;AACA;AACJ;AACA;AACA;;AACI,IAAA,IAAA,CAAKwD,SAAL,GAAiB;AAAExS,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA5B,CAAA;AACA;AACJ;AACA;AACA;;AACI,IAAA,IAAA,CAAKwS,eAAL,GAAuB;AAAEzS,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAAlC,CAAA;AACA;AACJ;AACA;AACA;;AACI,IAAA,IAAA,CAAKyS,UAAL,GAAkB;AAAE1S,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA7B,CAAA;AACA;;IACA,IAAK0S,CAAAA,oBAAL,GAA4B,KAA5B,CAAA;AACA;;IACA,IAAKC,CAAAA,eAAL,GAAuB,CAAvB,CAAA;AACD,GAAA;;AAED1D,EAAAA,KAAK,GAAG;IACN,MAAM;AAAEb,MAAAA,SAAAA;KAAc,GAAA,IAAA,CAAKW,QAAL,CAAc1I,IAApC,CAAA;;AACA,IAAA,IAAI+H,SAAJ,EAAe;AACb,MAAA,IAAA,CAAKuE,eAAL,GAAuBvE,SAAS,CAAC3G,aAAjC,CAAA;AACA7H,MAAAA,cAAc,CAAC,IAAK2S,CAAAA,SAAN,EAAiBnE,SAAS,CAACrE,GAA3B,CAAd,CAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKgF,QAAL,CAAc1I,IAAd,CAAmBuG,UAAnB,CAA8BC,UAA9B,EAAA,CAAA;IACA,IAAK6F,CAAAA,oBAAL,GAA4B,KAA5B,CAAA;AACD,GAAA;;AAEDvD,EAAAA,MAAM,GAAG;IACP,MAAM;MAAEtP,EAAF;MAAM+S,OAAN;MAAe9S,EAAf;MAAmB+S,OAAnB;AAA4BxM,MAAAA,IAAAA;AAA5B,KAAA,GAAqC,KAAK0I,QAAhD,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB/H,IAAtB,CAAA;;IAEA,IAAI,CAAC+H,SAAL,EAAgB;AACd,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,MAAM0E,YAAY,GAAG1E,SAAS,CAAC/E,UAAV,CAAqBxI,GAA1C,CAAA;AACA,IAAA,MAAMkS,YAAY,GAAG3E,SAAS,CAAC/E,UAAV,CAAqBvI,GAA1C,CAAA;;AAEA,IAAA,IAAI,CAACsN,SAAS,CAACzB,UAAV,EAAD,IAA2BtG,IAAI,CAACmF,UAAL,CAAgBC,SAAhB,EAA/B,EAA4D;AAC1D,MAAA,OAAA;AACD,KAAA;;AAED4G,IAAAA,mBAAmB,CAAC,IAAKG,CAAAA,eAAN,EAAuBI,OAAvB,EAAgCC,OAAhC,CAAnB,CAAA;AACAR,IAAAA,mBAAmB,CAAC,IAAKI,CAAAA,UAAN,EAAkB5S,EAAlB,EAAsBC,EAAtB,CAAnB,CAAA;;IAEA,IAAI2H,aAAa,GAAI,CAAIlH,GAAAA,kBAAkB,CAACqS,OAAD,EAAUC,OAAV,CAAvB,GACAtS,kBAAkB,CAACV,EAAD,EAAKC,EAAL,CADlB,GAEA,IAAK6S,CAAAA,eAFzB,CAlBO;;;AAuBP,IAAA,IAAIlL,aAAa,GAAG2G,SAAS,CAAC/E,UAAV,CAAqBT,OAArB,GAAgCwF,SAAS,CAAC/E,UAAV,CAAqBT,OAArB,GAA+B,EAAnF,EAAwF;MACtF,IAAK8J,CAAAA,oBAAL,GAA4B,IAA5B,CAAA;AACD,KAAA;;IAED,IAAIjL,aAAa,GAAGqL,YAApB,EAAkC;AAChC,MAAA,IAAIzM,IAAI,CAACD,OAAL,CAAa4M,YAAb,IACG,CAAC,IAAKN,CAAAA,oBADT,IAEG,IAAA,CAAKC,eAAL,IAAwBvE,SAAS,CAAC/E,UAAV,CAAqBT,OAFpD,EAE6D;AAC3D;QACA,MAAM6G,SAAS,GAAG,CAAA,GAAK,CAACqD,YAAY,GAAGrL,aAAhB,KAAkCqL,YAAY,GAAG,GAAjD,CAAvB,CAAA;;AACA,QAAA,IAAI,CAACzM,IAAI,CAACyB,QAAL,CAAc,YAAd,EAA4B;AAAE2H,UAAAA,SAAAA;SAA9B,CAAA,CAA2C/D,gBAAhD,EAAkE;UAChErF,IAAI,CAACsJ,cAAL,CAAoBF,SAApB,CAAA,CAAA;AACD,SAAA;AACF,OARD,MAQO;AACL;QACAhI,aAAa,GAAGqL,YAAY,GAAG,CAACA,YAAY,GAAGrL,aAAhB,IAAiC2K,mBAAhE,CAAA;AACD,OAAA;AACF,KAbD,MAaO,IAAI3K,aAAa,GAAGsL,YAApB,EAAkC;AACvC;MACAtL,aAAa,GAAGsL,YAAY,GAAG,CAACtL,aAAa,GAAGsL,YAAjB,IAAiCZ,mBAAhE,CAAA;AACD,KAAA;;IAED/D,SAAS,CAACrE,GAAV,CAAchK,CAAd,GAAkB,IAAKkT,CAAAA,yBAAL,CAA+B,GAA/B,EAAoCxL,aAApC,CAAlB,CAAA;IACA2G,SAAS,CAACrE,GAAV,CAAc/J,CAAd,GAAkB,IAAKiT,CAAAA,yBAAL,CAA+B,GAA/B,EAAoCxL,aAApC,CAAlB,CAAA;IAEA2G,SAAS,CAACrB,YAAV,CAAuBtF,aAAvB,CAAA,CAAA;AACA2G,IAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,GAAA;;AAEDwE,EAAAA,GAAG,GAAG;IACJ,MAAM;AAAEzJ,MAAAA,IAAAA;AAAF,KAAA,GAAW,KAAK0I,QAAtB,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB/H,IAAtB,CAAA;;IACA,IAAI,CAAC,CAAC+H,SAAD,IAAcA,SAAS,CAAC3G,aAAV,GAA0B2G,SAAS,CAAC/E,UAAV,CAAqBT,OAA9D,KACG,CAAC,IAAA,CAAK8J,oBADT,IAEGrM,IAAI,CAACD,OAAL,CAAa4M,YAFpB,EAEkC;AAChC3M,MAAAA,IAAI,CAACuK,KAAL,EAAA,CAAA;AACD,KAJD,MAIO;AACL,MAAA,IAAA,CAAKP,cAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE4C,EAAAA,yBAAyB,CAAClL,IAAD,EAAON,aAAP,EAAsB;AAC7C,IAAA,MAAMqG,UAAU,GAAGrG,aAAa,GAAG,KAAKkL,eAAxC,CAAA;AACA,IAAA,OAAO,KAAKF,UAAL,CAAgB1K,IAAhB,CAAA,GACI,CAAC,IAAKyK,CAAAA,eAAL,CAAqBzK,IAArB,IAA6B,IAAKwK,CAAAA,SAAL,CAAexK,IAAf,CAA9B,IAAsD+F,UADjE,CAAA;AAED,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEuC,cAAc,CAAC6C,aAAD,EAAgB;IAC5B,MAAM;AAAE7M,MAAAA,IAAAA;AAAF,KAAA,GAAW,KAAK0I,QAAtB,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB/H,IAAtB,CAAA;;IAEA,IAAI,EAAC+H,SAAD,KAAA,IAAA,IAACA,SAAD,KAAA,KAAA,CAAA,IAACA,SAAS,CAAEzB,UAAX,EAAD,CAAJ,EAA8B;AAC5B,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,KAAK8F,UAAL,CAAgB1S,CAAhB,KAAsB,CAA1B,EAA6B;AAC3BmT,MAAAA,aAAa,GAAG,IAAhB,CAAA;AACD,KAAA;;AAED,IAAA,MAAMpG,aAAa,GAAGsB,SAAS,CAAC3G,aAAhC,CAAA;AAEA;;AACA,IAAA,IAAI0L,oBAAJ,CAAA;IACA,IAAIC,wBAAwB,GAAG,IAA/B,CAAA;;AAEA,IAAA,IAAItG,aAAa,GAAGsB,SAAS,CAAC/E,UAAV,CAAqBT,OAAzC,EAAkD;AAChDuK,MAAAA,oBAAoB,GAAG/E,SAAS,CAAC/E,UAAV,CAAqBT,OAA5C,CADgD;KAAlD,MAGO,IAAIkE,aAAa,GAAGsB,SAAS,CAAC/E,UAAV,CAAqBvI,GAAzC,EAA8C;AACnDqS,MAAAA,oBAAoB,GAAG/E,SAAS,CAAC/E,UAAV,CAAqBvI,GAA5C,CADmD;AAGpD,KAHM,MAGA;AACLsS,MAAAA,wBAAwB,GAAG,KAA3B,CAAA;AACAD,MAAAA,oBAAoB,GAAGrG,aAAvB,CAAA;AACD,KAAA;;AAED,IAAA,MAAMiE,gBAAgB,GAAG1K,IAAI,CAACoJ,SAA9B,CAAA;AACA,IAAA,MAAMe,gBAAgB,GAAGnK,IAAI,CAACoJ,SAAL,GAAiB,CAA1C,CAAA;IAEA,MAAM4D,UAAU,GAAGzT,cAAc,CAAC;AAAEG,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;AAAX,KAAD,EAAiBoO,SAAS,CAACrE,GAA3B,CAAjC,CAAA;IACA,IAAIuJ,cAAc,GAAG1T,cAAc,CAAC;AAAEG,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAAZ,EAAiBqT,UAAjB,CAAnC,CAAA;;AAEA,IAAA,IAAIH,aAAJ,EAAmB;AACjB,MAAA,IAAA,CAAKT,UAAL,CAAgB1S,CAAhB,GAAoB,CAApB,CAAA;AACA,MAAA,IAAA,CAAK0S,UAAL,CAAgBzS,CAAhB,GAAoB,CAApB,CAAA;AACA,MAAA,IAAA,CAAKwS,eAAL,CAAqBzS,CAArB,GAAyB,CAAzB,CAAA;AACA,MAAA,IAAA,CAAKyS,eAAL,CAAqBxS,CAArB,GAAyB,CAAzB,CAAA;MACA,IAAK2S,CAAAA,eAAL,GAAuB7F,aAAvB,CAAA;AACAlN,MAAAA,cAAc,CAAC,IAAA,CAAK2S,SAAN,EAAiBc,UAAjB,CAAd,CAAA;AACD,KAAA;;AAED,IAAA,IAAID,wBAAJ,EAA8B;AAC5BE,MAAAA,cAAc,GAAG;AACfvT,QAAAA,CAAC,EAAE,IAAKkT,CAAAA,yBAAL,CAA+B,GAA/B,EAAoCE,oBAApC,CADY;AAEfnT,QAAAA,CAAC,EAAE,IAAKiT,CAAAA,yBAAL,CAA+B,GAA/B,EAAoCE,oBAApC,CAAA;OAFL,CAAA;AAID,KAjD2B;;;IAoD5B/E,SAAS,CAACrB,YAAV,CAAuBoG,oBAAvB,CAAA,CAAA;AAEAG,IAAAA,cAAc,GAAG;AACfvT,MAAAA,CAAC,EAAEqO,SAAS,CAAC3D,MAAV,CAAiBrC,UAAjB,CAA4B,GAA5B,EAAiCkL,cAAc,CAACvT,CAAhD,CADY;MAEfC,CAAC,EAAEoO,SAAS,CAAC3D,MAAV,CAAiBrC,UAAjB,CAA4B,GAA5B,EAAiCkL,cAAc,CAACtT,CAAhD,CAAA;AAFY,KAAjB,CAtD4B;;IA4D5BoO,SAAS,CAACrB,YAAV,CAAuBD,aAAvB,CAAA,CAAA;IAEA,MAAMyG,cAAc,GAAG,CAAC7S,WAAW,CAAC4S,cAAD,EAAiBD,UAAjB,CAAnC,CAAA;;IAEA,IAAI,CAACE,cAAD,IAAmB,CAACH,wBAApB,IAAgD,CAAC5C,gBAArD,EAAuE;AACrE;MACApC,SAAS,CAAClB,cAAV,CAAyBiG,oBAAzB,CAAA,CAAA;;MACA/E,SAAS,CAAC9C,mBAAV,EAAA,CAHqE;;AAMrE,MAAA,OAAA;AACD,KAAA;;IAEDjF,IAAI,CAACuG,UAAL,CAAgBC,UAAhB,EAAA,CAAA;AAEAxG,IAAAA,IAAI,CAACuG,UAAL,CAAgBqE,WAAhB,CAA4B;AAC1B7D,MAAAA,KAAK,EAAE,IADmB;AAE1B6B,MAAAA,KAAK,EAAE,CAFmB;AAG1Ba,MAAAA,GAAG,EAAE,IAHqB;AAI1BC,MAAAA,QAAQ,EAAE,CAJgB;AAK1Be,MAAAA,YAAY,EAAE,CALY;AAM1B0C,MAAAA,gBAAgB,EAAE,EANQ;MAO1BtC,QAAQ,EAAGuC,GAAD,IAAS;QACjBA,GAAG,IAAI,IAAP,CADiB;;QAGjB,IAAIF,cAAc,IAAIH,wBAAtB,EAAgD;AAC9C,UAAA,IAAIG,cAAJ,EAAoB;AAClBnF,YAAAA,SAAS,CAACrE,GAAV,CAAchK,CAAd,GAAkBsT,UAAU,CAACtT,CAAX,GAAe,CAACuT,cAAc,CAACvT,CAAf,GAAmBsT,UAAU,CAACtT,CAA/B,IAAoC0T,GAArE,CAAA;AACArF,YAAAA,SAAS,CAACrE,GAAV,CAAc/J,CAAd,GAAkBqT,UAAU,CAACrT,CAAX,GAAe,CAACsT,cAAc,CAACtT,CAAf,GAAmBqT,UAAU,CAACrT,CAA/B,IAAoCyT,GAArE,CAAA;AACD,WAAA;;AAED,UAAA,IAAIL,wBAAJ,EAA8B;YAC5B,MAAMM,YAAY,GAAG5G,aAAa,GACpB,CAACqG,oBAAoB,GAAGrG,aAAxB,IAAyC2G,GADvD,CAAA;YAEArF,SAAS,CAACrB,YAAV,CAAuB2G,YAAvB,CAAA,CAAA;AACD,WAAA;;AAEDtF,UAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,SAhBgB;;;AAmBjB,QAAA,IAAIkF,gBAAgB,IAAInK,IAAI,CAACoJ,SAAL,GAAiB,CAAzC,EAA4C;AAC1C;AACA;AACA;AACApJ,UAAAA,IAAI,CAACsJ,cAAL,CAAoBhP,KAAK,CACvBoQ,gBAAgB,GAAG,CAAC,CAAIA,GAAAA,gBAAL,IAAyB0C,GADrB,EAC0B,CAD1B,EAC6B,CAD7B,CAAzB,CAAA,CAAA;AAGD,SAAA;OAjCuB;AAmC1BlG,MAAAA,UAAU,EAAE,MAAM;AAChB;QACAa,SAAS,CAAClB,cAAV,CAAyBiG,oBAAzB,CAAA,CAAA;;AACA/E,QAAAA,SAAS,CAAC9C,mBAAV,EAAA,CAAA;AACD,OAAA;KAvCH,CAAA,CAAA;AAyCD,GAAA;;AA9Oe;;ACzBlB;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqI,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,EAAA,OAAO,CAAC;AAAE;AAA4BA,EAAAA,KAAK,CAAC3O,MAAP,CAAe4O,OAAf,CAAuB,kBAAvB,CAArC,CAAA;AACD,CAAA;AAED;AACA;AACA;;;AACA,MAAMC,UAAN,CAAiB;AACf;AACF;AACA;EACEhP,WAAW,CAACiK,QAAD,EAAW;IACpB,IAAKA,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEgF,EAAAA,KAAK,CAACpG,KAAD,EAAQqG,aAAR,EAAuB;AAC1B,IAAA,MAAMC,eAAe;AAAG;IAA4BD,aAAa,CAAC/O,MAAf,CAAuBiP,SAA1E,CAAA;AACA,IAAA,MAAMC,YAAY,GAAGF,eAAe,CAACG,QAAhB,CAAyB,WAAzB,CAArB,CAAA;AACA,IAAA,MAAMC,iBAAiB,GAAGJ,eAAe,CAACG,QAAhB,CAAyB,YAAzB,CAAA,IACGH,eAAe,CAACG,QAAhB,CAAyB,iBAAzB,CAD7B,CAAA;;AAGA,IAAA,IAAID,YAAJ,EAAkB;AAChB,MAAA,IAAA,CAAKG,mBAAL,CAAyB,YAAzB,EAAuC3G,KAAvC,EAA8CqG,aAA9C,CAAA,CAAA;KADF,MAEO,IAAIK,iBAAJ,EAAuB;AAC5B,MAAA,IAAA,CAAKC,mBAAL,CAAyB,SAAzB,EAAoC3G,KAApC,EAA2CqG,aAA3C,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;AACEO,EAAAA,GAAG,CAAC5G,KAAD,EAAQqG,aAAR,EAAuB;AACxB,IAAA,IAAIL,mBAAmB,CAACK,aAAD,CAAvB,EAAwC;AACtC,MAAA,IAAA,CAAKM,mBAAL,CAAyB,KAAzB,EAAgC3G,KAAhC,EAAuCqG,aAAvC,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;AACEQ,EAAAA,SAAS,CAAC7G,KAAD,EAAQqG,aAAR,EAAuB;AAC9B,IAAA,IAAIL,mBAAmB,CAACK,aAAD,CAAvB,EAAwC;AACtC,MAAA,IAAA,CAAKM,mBAAL,CAAyB,WAAzB,EAAsC3G,KAAtC,EAA6CqG,aAA7C,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEM,EAAAA,mBAAmB,CAACG,UAAD,EAAa9G,KAAb,EAAoBqG,aAApB,EAAmC;AAAA,IAAA,IAAA,qBAAA,CAAA;;IACpD,MAAM;AAAE3N,MAAAA,IAAAA;AAAF,KAAA,GAAW,KAAK0I,QAAtB,CAAA;IACA,MAAM;AAAEX,MAAAA,SAAAA;AAAF,KAAA,GAAgB/H,IAAtB,CAAA;AACA,IAAA,MAAMqO,cAAc;AAAG;AAA8CD,IAAAA,UAAU,GAAG,QAAlF,CAAA;AACA,IAAA,MAAM/K,WAAW,GAAGrD,IAAI,CAACD,OAAL,CAAasO,cAAb,CAApB,CAAA;;AAEA,IAAA,IAAIrO,IAAI,CAACyB,QAAL,CAAc4M,cAAd,EAA8B;MAAE/G,KAAF;AAASqG,MAAAA,aAAAA;KAAvC,CAAA,CAAwDtI,gBAA5D,EAA8E;AAC5E,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,OAAOhC,WAAP,KAAuB,UAA3B,EAAuC;AACrCA,MAAAA,WAAW,CAACiL,IAAZ,CAAiBtO,IAAjB,EAAuBsH,KAAvB,EAA8BqG,aAA9B,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,QAAQtK,WAAR;AACE,MAAA,KAAK,OAAL,CAAA;AACA,MAAA,KAAK,MAAL;QACErD,IAAI,CAACqD,WAAD,CAAJ,EAAA,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK,MAAL;QACE0E,SAAS,KAAA,IAAT,IAAAA,SAAS,KAAA,KAAA,CAAT,IAAAA,SAAS,CAAEX,UAAX,CAAsBE,KAAtB,CAAA,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK,eAAL;AACE;AACA;QACA,IAAIS,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEzB,UAAX,EAAA,IACGyB,SAAS,CAAC/E,UAAV,CAAqBR,SAArB,KAAmCuF,SAAS,CAAC/E,UAAV,CAAqBT,OAD/D,EACwE;UACtEwF,SAAS,CAACX,UAAV,CAAqBE,KAArB,CAAA,CAAA;AACD,SAHD,MAGO,IAAItH,IAAI,CAACD,OAAL,CAAawO,uBAAjB,EAA0C;AAC/CvO,UAAAA,IAAI,CAACuK,KAAL,EAAA,CAAA;AACD,SAAA;;AACD,QAAA,MAAA;;AACF,MAAA,KAAK,iBAAL;AACE,QAAA,CAAA,qBAAA,GAAA,IAAA,CAAK7B,QAAL,CAAc1I,IAAd,CAAmBgG,OAAnB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAAA,qBAAA,CAA4B6H,SAA5B,CAAsCW,MAAtC,CAA6C,kBAA7C,CAAA,CADF;AAGE;AACA;AACA;AACA;;AACA,QAAA,MAAA;AAzBJ,KAAA;AA2BD,GAAA;;AA7Fc;;ACjBjB;;AACA;AAEA;AACA;;AACA,MAAMC,qBAAqB,GAAG,EAA9B;;AAGA,MAAMC,gBAAgB,GAAG,GAAzB;;AACA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,CAAe;AACb;AACF;AACA;EACEnQ,WAAW,CAACuB,IAAD,EAAO;IAChB,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AAEA;;AACA,IAAA,IAAA,CAAKgJ,QAAL,GAAgB,IAAhB,CAJgB;AAOhB;;AACA;;AACA,IAAA,IAAA,CAAKxP,EAAL,GAAU;AAAEE,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;AAAX,KAAV,CATgB;;AAUhB;;AACA,IAAA,IAAA,CAAKF,EAAL,GAAU;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;AAAX,KAAV,CAXgB;;AAYhB;;AACA,IAAA,IAAA,CAAKoP,MAAL,GAAc;AAAErP,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAAzB,CAAA;AACA;;AACA,IAAA,IAAA,CAAKkV,MAAL,GAAc;AAAEnV,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAAzB,CAAA;AACA;;AACA,IAAA,IAAA,CAAK4S,OAAL,GAAe;AAAE7S,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA1B,CAAA;AACA;;AACA,IAAA,IAAA,CAAK6S,OAAL,GAAe;AAAE9S,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA1B,CAAA;AACA;;AACA,IAAA,IAAA,CAAK+P,QAAL,GAAgB;AAAEhQ,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA3B,CAAA;AAEA;AACJ;AACA;;AACI,IAAA,IAAA,CAAKmV,YAAL,GAAoB;AAAEpV,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA/B,CAAA;AACA;AACJ;AACA;;AACI,IAAA,IAAA,CAAKoV,WAAL,GAAmB;AAAErV,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAA;KAA9B,CAAA;AACA;;IACA,IAAKqV,CAAAA,gBAAL,GAAwB,CAAxB,CAAA;AACA;AACJ;AACA;;IACI,IAAKC,CAAAA,gBAAL,GAAwB,EAAxB,CAAA;AACA;;IACA,IAAKC,CAAAA,kBAAL,GAA0B,cAAA,IAAkB/Q,MAA5C,CAAA;AACA;;AACA,IAAA,IAAA,CAAKgR,oBAAL,GAA4B,CAAC,CAAEhR,MAAM,CAACiR,YAAtC,CAAA;AACA,IAAA,IAAA,CAAKC,aAAL,GAAqB,IAAKH,CAAAA,kBAAL,IACK,IAAA,CAAKC,oBAAL,IAA6BpR,SAAS,CAACuR,cAAV,GAA2B,CADlF,CAAA;AAEA;;IACA,IAAKN,CAAAA,gBAAL,GAAwB,CAAxB,CAAA;AACA;;IACA,IAAKO,CAAAA,aAAL,GAAqB,CAArB,CAAA;AACA;;IACA,IAAKC,CAAAA,mBAAL,GAA2B,KAA3B,CAAA;IACA,IAAKtG,CAAAA,YAAL,GAAoB,KAApB,CAAA;IACA,IAAKuG,CAAAA,UAAL,GAAkB,KAAlB,CAAA;IACA,IAAKC,CAAAA,SAAL,GAAiB,KAAjB,CAAA;AACA;;IACA,IAAKC,CAAAA,GAAL,GAAW,IAAX,CAAA;AACA;AACJ;AACA;;IACI,IAAKC,CAAAA,SAAL,GAAiB,IAAjB,CAAA;;IAEA,IAAI,CAAC,IAAKP,CAAAA,aAAV,EAAyB;AACvB;AACArP,MAAAA,IAAI,CAACD,OAAL,CAAasL,cAAb,GAA8B,KAA9B,CAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKwE,IAAL,GAAY,IAAIpH,WAAJ,CAAgB,IAAhB,CAAZ,CAAA;AACA,IAAA,IAAA,CAAKzF,UAAL,GAAkB,IAAIiJ,WAAJ,CAAgB,IAAhB,CAAlB,CAAA;AACA,IAAA,IAAA,CAAK6D,UAAL,GAAkB,IAAIrC,UAAJ,CAAe,IAAf,CAAlB,CAAA;AAEAzN,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,YAAR,EAAsB,MAAM;MAC1B/P,IAAI,CAACgQ,MAAL,CAAYrR,GAAZ,CACEqB,IAAI,CAACiQ,UADP,EAEE,OAFF;AAGE;AAA2B,MAAA,IAAA,CAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAH7B,CAAA,CAAA;;MAMA,IAAI,IAAA,CAAKhB,oBAAT,EAA+B;QAC7B,IAAKiB,CAAAA,WAAL,CAAiB,SAAjB,EAA4B,MAA5B,EAAoC,IAApC,EAA0C,QAA1C,CAAA,CAAA;AACD,OAFD,MAEO,IAAI,IAAKlB,CAAAA,kBAAT,EAA6B;QAClC,IAAKkB,CAAAA,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,EAAmC,KAAnC,EAA0C,QAA1C,CAAA,CADkC;AAIlC;AACA;AAEA;AACA;AACA;AACA;;;QACA,IAAIpQ,IAAI,CAACiQ,UAAT,EAAqB;AACnBjQ,UAAAA,IAAI,CAACiQ,UAAL,CAAgBI,WAAhB,GAA8B,MAAM,EAApC,CAAA;;AACArQ,UAAAA,IAAI,CAACiQ,UAAL,CAAgBK,UAAhB,GAA6B,MAAM,EAAnC,CAAA;AACD,SAAA;AACF,OAfM,MAeA;AACL,QAAA,IAAA,CAAKF,WAAL,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,IAAlC,CAAA,CAAA;AACD,OAAA;KA1BH,CAAA,CAAA;AA4BD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEA,WAAW,CAACG,IAAD,EAAOC,IAAP,EAAaC,EAAb,EAAiBC,MAAjB,EAAyB;IAClC,MAAM;AAAE1Q,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;IACA,MAAM;AAAEgQ,MAAAA,MAAAA;AAAF,KAAA,GAAahQ,IAAnB,CAAA;IAEA,MAAM2Q,WAAW,GAAGD,MAAM,GAAGH,IAAI,GAAGG,MAAV,GAAmB,EAA7C,CAAA;IAEAV,MAAM,CAACrR,GAAP,CACEqB,IAAI,CAACiQ,UADP,EAEEM,IAAI,GAAGC,IAFT;AAGE;AAA2B,IAAA,IAAA,CAAKI,aAAL,CAAmBT,IAAnB,CAAwB,IAAxB,CAH7B,CAAA,CAAA;AAKAH,IAAAA,MAAM,CAACrR,GAAP,CAAWR,MAAX,EAAmBoS,IAAI,GAAG,MAA1B;AAAkC;AAA2B,IAAA,IAAA,CAAKM,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB,CAA7D,CAAA,CAAA;AACAH,IAAAA,MAAM,CAACrR,GAAP,CAAWR,MAAX,EAAmBoS,IAAI,GAAGE,EAA1B;AAA8B;AAA2B,IAAA,IAAA,CAAKK,WAAL,CAAiBX,IAAjB,CAAsB,IAAtB,CAAzD,CAAA,CAAA;;AACA,IAAA,IAAIQ,WAAJ,EAAiB;AACfX,MAAAA,MAAM,CAACrR,GAAP,CACEqB,IAAI,CAACiQ,UADP,EAEEU,WAFF;AAGE;AAA2B,MAAA,IAAA,CAAKG,WAAL,CAAiBX,IAAjB,CAAsB,IAAtB,CAH7B,CAAA,CAAA;AAKD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;EACES,aAAa,CAAChU,CAAD,EAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,MAAMmU,cAAc,GAAGnU,CAAC,CAACiC,IAAF,KAAW,WAAX,IAA0BjC,CAAC,CAACoU,WAAF,KAAkB,OAAnE,CAPe;AAUf;AACA;;AACA,IAAA,IAAID,cAAc,IAAInU,CAAC,CAACC,MAAF,GAAW,CAAjC,EAAoC;AAClC,MAAA,OAAA;AACD,KAAA;;IAED,MAAM;AAAEmD,MAAAA,IAAAA;KAAS,GAAA,IAAjB,CAhBe;;AAmBf,IAAA,IAAI,CAACA,IAAI,CAAC4D,MAAL,CAAYC,MAAjB,EAAyB;AACvBjH,MAAAA,CAAC,CAACqU,cAAF,EAAA,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAIjR,IAAI,CAACyB,QAAL,CAAc,aAAd,EAA6B;AAAEkM,MAAAA,aAAa,EAAE/Q,CAAAA;KAA9C,CAAA,CAAmDyI,gBAAvD,EAAyE;AACvE,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI0L,cAAJ,EAAoB;MAClB/Q,IAAI,CAACkR,aAAL,EAAA,CADkB;AAIlB;;MACA,IAAKC,CAAAA,6BAAL,CAAmCvU,CAAnC,CAAA,CAAA;AACD,KAAA;;IAEDoD,IAAI,CAACuG,UAAL,CAAgBsC,OAAhB,EAAA,CAAA;;AAEA,IAAA,IAAA,CAAKuI,aAAL,CAAmBxU,CAAnB,EAAsB,MAAtB,CAAA,CAAA;;AAEA,IAAA,IAAI,IAAKoS,CAAAA,gBAAL,KAA0B,CAA9B,EAAiC;AAC/B,MAAA,IAAA,CAAKhG,QAAL,GAAgB,IAAhB,CAD+B;AAG/B;;AACAzP,MAAAA,cAAc,CAAC,IAAKgT,CAAAA,OAAN,EAAe,IAAA,CAAK/S,EAApB,CAAd,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,IAAKwV,CAAAA,gBAAL,GAAwB,CAA5B,EAA+B;AAC7B;AACA,MAAA,IAAA,CAAKqC,cAAL,EAAA,CAAA;;MACA,IAAKnI,CAAAA,YAAL,GAAoB,IAApB,CAAA;AACD,KAJD,MAIO;MACL,IAAKA,CAAAA,YAAL,GAAoB,KAApB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;EACE2H,aAAa,CAACjU,CAAD,EAAI;IACfA,CAAC,CAACqU,cAAF,EAAA,CADe;;IAGf,IAAI,CAAC,IAAKjC,CAAAA,gBAAV,EAA4B;AAC1B,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKoC,aAAL,CAAmBxU,CAAnB,EAAsB,MAAtB,CAAA,CAAA;;AAEA,IAAA,IAAI,KAAKoD,IAAL,CAAUyB,QAAV,CAAmB,aAAnB,EAAkC;AAAEkM,MAAAA,aAAa,EAAE/Q,CAAAA;KAAnD,CAAA,CAAwDyI,gBAA5D,EAA8E;AAC5E,MAAA,OAAA;AACD,KAAA;;IAED,IAAI,IAAA,CAAK2J,gBAAL,KAA0B,CAA1B,IAA+B,CAAC,IAAA,CAAKS,UAAzC,EAAqD;MACnD,IAAI,CAAC,IAAKzG,CAAAA,QAAV,EAAoB;AAClB,QAAA,IAAA,CAAKsI,uBAAL,EAAA,CAAA;AACD,OAHkD;;;AAMnD,MAAA,IAAI,KAAKtI,QAAL,IAAiB,CAAC,IAAA,CAAKyG,UAA3B,EAAuC;QACrC,IAAI,IAAA,CAAKC,SAAT,EAAoB;UAClB,IAAKA,CAAAA,SAAL,GAAiB,KAAjB,CAAA;UACA,IAAK1M,CAAAA,UAAL,CAAgByG,GAAhB,EAAA,CAAA;AACD,SAAA;;QAED,IAAKgG,CAAAA,UAAL,GAAkB,IAAlB,CAAA;;QACA,IAAK4B,CAAAA,cAAL,GAPqC;AASrC;;;AACA,QAAA,IAAA,CAAKE,kBAAL,EAAA,CAAA;;AACA,QAAA,IAAA,CAAKhC,aAAL,GAAqBiC,IAAI,CAACpE,GAAL,EAArB,CAXqC;;QAarC,IAAKoC,CAAAA,mBAAL,GAA2B,KAA3B,CAAA;AACAjW,QAAAA,cAAc,CAAC,IAAKwV,CAAAA,WAAN,EAAmB,IAAA,CAAKvV,EAAxB,CAAd,CAAA;AACA,QAAA,IAAA,CAAKkQ,QAAL,CAAchQ,CAAd,GAAkB,CAAlB,CAAA;AACA,QAAA,IAAA,CAAKgQ,QAAL,CAAc/P,CAAd,GAAkB,CAAlB,CAAA;QACA,IAAKkW,CAAAA,IAAL,CAAUjH,KAAV,EAAA,CAAA;;AAEA,QAAA,IAAA,CAAK6I,YAAL,EAAA,CAAA;;AACA,QAAA,IAAA,CAAKC,cAAL,EAAA,CAAA;AACD,OAAA;KA3BH,MA4BO,IAAI,IAAA,CAAK1C,gBAAL,GAAwB,CAAxB,IAA6B,CAAC,IAAKU,CAAAA,SAAvC,EAAkD;AACvD,MAAA,IAAA,CAAKiC,WAAL,EAAA,CAAA;;AAEA,MAAA,IAAA,CAAKjC,SAAL,GAAiB,IAAjB,CAHuD;;AAMvD,MAAA,IAAA,CAAK6B,kBAAL,EAAA,CAAA;;MAEA,IAAKvO,CAAAA,UAAL,CAAgB4F,KAAhB,EAAA,CAAA;;AAEA,MAAA,IAAA,CAAK6I,YAAL,EAAA,CAAA;;AACA,MAAA,IAAA,CAAKC,cAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;AACEC,EAAAA,WAAW,GAAG;IACZ,IAAI,IAAA,CAAKlC,UAAT,EAAqB;AACnB,MAAA,IAAA,CAAKA,UAAL,GAAkB,KAAlB,CADmB;AAInB;;MACA,IAAI,CAAC,IAAKD,CAAAA,mBAAV,EAA+B;QAC7B,IAAKoC,CAAAA,eAAL,CAAqB,IAArB,CAAA,CAAA;AACD,OAAA;;MAED,IAAK/B,CAAAA,IAAL,CAAUpG,GAAV,EAAA,CAAA;MACA,IAAKT,CAAAA,QAAL,GAAgB,IAAhB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;EACE8H,WAAW,CAAClU,CAAD,EAAI;IACb,IAAI,CAAC,IAAKoS,CAAAA,gBAAV,EAA4B;AAC1B,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKoC,aAAL,CAAmBxU,CAAnB,EAAsB,IAAtB,CAAA,CAAA;;AAEA,IAAA,IAAI,KAAKoD,IAAL,CAAUyB,QAAV,CAAmB,WAAnB,EAAgC;AAAEkM,MAAAA,aAAa,EAAE/Q,CAAAA;KAAjD,CAAA,CAAsDyI,gBAA1D,EAA4E;AAC1E,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,IAAK2J,CAAAA,gBAAL,KAA0B,CAA9B,EAAiC;AAC/B,MAAA,IAAA,CAAKyC,YAAL,EAAA,CAAA;;MAEA,IAAI,IAAA,CAAKhC,UAAT,EAAqB;AACnB,QAAA,IAAA,CAAKkC,WAAL,EAAA,CAAA;OADF,MAEO,IAAI,CAAC,IAAA,CAAKjC,SAAN,IAAmB,CAAC,IAAKxG,CAAAA,YAA7B,EAA2C;AAChD;QACA,IAAK2I,CAAAA,UAAL,CAAgBjV,CAAhB,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,IAAI,KAAKoS,gBAAL,GAAwB,CAAxB,IAA6B,IAAA,CAAKU,SAAtC,EAAiD;MAC/C,IAAKA,CAAAA,SAAL,GAAiB,KAAjB,CAAA;MACA,IAAK1M,CAAAA,UAAL,CAAgByG,GAAhB,EAAA,CAAA;;AAEA,MAAA,IAAI,IAAKuF,CAAAA,gBAAL,KAA0B,CAA9B,EAAiC;AAC/B;QACA,IAAKhG,CAAAA,QAAL,GAAgB,IAAhB,CAAA;;AACA,QAAA,IAAA,CAAKuI,kBAAL,EAAA,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAAA;AAED;AACF;AACA;;;AACEG,EAAAA,cAAc,GAAG;AACf,IAAA,IAAI,IAAKjC,CAAAA,UAAL,IAAmB,IAAA,CAAKC,SAA5B,EAAuC;AACrC,MAAA,IAAA,CAAKkC,eAAL,EAAA,CAAA;;MAEA,IAAI,IAAA,CAAKnC,UAAT,EAAqB;AACnB;QACA,IAAI,CAACpV,WAAW,CAAC,IAAA,CAAKb,EAAN,EAAU,IAAA,CAAKuP,MAAf,CAAhB,EAAwC;UACtC,IAAK8G,CAAAA,IAAL,CAAU/G,MAAV,EAAA,CAAA;AACD,SAAA;OAJH;AAKO;AAA0B,QAAA;AAC/B,UAAA,IAAI,CAACzO,WAAW,CAAC,KAAKb,EAAN,EAAU,KAAKuP,MAAf,CAAZ,IACG,CAAC1O,WAAW,CAAC,IAAKZ,CAAAA,EAAN,EAAU,IAAKoV,CAAAA,MAAf,CADnB,EAC2C;YACzC,IAAK7L,CAAAA,UAAL,CAAgB8F,MAAhB,EAAA,CAAA;AACD,WAAA;AACF,SAAA;;AAED,MAAA,IAAA,CAAKgJ,iBAAL,EAAA,CAAA;;MACA,IAAKnC,CAAAA,GAAL,GAAWoC,qBAAqB,CAAC,IAAA,CAAKL,cAAL,CAAoBvB,IAApB,CAAyB,IAAzB,CAAD,CAAhC,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;EACEyB,eAAe,CAAClM,KAAD,EAAQ;AACrB,IAAA,MAAMsM,IAAI,GAAGR,IAAI,CAACpE,GAAL,EAAb,CAAA;AACA,IAAA,MAAMjS,QAAQ,GAAG6W,IAAI,GAAG,KAAKzC,aAA7B,CAAA;;AAEA,IAAA,IAAIpU,QAAQ,GAAG,EAAX,IAAiB,CAACuK,KAAtB,EAA6B;AAC3B,MAAA,OAAA;AACD,KAAA;;IAGD,IAAKgE,CAAAA,QAAL,CAAchQ,CAAd,GAAkB,IAAA,CAAKuY,YAAL,CAAkB,GAAlB,EAAuB9W,QAAvB,CAAlB,CAAA;IACA,IAAKuO,CAAAA,QAAL,CAAc/P,CAAd,GAAkB,IAAA,CAAKsY,YAAL,CAAkB,GAAlB,EAAuB9W,QAAvB,CAAlB,CAAA;IAEA,IAAKoU,CAAAA,aAAL,GAAqByC,IAArB,CAAA;AACAzY,IAAAA,cAAc,CAAC,IAAKwV,CAAAA,WAAN,EAAmB,IAAA,CAAKvV,EAAxB,CAAd,CAAA;IACA,IAAKgW,CAAAA,mBAAL,GAA2B,IAA3B,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;EACEqC,UAAU,CAACjV,CAAD,EAAI;IACZ,MAAM;AAAEuI,MAAAA,UAAAA;KAAe,GAAA,IAAA,CAAKnF,IAA5B,CADY;;AAIZ,IAAA,IAAImF,UAAU,CAACC,SAAX,EAAJ,EAA4B;AAC1B;AACA;AACAD,MAAAA,UAAU,CAAC4E,WAAX,CAAuB,CAAvB,EAA0B,IAA1B,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KATW;;;IAYZ,IAAInN,CAAC,CAACiC,IAAF,CAAOqT,OAAP,CAAe,QAAf,CAA2B,GAAA,CAA/B,EAAkC;AAChC,MAAA,OAAA;AACD,KAdW;;;IAiBZ,IAAItV,CAAC,CAACiC,IAAF,KAAW,SAAX,IAAwBjC,CAAC,CAACoU,WAAF,KAAkB,OAA9C,EAAuD;AACrD,MAAA,IAAA,CAAKlB,UAAL,CAAgBpC,KAAhB,CAAsB,IAAKnB,CAAAA,OAA3B,EAAoC3P,CAApC,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KApBW;;;AAuBZ,IAAA,MAAMuV,QAAQ,GAAG,IAAKnS,CAAAA,IAAL,CAAUD,OAAV,CAAkBqS,eAAlB,GAAoC1D,gBAApC,GAAuD,CAAxE,CAvBY;AA0BZ;AACA;;IACA,IAAI,IAAA,CAAKkB,SAAT,EAAoB;MAClB,IAAKyB,CAAAA,cAAL,GADkB;;;MAGlB,IAAInX,kBAAkB,CAAC,IAAA,CAAK4U,YAAN,EAAoB,KAAKvC,OAAzB,CAAlB,GAAsDoC,gBAA1D,EAA4E;AAC1E,QAAA,IAAA,CAAKmB,UAAL,CAAgB3B,SAAhB,CAA0B,IAAK5B,CAAAA,OAA/B,EAAwC3P,CAAxC,CAAA,CAAA;AACD,OAAA;AACF,KAND,MAMO;AACLrD,MAAAA,cAAc,CAAC,IAAKuV,CAAAA,YAAN,EAAoB,IAAA,CAAKvC,OAAzB,CAAd,CAAA;AACA,MAAA,IAAA,CAAKqD,SAAL,GAAiByC,UAAU,CAAC,MAAM;AAChC,QAAA,IAAA,CAAKvC,UAAL,CAAgB5B,GAAhB,CAAoB,IAAK3B,CAAAA,OAAzB,EAAkC3P,CAAlC,CAAA,CAAA;;AACA,QAAA,IAAA,CAAKyU,cAAL,EAAA,CAAA;OAFyB,EAGxBc,QAHwB,CAA3B,CAAA;AAID,KAAA;AACF,GAAA;AAED;AACF;AACA;;;AACEd,EAAAA,cAAc,GAAG;IACf,IAAI,IAAA,CAAKzB,SAAT,EAAoB;MAClB0C,YAAY,CAAC,IAAK1C,CAAAA,SAAN,CAAZ,CAAA;MACA,IAAKA,CAAAA,SAAL,GAAiB,IAAjB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEqC,EAAAA,YAAY,CAACvQ,IAAD,EAAOvG,QAAP,EAAiB;AAC3B;IACA,MAAMoX,YAAY,GAAG,IAAA,CAAK/Y,EAAL,CAAQkI,IAAR,CAAA,GAAgB,IAAKqN,CAAAA,WAAL,CAAiBrN,IAAjB,CAArC,CAAA;;IAEA,IAAI1H,IAAI,CAACG,GAAL,CAASoY,YAAT,CAAyB,GAAA,CAAzB,IAA8BpX,QAAQ,GAAG,CAA7C,EAAgD;MAC9C,OAAOoX,YAAY,GAAGpX,QAAtB,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACEsW,EAAAA,YAAY,GAAG;IACb,IAAI,IAAA,CAAK9B,GAAT,EAAc;MACZ6C,oBAAoB,CAAC,IAAK7C,CAAAA,GAAN,CAApB,CAAA;MACA,IAAKA,CAAAA,GAAL,GAAW,IAAX,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;EACEwB,6BAA6B,CAACvU,CAAD,EAAI;AAC/B;AACA;AACAA,IAAAA,CAAC,CAACqU,cAAF,EAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEG,EAAAA,aAAa,CAACxU,CAAD,EAAIoU,WAAJ,EAAiB;IAC5B,IAAI,IAAA,CAAK7B,oBAAT,EAA+B;AAC7B,MAAA,MAAMsD,YAAY;AAAG;AAA6B7V,MAAAA,CAAlD,CAD6B;;MAG7B,MAAM8V,YAAY,GAAG,IAAKzD,CAAAA,gBAAL,CAAsB0D,SAAtB,CAAiCC,cAAD,IAAoB;AACvE,QAAA,OAAOA,cAAc,CAAChZ,EAAf,KAAsB6Y,YAAY,CAACI,SAA1C,CAAA;AACD,OAFoB,CAArB,CAAA;;MAIA,IAAI7B,WAAW,KAAK,IAAhB,IAAwB0B,YAAY,GAAG,CAAC,CAA5C,EAA+C;AAC7C;AACA,QAAA,IAAA,CAAKzD,gBAAL,CAAsB6D,MAAtB,CAA6BJ,YAA7B,EAA2C,CAA3C,CAAA,CAAA;OAFF,MAGO,IAAI1B,WAAW,KAAK,MAAhB,IAA0B0B,YAAY,KAAK,CAAC,CAAhD,EAAmD;AACxD;QACA,IAAKzD,CAAAA,gBAAL,CAAsBrP,IAAtB,CAA2B,KAAKmT,uBAAL,CAA6BN,YAA7B,EAA2C;AAAE/Y,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAA;AAAX,SAA3C,CAA3B,CAAA,CAAA;AACD,OAHM,MAGA,IAAI+Y,YAAY,GAAG,CAAC,CAApB,EAAuB;AAC5B;QACA,IAAKK,CAAAA,uBAAL,CAA6BN,YAA7B,EAA2C,KAAKxD,gBAAL,CAAsByD,YAAtB,CAA3C,CAAA,CAAA;AACD,OAAA;;AAED,MAAA,IAAA,CAAK1D,gBAAL,GAAwB,IAAA,CAAKC,gBAAL,CAAsB+D,MAA9C,CAlB6B;AAqB7B;;AACA,MAAA,IAAI,IAAKhE,CAAAA,gBAAL,GAAwB,CAA5B,EAA+B;QAC7BzV,cAAc,CAAC,KAAKC,EAAN,EAAU,KAAKyV,gBAAL,CAAsB,CAAtB,CAAV,CAAd,CAAA;AACD,OAAA;;AAED,MAAA,IAAI,IAAKD,CAAAA,gBAAL,GAAwB,CAA5B,EAA+B;QAC7BzV,cAAc,CAAC,KAAKE,EAAN,EAAU,KAAKwV,gBAAL,CAAsB,CAAtB,CAAV,CAAd,CAAA;AACD,OAAA;AACF,KA7BD,MA6BO;AACL,MAAA,MAAMgE,UAAU;AAAG;MAA2BrW,CAA9C,CAAA;MAEA,IAAKoS,CAAAA,gBAAL,GAAwB,CAAxB,CAAA;;MACA,IAAIiE,UAAU,CAACpU,IAAX,CAAgBqT,OAAhB,CAAwB,OAAxB,CAAA,GAAmC,CAAC,CAAxC,EAA2C;AACzC;AACA;QACA,IAAIe,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACC,OAAX,CAAmBF,MAAnB,GAA4B,CAAtD,EAAyD;UACvD,IAAKD,CAAAA,uBAAL,CAA6BE,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAA7B,EAAoD,IAAA,CAAK1Z,EAAzD,CAAA,CAAA;;AACA,UAAA,IAAA,CAAKwV,gBAAL,EAAA,CAAA;;AACA,UAAA,IAAIiE,UAAU,CAACC,OAAX,CAAmBF,MAAnB,GAA4B,CAAhC,EAAmC;YACjC,IAAKD,CAAAA,uBAAL,CAA6BE,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAA7B,EAAoD,IAAA,CAAKzZ,EAAzD,CAAA,CAAA;;AACA,YAAA,IAAA,CAAKuV,gBAAL,EAAA,CAAA;AACD,WAAA;AACF,SAAA;AACF,OAXD,MAWO;AACL;AACA,QAAA,IAAA,CAAK+D,uBAAL;AAA6B;QAA6BnW,CAA1D,EAA8D,KAAKpD,EAAnE,CAAA,CAAA;;QACA,IAAIwX,WAAW,KAAK,IAApB,EAA0B;AACxB;UACA,IAAKhC,CAAAA,gBAAL,GAAwB,CAAxB,CAAA;AACD,SAHD,MAGO;AACL,UAAA,IAAA,CAAKA,gBAAL,EAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;AAED;AACF;AACA;;;AACE8C,EAAAA,iBAAiB,GAAG;AAClBvY,IAAAA,cAAc,CAAC,IAAKwP,CAAAA,MAAN,EAAc,IAAA,CAAKvP,EAAnB,CAAd,CAAA;AACAD,IAAAA,cAAc,CAAC,IAAKsV,CAAAA,MAAN,EAAc,IAAA,CAAKpV,EAAnB,CAAd,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACE8X,EAAAA,kBAAkB,GAAG;AACnBhY,IAAAA,cAAc,CAAC,IAAKgT,CAAAA,OAAN,EAAe,IAAA,CAAK/S,EAApB,CAAd,CAAA;AACAD,IAAAA,cAAc,CAAC,IAAKiT,CAAAA,OAAN,EAAe,IAAA,CAAK/S,EAApB,CAAd,CAAA;;AACA,IAAA,IAAA,CAAKqY,iBAAL,EAAA,CAAA;AACD,GAAA;AAED;;;AACAR,EAAAA,uBAAuB,GAAG;AACxB,IAAA,IAAI,KAAKtR,IAAL,CAAUmF,UAAV,CAAqBC,SAArB,EAAJ,EAAsC;AACpC;MACA,IAAK4D,CAAAA,QAAL,GAAgB,GAAhB,CAAA;AACD,KAHD,MAGO;AACL;AACA,MAAA,MAAMmK,IAAI,GAAGnZ,IAAI,CAACG,GAAL,CAAS,IAAKX,CAAAA,EAAL,CAAQE,CAAR,GAAY,IAAA,CAAK6S,OAAL,CAAa7S,CAAlC,CAAA,GAAuCM,IAAI,CAACG,GAAL,CAAS,IAAKX,CAAAA,EAAL,CAAQG,CAAR,GAAY,IAAA,CAAK4S,OAAL,CAAa5S,CAAlC,CAApD,CAAA;;MAEA,IAAIwZ,IAAI,KAAK,CAAb,EAAgB;AACd;QACA,MAAMC,WAAW,GAAGD,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,GAArC,CAAA;;AAEA,QAAA,IAAInZ,IAAI,CAACG,GAAL,CAAS,IAAA,CAAKX,EAAL,CAAQ4Z,WAAR,CAAuB,GAAA,IAAA,CAAK7G,OAAL,CAAa6G,WAAb,CAAhC,CAAA,IAA8D3E,qBAAlE,EAAyF;UACvF,IAAKzF,CAAAA,QAAL,GAAgBoK,WAAhB,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEL,EAAAA,uBAAuB,CAACnW,CAAD,EAAI7C,CAAJ,EAAO;AAC5BA,IAAAA,CAAC,CAACL,CAAF,GAAMkD,CAAC,CAACyW,KAAF,GAAU,IAAA,CAAKrT,IAAL,CAAUsT,MAAV,CAAiB5Z,CAAjC,CAAA;AACAK,IAAAA,CAAC,CAACJ,CAAF,GAAMiD,CAAC,CAAC2W,KAAF,GAAU,IAAA,CAAKvT,IAAL,CAAUsT,MAAV,CAAiB3Z,CAAjC,CAAA;;IAEA,IAAI,WAAA,IAAeiD,CAAnB,EAAsB;AACpB7C,MAAAA,CAAC,CAACH,EAAF,GAAOgD,CAAC,CAACiW,SAAT,CAAA;AACD,KAFD,MAEO,IAAIjW,CAAC,CAAC4W,UAAF,KAAiB3Z,SAArB,EAAgC;AACrCE,MAAAA,CAAC,CAACH,EAAF,GAAOgD,CAAC,CAAC4W,UAAT,CAAA;AACD,KAAA;;AAED,IAAA,OAAOzZ,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;EACEmW,QAAQ,CAACtT,CAAD,EAAI;AACV;AACA,IAAA,IAAI,KAAKoD,IAAL,CAAUmF,UAAV,CAAqBC,SAArB,EAAJ,EAAsC;AACpCxI,MAAAA,CAAC,CAACqU,cAAF,EAAA,CAAA;AACArU,MAAAA,CAAC,CAAC6W,eAAF,EAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAtkBY;;ACrBf;;AACA;;AAEA;;AAEA,MAAMC,wBAAwB,GAAG,IAAjC;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,CAAiB;AACf;AACF;AACA;EACElV,WAAW,CAACuB,IAAD,EAAO;IAChB,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAKtG,CAAAA,CAAL,GAAS,CAAT,CAAA;IACA,IAAKka,CAAAA,UAAL,GAAkB,CAAlB,CAAA;AACA;;IACA,IAAKC,CAAAA,kBAAL,GAA0B,CAA1B,CAAA;AACA;;IACA,IAAKC,CAAAA,kBAAL,GAA0B,CAA1B,CAAA;AACA;;IACA,IAAKC,CAAAA,oBAAL,GAA4B,CAAC,CAA7B,CAAA;AAEA;;IACA,IAAKC,CAAAA,WAAL,GAAmB,EAAnB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;EACExO,MAAM,CAACyO,YAAD,EAAe;IACnB,MAAM;AAAEjU,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;IACA,MAAMkU,aAAa,GAAGla,IAAI,CAACC,KAAL,CACpB+F,IAAI,CAACO,YAAL,CAAkB7G,CAAlB,GAAsBsG,IAAI,CAACO,YAAL,CAAkB7G,CAAlB,GAAsBsG,IAAI,CAACD,OAAL,CAAaoU,OADrC,CAAtB,CAFmB;AAMnB;AACA;;AACA,IAAA,MAAMC,iBAAiB,GAAIF,aAAa,KAAK,KAAKN,UAAlD,CAAA;;AAEA,IAAA,IAAIQ,iBAAJ,EAAuB;MACrB,IAAKR,CAAAA,UAAL,GAAkBM,aAAlB,CAAA;AACA,MAAA,IAAA,CAAK/I,MAAL,CAAY,IAAKtB,CAAAA,aAAL,EAAZ,CAAA,CAAA;AACD,KAAA;;IAED,IAAKmK,CAAAA,WAAL,CAAiB7U,OAAjB,CAAyB,CAACkV,UAAD,EAAa5T,KAAb,KAAuB;AAC9C,MAAA,IAAI2T,iBAAJ,EAAuB;AACrBvZ,QAAAA,YAAY,CAACwZ,UAAU,CAACjb,EAAZ,EAAgB,CAACqH,KAAK,GAAG,IAAKsT,CAAAA,oBAAd,IACE,IAAA,CAAKH,UADvB,CAAZ,CAAA;AAED,OAAA;;AAED,MAAA,IAAIK,YAAY,IAAII,UAAU,CAAClT,KAA/B,EAAsC;QACpCkT,UAAU,CAAClT,KAAX,CAAiBqE,MAAjB,EAAA,CAAA;AACD,OAAA;KARH,CAAA,CAAA;AAUD,GAAA;AAED;AACF;AACA;;;AACE8O,EAAAA,aAAa,GAAG;AACd;AACA;IACA,IAAKT,CAAAA,kBAAL,GAA0B,CAA1B,CAAA;AACA,IAAA,IAAA,CAAKC,kBAAL,GAA0B,CAA1B,CAJc;;AAOd,IAAA,IAAA,CAAKF,UAAL,GAAkB,CAAlB,CAPc;;IAUd,IAAKG,CAAAA,oBAAL,GAA4B,CAAC,CAA7B,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEQ,EAAAA,aAAa,GAAG;AACd,IAAA,IAAA,CAAKP,WAAL,GAAmB,EAAnB,CADc;AAId;;IACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,MAAA,MAAMpb,EAAE,GAAGJ,aAAa,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAKgH,CAAAA,IAAL,CAAUiE,SAAhC,CAAxB,CAAA;AACA7K,MAAAA,EAAE,CAACqb,YAAH,CAAgB,MAAhB,EAAwB,OAAxB,CAAA,CAAA;AACArb,MAAAA,EAAE,CAACqb,YAAH,CAAgB,sBAAhB,EAAwC,OAAxC,CAAA,CAAA;AACArb,MAAAA,EAAE,CAACqb,YAAH,CAAgB,aAAhB,EAA+B,MAA/B,EAJ0B;;MAO1Brb,EAAE,CAAC0B,KAAH,CAAS4Z,OAAT,GAAoBF,CAAC,KAAK,CAAP,GAAY,OAAZ,GAAsB,MAAzC,CAAA;MAEA,IAAKR,CAAAA,WAAL,CAAiBpU,IAAjB,CAAsB;AACpBxG,QAAAA,EADoB;;OAAtB,CAAA,CAAA;AAID,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;AACEub,EAAAA,WAAW,GAAG;AACZ,IAAA,OAAO,IAAK3U,CAAAA,IAAL,CAAU4U,WAAV,KAA0B,CAAjC,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE7K,EAAAA,WAAW,CAACoJ,IAAD,EAAO0B,OAAP,EAAgBC,SAAhB,EAA2B;IACpC,MAAM;AAAE9U,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;AACA,IAAA,IAAI+U,QAAQ,GAAG/U,IAAI,CAACgV,cAAL,GAAsB7B,IAArC,CAAA;AACA,IAAA,MAAM8B,SAAS,GAAGjV,IAAI,CAAC4U,WAAL,EAAlB,CAAA;;AAEA,IAAA,IAAI5U,IAAI,CAACkV,OAAL,EAAJ,EAAoB;AAClBH,MAAAA,QAAQ,GAAG/U,IAAI,CAACmV,cAAL,CAAoBJ,QAApB,CAAX,CAAA;AACA,MAAA,MAAMK,QAAQ,GAAG,CAACjC,IAAI,GAAG8B,SAAR,IAAqBA,SAAtC,CAAA;;AACA,MAAA,IAAIG,QAAQ,IAAIH,SAAS,GAAG,CAA5B,EAA+B;AAC7B;AACA9B,QAAAA,IAAI,GAAGiC,QAAP,CAAA;AACD,OAHD,MAGO;AACL;QACAjC,IAAI,GAAGiC,QAAQ,GAAGH,SAAlB,CAAA;AACD,OAAA;AACF,KAVD,MAUO;MACL,IAAIF,QAAQ,GAAG,CAAf,EAAkB;AAChBA,QAAAA,QAAQ,GAAG,CAAX,CAAA;AACD,OAFD,MAEO,IAAIA,QAAQ,IAAIE,SAAhB,EAA2B;QAChCF,QAAQ,GAAGE,SAAS,GAAG,CAAvB,CAAA;AACD,OAAA;;AACD9B,MAAAA,IAAI,GAAG4B,QAAQ,GAAG/U,IAAI,CAACgV,cAAvB,CAAA;AACD,KAAA;;IAEDhV,IAAI,CAACgV,cAAL,GAAsBD,QAAtB,CAAA;IACA,IAAKlB,CAAAA,kBAAL,IAA2BV,IAA3B,CAAA;IAEAnT,IAAI,CAACuG,UAAL,CAAgB8O,cAAhB,EAAA,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAG,IAAKzL,CAAAA,aAAL,EAArB,CAAA;;IACA,IAAI,CAACgL,OAAL,EAAc;MACZ,IAAK1J,CAAAA,MAAL,CAAYmK,YAAZ,CAAA,CAAA;AACA,MAAA,IAAA,CAAKC,cAAL,EAAA,CAAA;AACD,KAHD,MAGO;AACLvV,MAAAA,IAAI,CAACuG,UAAL,CAAgBqE,WAAhB,CAA4B;AAC1B4K,QAAAA,YAAY,EAAE,IADY;QAE1B5M,KAAK,EAAE,KAAKlP,CAFc;AAG1B+P,QAAAA,GAAG,EAAE6L,YAHqB;QAI1B5L,QAAQ,EAAEoL,SAAS,IAAI,CAJG;AAK1B3H,QAAAA,gBAAgB,EAAE,EALQ;AAM1B1C,QAAAA,YAAY,EAAE,CANY;AAMT;QACjBI,QAAQ,EAAGnR,CAAD,IAAO;UACf,IAAKyR,CAAAA,MAAL,CAAYzR,CAAZ,CAAA,CAAA;SARwB;AAU1BwN,QAAAA,UAAU,EAAE,MAAM;AAChB,UAAA,IAAA,CAAKqO,cAAL,EAAA,CAAA;AACAvV,UAAAA,IAAI,CAAC+E,WAAL,EAAA,CAAA;AACD,SAAA;OAbH,CAAA,CAAA;MAgBA,IAAI0Q,QAAQ,GAAGzV,IAAI,CAACgV,cAAL,GAAsBhV,IAAI,CAACwD,SAA1C,CAAA;;AACA,MAAA,IAAIxD,IAAI,CAACkV,OAAL,EAAJ,EAAoB;AAClB,QAAA,MAAMQ,YAAY,GAAG,CAACD,QAAQ,GAAGR,SAAZ,IAAyBA,SAA9C,CAAA;;AACA,QAAA,IAAIS,YAAY,IAAIT,SAAS,GAAG,CAAhC,EAAmC;AACjC;AACAQ,UAAAA,QAAQ,GAAGC,YAAX,CAAA;AACD,SAHD,MAGO;AACL;UACAD,QAAQ,GAAGC,YAAY,GAAGT,SAA1B,CAAA;AACD,SAAA;AACF,OA3BI;AA8BL;;;AACA,MAAA,IAAIjb,IAAI,CAACG,GAAL,CAASsb,QAAT,CAAA,GAAqB,CAAzB,EAA4B;AAC1B,QAAA,IAAA,CAAKF,cAAL,EAAA,CAAA;AACD,OAAA;AACF,KAAA;;IAED,OAAO1N,OAAO,CAACsL,IAAD,CAAd,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;AACEtJ,EAAAA,aAAa,GAAG;AACd,IAAA,OAAO,IAAK+J,CAAAA,UAAL,GAAkB,IAAA,CAAKC,kBAA9B,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;AACEzO,EAAAA,SAAS,GAAG;AACV,IAAA,OAAO,IAAK1L,CAAAA,CAAL,KAAW,IAAA,CAAKmQ,aAAL,EAAlB,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACE0L,EAAAA,cAAc,GAAG;AAAA,IAAA,IAAA,kBAAA,CAAA;;IACf,MAAM;AAAEvV,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;AACA,IAAA,MAAM2V,kBAAkB,GAAG,IAAA,CAAK7B,kBAAL,GAA0B,KAAKD,kBAA1D,CAAA;;IAEA,IAAI,CAAC8B,kBAAL,EAAyB;AACvB,MAAA,OAAA;AACD,KAAA;;IAED,IAAK7B,CAAAA,kBAAL,GAA0B,IAAA,CAAKD,kBAA/B,CAAA;AAEA7T,IAAAA,IAAI,CAACwD,SAAL,GAAiBxD,IAAI,CAACgV,cAAtB,CAAA;AAEA,IAAA,IAAIY,OAAO,GAAG5b,IAAI,CAACG,GAAL,CAASwb,kBAAT,CAAd,CAAA;AACA;;AACA,IAAA,IAAIE,UAAJ,CAAA;;IAEA,IAAID,OAAO,IAAI,CAAf,EAAkB;AAChB,MAAA,IAAA,CAAK7B,oBAAL,IAA6B4B,kBAAkB,IAAIA,kBAAkB,GAAG,CAArB,GAAyB,CAAC,CAA1B,GAA8B,CAAlC,CAA/C,CAAA;AACAC,MAAAA,OAAO,GAAG,CAAV,CAAA;AACD,KAAA;;IAED,KAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,OAApB,EAA6BpB,CAAC,EAA9B,EAAkC;MAChC,IAAImB,kBAAkB,GAAG,CAAzB,EAA4B;AAC1BE,QAAAA,UAAU,GAAG,IAAA,CAAK7B,WAAL,CAAiB8B,KAAjB,EAAb,CAAA;;AACA,QAAA,IAAID,UAAJ,EAAgB;AACd,UAAA,IAAA,CAAK7B,WAAL,CAAiB,CAAjB,CAAsB6B,GAAAA,UAAtB,CADc;;AAGd,UAAA,IAAA,CAAK9B,oBAAL,EAAA,CAAA;AAEAlZ,UAAAA,YAAY,CAACgb,UAAU,CAACzc,EAAZ,EAAgB,CAAC,IAAK2a,CAAAA,oBAAL,GAA4B,CAA7B,IAAkC,IAAA,CAAKH,UAAvD,CAAZ,CAAA;AAEA5T,UAAAA,IAAI,CAAC+V,UAAL,CAAgBF,UAAhB,EAA6B7V,IAAI,CAACwD,SAAL,GAAiBoS,OAAlB,GAA6BpB,CAA7B,GAAiC,CAA7D,CAAA,CAAA;AACD,SAAA;AACF,OAXD,MAWO;AACLqB,QAAAA,UAAU,GAAG,IAAA,CAAK7B,WAAL,CAAiBgC,GAAjB,EAAb,CAAA;;AACA,QAAA,IAAIH,UAAJ,EAAgB;AACd,UAAA,IAAA,CAAK7B,WAAL,CAAiBiC,OAAjB,CAAyBJ,UAAzB,EADc;;AAGd,UAAA,IAAA,CAAK9B,oBAAL,EAAA,CAAA;UAEAlZ,YAAY,CAACgb,UAAU,CAACzc,EAAZ,EAAgB,KAAK2a,oBAAL,GAA4B,IAAKH,CAAAA,UAAjD,CAAZ,CAAA;AAEA5T,UAAAA,IAAI,CAAC+V,UAAL,CAAgBF,UAAhB,EAA6B7V,IAAI,CAACwD,SAAL,GAAiBoS,OAAlB,GAA6BpB,CAA7B,GAAiC,CAA7D,CAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KA7Cc;AAgDf;AACA;AACA;AACA;AACA;;;AACA,IAAA,IAAIxa,IAAI,CAACG,GAAL,CAAS,IAAK4Z,CAAAA,oBAAd,CAAsC,GAAA,EAAtC,IAA4C,CAAC,IAAK3O,CAAAA,SAAL,EAAjD,EAAmE;AACjE,MAAA,IAAA,CAAKkP,aAAL,EAAA,CAAA;AACA,MAAA,IAAA,CAAK9O,MAAL,EAAA,CAAA;AACD,KAxDc;;;IA2DfxF,IAAI,CAACuG,UAAL,CAAgBC,UAAhB,EAAA,CAAA;IAEA,IAAKwN,CAAAA,WAAL,CAAiB7U,OAAjB,CAAyB,CAACkV,UAAD,EAAaG,CAAb,KAAmB;MAC1C,IAAIH,UAAU,CAAClT,KAAf,EAAsB;AACpB;AACAkT,QAAAA,UAAU,CAAClT,KAAX,CAAiBoD,WAAjB,CAA6BiQ,CAAC,KAAK,CAAnC,CAAA,CAAA;AACD,OAAA;KAJH,CAAA,CAAA;IAOAxU,IAAI,CAAC+H,SAAL,GAAA,CAAA,kBAAA,GAAiB,IAAKiM,CAAAA,WAAL,CAAiB,CAAjB,CAAjB,MAAiB,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,kBAAA,CAAqB7S,KAAtC,CAAA;AACAnB,IAAAA,IAAI,CAAC+D,aAAL,CAAmBmS,UAAnB,CAA8BP,kBAA9B,CAAA,CAAA;;IAEA,IAAI3V,IAAI,CAAC+H,SAAT,EAAoB;MAClB/H,IAAI,CAAC+H,SAAL,CAAe9C,mBAAf,EAAA,CAAA;AACD,KAAA;;IAEDjF,IAAI,CAACyB,QAAL,CAAc,QAAd,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE0J,EAAAA,MAAM,CAACzR,CAAD,EAAIyc,QAAJ,EAAc;IAClB,IAAI,CAAC,KAAKnW,IAAL,CAAUkV,OAAV,EAAD,IAAwBiB,QAA5B,EAAsC;AACpC;AACA,MAAA,IAAIC,mBAAmB,GAAG,CAAE,IAAA,CAAKxC,UAAL,GAAkB,IAAKC,CAAAA,kBAAxB,GAA8Cna,CAA/C,IAAoD,IAAA,CAAKka,UAAnF,CAAA;AACAwC,MAAAA,mBAAmB,IAAI,IAAA,CAAKpW,IAAL,CAAUwD,SAAjC,CAAA;MACA,MAAMyH,KAAK,GAAGjR,IAAI,CAACC,KAAL,CAAWP,CAAC,GAAG,IAAKA,CAAAA,CAApB,CAAd,CAAA;;MAEA,IAAK0c,mBAAmB,GAAG,CAAtB,IAA2BnL,KAAK,GAAG,CAApC,IACImL,mBAAmB,IAAI,KAAKpW,IAAL,CAAU4U,WAAV,EAA0B,GAAA,CAAjD,IAAsD3J,KAAK,GAAG,CADtE,EAC0E;AACxEvR,QAAAA,CAAC,GAAG,IAAKA,CAAAA,CAAL,GAAUuR,KAAK,GAAGyI,wBAAtB,CAAA;AACD,OAAA;AACF,KAAA;;IAED,IAAKha,CAAAA,CAAL,GAASA,CAAT,CAAA;;AAEA,IAAA,IAAI,IAAKsG,CAAAA,IAAL,CAAUiE,SAAd,EAAyB;AACvBpJ,MAAAA,YAAY,CAAC,IAAKmF,CAAAA,IAAL,CAAUiE,SAAX,EAAsBvK,CAAtB,CAAZ,CAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKsG,IAAL,CAAUyB,QAAV,CAAmB,gBAAnB,EAAqC;MAAE/H,CAAF;MAAKyc,QAAQ,EAAEA,QAAQ,IAAI,KAAA;KAAhE,CAAA,CAAA;AACD,GAAA;;AAzTc;;ACrBjB;;AAEA;AACA;AACA;AACA;;AAEA,MAAME,mBAAmB,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,CAAC,EAAE,EAFuB;AAG1BC,EAAAA,SAAS,EAAE,EAHe;AAI1BC,EAAAA,OAAO,EAAE,EAJiB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE,EANe;AAO1BC,EAAAA,GAAG,EAAE,CAAA;AAPqB,CAA5B,CAAA;AAUA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAACC,GAAD,EAAMC,cAAN,KAAyB;AACnD,EAAA,OAAOA,cAAc,GAAGD,GAAH,GAAST,mBAAmB,CAACS,GAAD,CAAjD,CAAA;AACD,CAFD,CAAA;AAIA;AACA;AACA;AACA;;;AACA,MAAME,QAAN,CAAe;AACb;AACF;AACA;EACEvY,WAAW,CAACuB,IAAD,EAAO;IAChB,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA;;IACA,IAAKiX,CAAAA,WAAL,GAAmB,KAAnB,CAAA;AAEAjX,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,YAAR,EAAsB,MAAM;AAC1B;AACA,MAAA,IAAI,CAAC/P,IAAI,CAACD,OAAL,CAAamX,iBAAlB,EAAqC;AACnC;AACA;AACA;AACA,QAAA,IAAA,CAAKC,UAAL,EAAA,CAAA;AACD,OAAA;;AAEDnX,MAAAA,IAAI,CAACgQ,MAAL,CAAYrR,GAAZ,CAAgBtF,QAAhB,EAA0B,SAA1B;AAAqC;AAA2B,MAAA,IAAA,CAAK+d,UAAL,CAAgBjH,IAAhB,CAAqB,IAArB,CAAhE,CAAA,CAAA;AACAnQ,MAAAA,IAAI,CAACgQ,MAAL,CAAYrR,GAAZ,CAAgBtF,QAAhB,EAA0B,SAA1B;AAAqC;AAA2B,MAAA,IAAA,CAAKge,UAAL,CAAgBlH,IAAhB,CAAqB,IAArB,CAAhE,CAAA,CAAA;KAVF,CAAA,CAAA;AAaA,IAAA,MAAMmH,iBAAiB;AAAG;AAA4Bje,IAAAA,QAAQ,CAACke,aAA/D,CAAA;AACAvX,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,SAAR,EAAmB,MAAM;MACvB,IAAI/P,IAAI,CAACD,OAAL,CAAayX,WAAb,IACGF,iBADH,IAEG,IAAKL,CAAAA,WAFZ,EAEyB;AACvBK,QAAAA,iBAAiB,CAACG,KAAlB,EAAA,CAAA;AACD,OAAA;KALH,CAAA,CAAA;AAOD,GAAA;AAED;;;AACAN,EAAAA,UAAU,GAAG;IACX,IAAI,CAAC,KAAKF,WAAN,IAAqB,KAAKjX,IAAL,CAAUgG,OAAnC,EAA4C;AAC1C,MAAA,IAAA,CAAKhG,IAAL,CAAUgG,OAAV,CAAkByR,KAAlB,EAAA,CAAA;MACA,IAAKR,CAAAA,WAAL,GAAmB,IAAnB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;EACEI,UAAU,CAACza,CAAD,EAAI;IACZ,MAAM;AAAEoD,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;;AAEA,IAAA,IAAIA,IAAI,CAACyB,QAAL,CAAc,SAAd,EAAyB;AAAEkM,MAAAA,aAAa,EAAE/Q,CAAAA;KAA1C,CAAA,CAA+CyI,gBAAnD,EAAqE;AACnE,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI1I,cAAc,CAACC,CAAD,CAAlB,EAAuB;AACrB;AACA;AACA;AACA,MAAA,OAAA;AACD,KAAA;AAED;;;AACA,IAAA,IAAI8a,aAAJ,CAAA;AACA;;AACA,IAAA,IAAIhW,IAAJ,CAAA;IACA,IAAIiW,SAAS,GAAG,KAAhB,CAAA;AACA,IAAA,MAAMZ,cAAc,IAAG,KAASna,IAAAA,CAAZ,CAApB,CAAA;;IAEA,QAAQma,cAAc,GAAGna,CAAC,CAACka,GAAL,GAAWla,CAAC,CAACgb,OAAnC;AACE,MAAA,KAAKf,mBAAmB,CAAC,QAAD,EAAWE,cAAX,CAAxB;AACE,QAAA,IAAI/W,IAAI,CAACD,OAAL,CAAa8X,MAAjB,EAAyB;AACvBH,UAAAA,aAAa,GAAG,OAAhB,CAAA;AACD,SAAA;;AACD,QAAA,MAAA;;AACF,MAAA,KAAKb,mBAAmB,CAAC,GAAD,EAAME,cAAN,CAAxB;AACEW,QAAAA,aAAa,GAAG,YAAhB,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAKb,mBAAmB,CAAC,WAAD,EAAcE,cAAd,CAAxB;AACErV,QAAAA,IAAI,GAAG,GAAP,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAKmV,mBAAmB,CAAC,SAAD,EAAYE,cAAZ,CAAxB;AACErV,QAAAA,IAAI,GAAG,GAAP,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAKmV,mBAAmB,CAAC,YAAD,EAAeE,cAAf,CAAxB;AACErV,QAAAA,IAAI,GAAG,GAAP,CAAA;AACAiW,QAAAA,SAAS,GAAG,IAAZ,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAKd,mBAAmB,CAAC,WAAD,EAAcE,cAAd,CAAxB;AACEY,QAAAA,SAAS,GAAG,IAAZ,CAAA;AACAjW,QAAAA,IAAI,GAAG,GAAP,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAKmV,mBAAmB,CAAC,KAAD,EAAQE,cAAR,CAAxB;AACE,QAAA,IAAA,CAAKI,UAAL,EAAA,CAAA;;AACA,QAAA,MAAA;AAzBJ,KArBY;;;AAmDZ,IAAA,IAAIzV,IAAJ,EAAU;AACR;AACA9E,MAAAA,CAAC,CAACqU,cAAF,EAAA,CAAA;MAEA,MAAM;AAAElJ,QAAAA,SAAAA;AAAF,OAAA,GAAgB/H,IAAtB,CAAA;;AAEA,MAAA,IAAIA,IAAI,CAACD,OAAL,CAAa+X,SAAb,IACGpW,IAAI,KAAK,GADZ,IAEG1B,IAAI,CAAC4U,WAAL,EAAA,GAAqB,CAF5B,EAE+B;AAC7B8C,QAAAA,aAAa,GAAGC,SAAS,GAAG,MAAH,GAAY,MAArC,CAAA;AACD,OAJD,MAIO,IAAI5P,SAAS,IAAIA,SAAS,CAAC3G,aAAV,GAA0B2G,SAAS,CAAC/E,UAAV,CAAqBZ,GAAhE,EAAqE;AAC1E;AACA;AACA;AACA;QACA2F,SAAS,CAACrE,GAAV,CAAchC,IAAd,CAAA,IAAuBiW,SAAS,GAAG,CAAC,EAAJ,GAAS,EAAzC,CAAA;AACA5P,QAAAA,SAAS,CAACtC,KAAV,CAAgBsC,SAAS,CAACrE,GAAV,CAAchK,CAA9B,EAAiCqO,SAAS,CAACrE,GAAV,CAAc/J,CAA/C,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,IAAI+d,aAAJ,EAAmB;MACjB9a,CAAC,CAACqU,cAAF,EAAA,CADiB;;MAGjBjR,IAAI,CAAC0X,aAAD,CAAJ,EAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;EACEN,UAAU,CAACxa,CAAD,EAAI;IACZ,MAAM;AAAEmb,MAAAA,QAAAA;AAAF,KAAA,GAAe,KAAK/X,IAA1B,CAAA;;AACA,IAAA,IAAI+X,QAAQ,IACL1e,QAAQ,KAAKuD,CAAC,CAACgC,MADlB,IAEGmZ,QAAQ,KAAKnb,CAAC,CAACgC,MAFlB,IAGG,CAACmZ,QAAQ,CAAChK,QAAT;AAAkB;IAAqBnR,CAAC,CAACgC,MAAzC,CAHR,EAG2D;AACzD;AACAmZ,MAAAA,QAAQ,CAACN,KAAT,EAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAzIY;;AC/Bf,MAAMO,cAAc,GAAG,0BAAvB,CAAA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AACA,MAAMC,YAAN,CAAmB;AACjB;AACF;AACA;AACA;AACA;EACExZ,WAAW,CAACyZ,KAAD,EAAQ;IACjB,IAAKA,CAAAA,KAAL,GAAaA,KAAb,CAAA;IACA,MAAM;MACJtZ,MADI;MAEJsI,UAFI;MAGJnM,SAHI;MAIJod,QAAQ,GAAG,MAAM,EAJb;AAKJhd,MAAAA,QAAQ,GAAG,GALP;AAMJgM,MAAAA,MAAM,GAAG6Q,cAAAA;AANL,KAAA,GAOFE,KAPJ,CAAA;AASA,IAAA,IAAA,CAAKC,QAAL,GAAgBA,QAAhB,CAXiB;;AAcjB,IAAA,MAAMjd,IAAI,GAAGH,SAAS,GAAG,WAAH,GAAiB,SAAvC,CAAA;AACA,IAAA,MAAMH,SAAS,GAAGsd,KAAK,CAAChd,IAAD,CAAL,IAAe,EAAjC,CAAA;AAEA;;IACA,IAAKkd,CAAAA,OAAL,GAAexZ,MAAf,CAAA;AACA;;IACA,IAAKyZ,CAAAA,WAAL,GAAmBnR,UAAnB,CAAA;AACA;;IACA,IAAKoR,CAAAA,SAAL,GAAiB,KAAjB,CAAA;AAEA;;IACA,IAAKC,CAAAA,gBAAL,GAAwB,IAAA,CAAKA,gBAAL,CAAsBpI,IAAtB,CAA2B,IAA3B,CAAxB,CAzBiB;AA4BjB;AACA;AACA;AACA;AACA;;AACA;;AACA,IAAA,IAAA,CAAKqI,cAAL,GAAsBnG,UAAU,CAAC,MAAM;MACrCpX,kBAAkB,CAAC2D,MAAD,EAAS1D,IAAT,EAAeC,QAAf,EAAyBgM,MAAzB,CAAlB,CAAA;AACA,MAAA,IAAA,CAAKqR,cAAL,GAAsBnG,UAAU,CAAC,MAAM;QACrCzT,MAAM,CAACR,gBAAP,CAAwB,eAAxB,EAAyC,IAAKma,CAAAA,gBAA9C,EAAgE,KAAhE,CAAA,CAAA;QACA3Z,MAAM,CAACR,gBAAP,CAAwB,kBAAxB,EAA4C,KAAKma,gBAAjD,EAAmE,KAAnE,CAAA,CAFqC;AAKrC;AACA;AACA;;AACA,QAAA,IAAA,CAAKC,cAAL,GAAsBnG,UAAU,CAAC,MAAM;AACrC,UAAA,IAAA,CAAKoG,kBAAL,EAAA,CAAA;AACD,SAF+B,EAE7Btd,QAAQ,GAAG,GAFkB,CAAhC,CAAA;AAGAyD,QAAAA,MAAM,CAAC9D,KAAP,CAAaI,IAAb,IAAqBN,SAArB,CAAA;AACD,OAZ+B,EAY7B,EAZ6B,CAAhC,CAFqC;KAAP,EAe7B,CAf6B,CAAhC,CAAA;AAgBD,GAAA;AAED;AACF;AACA;AACA;;;EACE2d,gBAAgB,CAAC3b,CAAD,EAAI;AAClB,IAAA,IAAIA,CAAC,CAACgC,MAAF,KAAa,IAAA,CAAKwZ,OAAtB,EAA+B;AAC7B,MAAA,IAAA,CAAKK,kBAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;AACEA,EAAAA,kBAAkB,GAAG;IACnB,IAAI,CAAC,IAAKH,CAAAA,SAAV,EAAqB;MACnB,IAAKA,CAAAA,SAAL,GAAiB,IAAjB,CAAA;AACA,MAAA,IAAA,CAAKH,QAAL,EAAA,CAAA;;MACA,IAAI,IAAA,CAAKE,WAAT,EAAsB;AACpB,QAAA,IAAA,CAAKA,WAAL,EAAA,CAAA;AACD,OAAA;AACF,KAAA;AACF,GA/EgB;;;AAkFjB/S,EAAAA,OAAO,GAAG;IACR,IAAI,IAAA,CAAKkT,cAAT,EAAyB;MACvBlG,YAAY,CAAC,IAAKkG,CAAAA,cAAN,CAAZ,CAAA;AACD,KAAA;;IACD7c,qBAAqB,CAAC,IAAKyc,CAAAA,OAAN,CAArB,CAAA;;IACA,IAAKA,CAAAA,OAAL,CAAaM,mBAAb,CAAiC,eAAjC,EAAkD,IAAA,CAAKH,gBAAvD,EAAyE,KAAzE,CAAA,CAAA;;IACA,IAAKH,CAAAA,OAAL,CAAaM,mBAAb,CAAiC,kBAAjC,EAAqD,IAAA,CAAKH,gBAA1D,EAA4E,KAA5E,CAAA,CAAA;;IACA,IAAI,CAAC,IAAKD,CAAAA,SAAV,EAAqB;AACnB,MAAA,IAAA,CAAKG,kBAAL,EAAA,CAAA;AACD,KAAA;AACF,GAAA;;AA5FgB;;ACpBnB,MAAME,yBAAyB,GAAG,EAAlC,CAAA;AACA,MAAMC,qBAAqB,GAAG,IAA9B,CAAA;AAEA;AACA;AACA;;AACA,MAAMC,WAAN,CAAkB;AAChB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEpa,EAAAA,WAAW,CAAC8J,eAAD,EAAkBkC,YAAlB,EAAgC0C,gBAAhC,EAAkD;AAC3D,IAAA,IAAA,CAAKzD,QAAL,GAAgBnB,eAAe,GAAG,IAAlC,CAD2D;AAG3D;;AACA,IAAA,IAAA,CAAKuQ,aAAL,GAAqBrO,YAAY,IAAImO,qBAArC,CAJ2D;;AAO3D,IAAA,IAAA,CAAKG,iBAAL,GAAyB5L,gBAAgB,IAAIwL,yBAA7C,CAAA;IAEA,IAAKK,CAAAA,gBAAL,GAAwB,IAAA,CAAKD,iBAA7B,CAAA;;AAEA,IAAA,IAAI,IAAKD,CAAAA,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,MAAA,IAAA,CAAKE,gBAAL,IAAyBhf,IAAI,CAACI,IAAL,CAAU,CAAI,GAAA,IAAA,CAAK0e,aAAL,GAAqB,IAAKA,CAAAA,aAAxC,CAAzB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEG,EAAAA,SAAS,CAACC,aAAD,EAAgBC,SAAhB,EAA2B;AAClC;AACA;AACA;AACA;IAEA,IAAI5G,YAAY,GAAG,CAAnB,CAAA;AACA,IAAA,IAAI6G,KAAJ,CAAA;AAEAD,IAAAA,SAAS,IAAI,IAAb,CAAA;AAEA,IAAA,MAAME,iBAAiB,GAAGrf,IAAI,CAACsf,CAAL,KAAW,CAAC,IAAKR,CAAAA,aAAN,GAAsB,IAAA,CAAKC,iBAA3B,GAA+CI,SAA1D,CAA1B,CAAA;;AAEA,IAAA,IAAI,IAAKL,CAAAA,aAAL,KAAuB,CAA3B,EAA8B;AAC5BM,MAAAA,KAAK,GAAG,IAAK1P,CAAAA,QAAL,GAAgB,IAAKqP,CAAAA,iBAAL,GAAyBG,aAAjD,CAAA;MAEA3G,YAAY,GAAG,CAAC2G,aAAa,GAAGE,KAAK,GAAGD,SAAzB,IAAsCE,iBAArD,CAAA;MAEA,IAAK3P,CAAAA,QAAL,GAAgB6I,YAAY,GACP,CAAC,KAAKwG,iBADX,GACgCK,KAAK,GACjCC,iBAFpB,CAAA;AAGD,KARD,MAQO,IAAI,IAAA,CAAKP,aAAL,GAAqB,CAAzB,EAA4B;AACjCM,MAAAA,KAAK,GAAI,CAAA,GAAI,IAAKJ,CAAAA,gBAAV,IACK,IAAKF,CAAAA,aAAL,GAAqB,IAAA,CAAKC,iBAA1B,GAA8CG,aAA9C,GAA8D,IAAA,CAAKxP,QADxE,CAAR,CAAA;MAGA,MAAM6P,UAAU,GAAGvf,IAAI,CAACwf,GAAL,CAAS,IAAKR,CAAAA,gBAAL,GAAwBG,SAAjC,CAAnB,CAAA;MACA,MAAMM,UAAU,GAAGzf,IAAI,CAAC0f,GAAL,CAAS,IAAKV,CAAAA,gBAAL,GAAwBG,SAAjC,CAAnB,CAAA;MAEA5G,YAAY,GAAG8G,iBAAiB,IACZH,aAAa,GAAGK,UAAhB,GAA6BH,KAAK,GAAGK,UADzB,CAAhC,CAAA;MAGA,IAAK/P,CAAAA,QAAL,GAAgB6I,YAAY,GACP,CAAC,IAAKwG,CAAAA,iBADX,GAEI,IAAA,CAAKD,aAFT,GAGIO,iBAAiB,IAChB,CAAC,IAAA,CAAKL,gBAAN,GAAyBE,aAAzB,GAAyCO,UAAzC,GACD,IAAKT,CAAAA,gBAAL,GAAwBI,KAAxB,GAAgCG,UAFf,CAHrC,CAAA;AAMD,KArCiC;;;AAyClC,IAAA,OAAOhH,YAAP,CAAA;AACD,GAAA;;AAhFe;;ACJlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMoH,eAAN,CAAsB;AACpB;AACF;AACA;EACElb,WAAW,CAACyZ,KAAD,EAAQ;IACjB,IAAKA,CAAAA,KAAL,GAAaA,KAAb,CAAA;IACA,IAAK0B,CAAAA,IAAL,GAAY,CAAZ,CAAA;IAEA,MAAM;MACJhR,KADI;MAEJa,GAFI;MAGJC,QAHI;MAIJmB,QAJI;MAKJ3D,UALI;MAMJiR,QAAQ,GAAG,MAAM,EANb;MAOJ1N,YAPI;AAQJ0C,MAAAA,gBAAAA;AARI,KAAA,GASF+K,KATJ,CAAA;IAWA,IAAKC,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;IAEA,MAAM0B,KAAK,GAAG,IAAIhB,WAAJ,CAAgBnP,QAAhB,EAA0Be,YAA1B,EAAwC0C,gBAAxC,CAAd,CAAA;AACA,IAAA,IAAI2M,QAAQ,GAAGtI,IAAI,CAACpE,GAAL,EAAf,CAAA;AACA,IAAA,IAAI8L,aAAa,GAAGtQ,KAAK,GAAGa,GAA5B,CAAA;;IAEA,MAAMsQ,aAAa,GAAG,MAAM;MAC1B,IAAI,IAAA,CAAKH,IAAT,EAAe;AACbV,QAAAA,aAAa,GAAGW,KAAK,CAACZ,SAAN,CAAgBC,aAAhB,EAA+B1H,IAAI,CAACpE,GAAL,EAAA,GAAa0M,QAA5C,CAAhB,CADa;;AAIb,QAAA,IAAI9f,IAAI,CAACG,GAAL,CAAS+e,aAAT,IAA0B,CAA1B,IAA+Blf,IAAI,CAACG,GAAL,CAAS0f,KAAK,CAACnQ,QAAf,CAAA,GAA2B,EAA9D,EAAkE;AAChE;UACAmB,QAAQ,CAACpB,GAAD,CAAR,CAAA;;AACA,UAAA,IAAIvC,UAAJ,EAAgB;YACdA,UAAU,EAAA,CAAA;AACX,WAAA;;AACD,UAAA,IAAA,CAAKiR,QAAL,EAAA,CAAA;AACD,SAPD,MAOO;AACL2B,UAAAA,QAAQ,GAAGtI,IAAI,CAACpE,GAAL,EAAX,CAAA;AACAvC,UAAAA,QAAQ,CAACqO,aAAa,GAAGzP,GAAjB,CAAR,CAAA;AACA,UAAA,IAAA,CAAKmQ,IAAL,GAAY7H,qBAAqB,CAACgI,aAAD,CAAjC,CAAA;AACD,SAAA;AACF,OAAA;KAjBH,CAAA;;AAoBA,IAAA,IAAA,CAAKH,IAAL,GAAY7H,qBAAqB,CAACgI,aAAD,CAAjC,CAAA;AACD,GA9CmB;;;AAiDpBzU,EAAAA,OAAO,GAAG;AACR,IAAA,IAAI,IAAKsU,CAAAA,IAAL,IAAa,CAAjB,EAAoB;MAClBpH,oBAAoB,CAAC,IAAKoH,CAAAA,IAAN,CAApB,CAAA;AACD,KAAA;;IACD,IAAKA,CAAAA,IAAL,GAAY,CAAZ,CAAA;AACD,GAAA;;AAtDmB;;ACdtB;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;;AACA,MAAMI,UAAN,CAAiB;AACfvb,EAAAA,WAAW,GAAG;AACZ;IACA,IAAKwb,CAAAA,gBAAL,GAAwB,EAAxB,CAAA;AACD,GAAA;AAED;AACF;AACA;;;EACErP,WAAW,CAACsN,KAAD,EAAQ;AACjB,IAAA,IAAA,CAAKgC,MAAL,CAAYhC,KAAZ,EAAmB,IAAnB,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;;;EACEpR,eAAe,CAACoR,KAAD,EAAQ;IACrB,IAAKgC,CAAAA,MAAL,CAAYhC,KAAZ,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEgC,EAAAA,MAAM,CAAChC,KAAD,EAAQiC,QAAR,EAAkB;AACtB,IAAA,MAAMC,SAAS,GAAGD,QAAQ,GACtB,IAAIR,eAAJ;AAAoB;IAAmCzB,KAAvD,CADsB,GAEtB,IAAID,YAAJ;AAAiB;AAAgCC,IAAAA,KAAjD,CAFJ,CAAA;AAIA,IAAA,IAAA,CAAK+B,gBAAL,CAAsBra,IAAtB,CAA2Bwa,SAA3B,CAAA,CAAA;;IACAA,SAAS,CAACjC,QAAV,GAAqB,MAAM,KAAKkC,IAAL,CAAUD,SAAV,CAA3B,CAAA;;AAEA,IAAA,OAAOA,SAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;EACEC,IAAI,CAACD,SAAD,EAAY;AACdA,IAAAA,SAAS,CAAC9U,OAAV,EAAA,CAAA;IACA,MAAM7E,KAAK,GAAG,IAAKwZ,CAAAA,gBAAL,CAAsB/H,OAAtB,CAA8BkI,SAA9B,CAAd,CAAA;;AACA,IAAA,IAAI3Z,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,MAAA,IAAA,CAAKwZ,gBAAL,CAAsBnH,MAAtB,CAA6BrS,KAA7B,EAAoC,CAApC,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAEDoI,EAAAA,OAAO,GAAG;AAAE;AACV,IAAA,IAAA,CAAKoR,gBAAL,CAAsB9a,OAAtB,CAA+Bib,SAAD,IAAe;AAC3CA,MAAAA,SAAS,CAAC9U,OAAV,EAAA,CAAA;KADF,CAAA,CAAA;IAGA,IAAK2U,CAAAA,gBAAL,GAAwB,EAAxB,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACEzT,EAAAA,UAAU,GAAG;IACX,IAAKyT,CAAAA,gBAAL,GAAwB,IAAKA,CAAAA,gBAAL,CAAsBta,MAAtB,CAA8Bya,SAAD,IAAe;AAClE,MAAA,IAAIA,SAAS,CAAClC,KAAV,CAAgBnR,KAApB,EAA2B;AACzBqT,QAAAA,SAAS,CAAC9U,OAAV,EAAA,CAAA;AACA,QAAA,OAAO,KAAP,CAAA;AACD,OAAA;;AAED,MAAA,OAAO,IAAP,CAAA;AACD,KAPuB,CAAxB,CAAA;AAQD,GAAA;;AAED+P,EAAAA,cAAc,GAAG;IACf,IAAK4E,CAAAA,gBAAL,GAAwB,IAAKA,CAAAA,gBAAL,CAAsBta,MAAtB,CAA8Bya,SAAD,IAAe;AAClE,MAAA,IAAIA,SAAS,CAAClC,KAAV,CAAgB1C,YAApB,EAAkC;AAChC4E,QAAAA,SAAS,CAAC9U,OAAV,EAAA,CAAA;AACA,QAAA,OAAO,KAAP,CAAA;AACD,OAAA;;AAED,MAAA,OAAO,IAAP,CAAA;AACD,KAPuB,CAAxB,CAAA;AAQD,GAAA;AAED;AACF;AACA;AACE;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;;;AACEgV,EAAAA,YAAY,GAAG;AACb,IAAA,OAAO,KAAKL,gBAAL,CAAsBM,IAAtB,CAA4BH,SAAD,IAAe;AAC/C,MAAA,OAAOA,SAAS,CAAClC,KAAV,CAAgBnR,KAAvB,CAAA;AACD,KAFM,CAAP,CAAA;AAGD,GAAA;;AAhGc;;ACpBjB;;AAEA;AACA;AACA;AACA;AACA,MAAMyT,WAAN,CAAkB;AAChB;AACF;AACA;EACE/b,WAAW,CAACuB,IAAD,EAAO;IAChB,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACAA,IAAI,CAACgQ,MAAL,CAAYrR,GAAZ,CAAgBqB,IAAI,CAACgG,OAArB,EAA8B,OAA9B;AAAuC;AAA2B,IAAA,IAAA,CAAKyU,QAAL,CAActK,IAAd,CAAmB,IAAnB,CAAlE,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;EACEsK,QAAQ,CAAC7d,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACqU,cAAF,EAAA,CAAA;IACA,MAAM;AAAElJ,MAAAA,SAAAA;AAAF,KAAA,GAAgB,KAAK/H,IAA3B,CAAA;IACA,IAAI;MAAE0a,MAAF;AAAUC,MAAAA,MAAAA;AAAV,KAAA,GAAqB/d,CAAzB,CAAA;;IAEA,IAAI,CAACmL,SAAL,EAAgB;AACd,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAI,KAAK/H,IAAL,CAAUyB,QAAV,CAAmB,OAAnB,EAA4B;AAAEkM,MAAAA,aAAa,EAAE/Q,CAAAA;KAA7C,CAAA,CAAkDyI,gBAAtD,EAAwE;AACtE,MAAA,OAAA;AACD,KAAA;;IAED,IAAIzI,CAAC,CAACE,OAAF,IAAa,IAAA,CAAKkD,IAAL,CAAUD,OAAV,CAAkB6a,WAAnC,EAAgD;AAC9C;AACA,MAAA,IAAI7S,SAAS,CAACzB,UAAV,EAAJ,EAA4B;QAC1B,IAAImB,UAAU,GAAG,CAACkT,MAAlB,CAAA;;QACA,IAAI/d,CAAC,CAACie,SAAF,KAAgB,CAAA;AAAE;UAAsB;AAC1CpT,UAAAA,UAAU,IAAI,IAAd,CAAA;AACD,SAFD,MAEO;AACLA,UAAAA,UAAU,IAAI7K,CAAC,CAACie,SAAF,GAAc,CAAd,GAAkB,KAAhC,CAAA;AACD,SAAA;;QACDpT,UAAU,GAAG,KAAKA,UAAlB,CAAA;AAEA,QAAA,MAAMvB,aAAa,GAAG6B,SAAS,CAAC3G,aAAV,GAA0BqG,UAAhD,CAAA;AACAM,QAAAA,SAAS,CAAC9B,MAAV,CAAiBC,aAAjB,EAAgC;UAC9BxM,CAAC,EAAEkD,CAAC,CAACke,OADyB;UAE9BnhB,CAAC,EAAEiD,CAAC,CAACme,OAAAA;SAFP,CAAA,CAAA;AAID,OAAA;AACF,KAjBD,MAiBO;AACL;AACA,MAAA,IAAIhT,SAAS,CAACH,UAAV,EAAJ,EAA4B;QAC1B,IAAIhL,CAAC,CAACie,SAAF,KAAgB,CAAA;AAAE;UAAsB;AAC1C;AACAH,UAAAA,MAAM,IAAI,EAAV,CAAA;AACAC,UAAAA,MAAM,IAAI,EAAV,CAAA;AACD,SAAA;;AAED5S,QAAAA,SAAS,CAACtC,KAAV,CACEsC,SAAS,CAACrE,GAAV,CAAchK,CAAd,GAAkBghB,MADpB,EAEE3S,SAAS,CAACrE,GAAV,CAAc/J,CAAd,GAAkBghB,MAFpB,CAAA,CAAA;AAID,OAAA;AACF,KAAA;AACF,GAAA;;AA1De;;ACJlB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AACA,SAASK,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,EAAA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,OAAOA,QAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACC,WAA3B,EAAwC;AACtC,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;EAED,MAAMC,OAAO,GAAGF,QAAhB,CAAA;AACA,EAAA,IAAIG,GAAG,GAAG,uFAAV,CAjBgC;;AAmBhCA,EAAAA,GAAG,GAAGA,GAAG,CAAC3b,KAAJ,CAAU,IAAV,EAAgB4b,IAAhB;AAAqB;AAAuBF,EAAAA,OAAO,CAACG,IAAR,IAAgB,EAA5D,CAAN,CAnBgC;AAsBhC;AACA;AACA;AACA;;EACA,IAAIH,OAAO,CAACI,SAAZ,EAAuB;AACrBH,IAAAA,GAAG,IAAI,6CAAgDD,GAAAA,OAAO,CAACI,SAAxD,GAAoE,KAA3E,CAAA;AACD,GAAA;;EAEDH,GAAG,IAAID,OAAO,CAACK,KAAf,CAAA;AAEAJ,EAAAA,GAAG,IAAI,QAAP,CAAA;AAEA,EAAA,OAAOA,GAAP,CAAA;AACD,CAAA;;AAED,MAAMK,SAAN,CAAgB;AACd;AACF;AACA;AACA;AACEhd,EAAAA,WAAW,CAACuB,IAAD,EAAO6B,IAAP,EAAa;AAAA,IAAA,IAAA,UAAA,CAAA;;IACtB,MAAMmF,IAAI,GAAGnF,IAAI,CAACmF,IAAL,IAAanF,IAAI,CAAC5I,SAA/B,CAAA;AACA,IAAA,IAAIyiB,WAAW,GAAG7Z,IAAI,CAAC8Z,IAAvB,CAFsB;;AAKtB,IAAA,IAAI3b,IAAI,CAACD,OAAL,CAAaiH,IAAb,CAAA,KAAuB,KAA3B,EAAkC;AAChC;AACA,MAAA,OAAA;AACD,KARqB;AAWtB;;;IACA,IAAI,OAAOhH,IAAI,CAACD,OAAL,CAAaiH,IAAI,GAAG,KAApB,CAAP,KAAsC,QAA1C,EAAoD;AAClD;AACA;AACA;AACA;AACA;MACA0U,WAAW,GAAG1b,IAAI,CAACD,OAAL,CAAaiH,IAAI,GAAG,KAApB,CAAd,CAAA;AACD,KAAA;;AAEDhH,IAAAA,IAAI,CAACyB,QAAL,CAAc,iBAAd,EAAiC;AAAEI,MAAAA,IAAAA;KAAnC,CAAA,CAAA;IAEA,IAAI5I,SAAS,GAAG,EAAhB,CAAA;;IACA,IAAI4I,IAAI,CAAC+Z,QAAT,EAAmB;AACjB3iB,MAAAA,SAAS,IAAI,eAAb,CAAA;MACAA,SAAS,IAAK4I,IAAI,CAAC5I,SAAL,IAAmB,CAAgB4I,cAAAA,EAAAA,IAAI,CAACmF,IAAK,CAA3D,CAAA,CAAA;AACD,KAHD,MAGO;MACL/N,SAAS,IAAK4I,IAAI,CAAC5I,SAAL,IAAmB,CAAQ4I,MAAAA,EAAAA,IAAI,CAACmF,IAAK,CAAnD,CAAA,CAAA;AACD,KAAA;;AAED,IAAA,IAAI9N,OAAO,GAAG2I,IAAI,CAAC+Z,QAAL,GAAiB/Z,IAAI,CAAC3I,OAAL,IAAgB,QAAjC,GAA8C2I,IAAI,CAAC3I,OAAL,IAAgB,KAA5E,CAAA;IACAA,OAAO;AAAG;IAA4CA,OAAO,CAAC2iB,WAAR,EAAtD,CAAA;AACA;;AACA,IAAA,MAAM7V,OAAO,GAAGhN,aAAa,CAACC,SAAD,EAAYC,OAAZ,CAA7B,CAAA;;IAEA,IAAI2I,IAAI,CAAC+Z,QAAT,EAAmB;MACjB,IAAI1iB,OAAO,KAAK,QAAhB,EAA0B;AACxB;QAAkC8M,OAAD,CAAUnH,IAAV,GAAiB,QAAjB,CAAA;AAClC,OAAA;;MAED,IAAI;AAAEid,QAAAA,KAAAA;AAAF,OAAA,GAAYja,IAAhB,CAAA;MACA,MAAM;AAAEka,QAAAA,SAAAA;OAAcla,GAAAA,IAAtB,CANiB;;MASjB,IAAI,OAAO7B,IAAI,CAACD,OAAL,CAAaiH,IAAI,GAAG,OAApB,CAAP,KAAwC,QAA5C,EAAsD;AACpD;QACA8U,KAAK,GAAG9b,IAAI,CAACD,OAAL,CAAaiH,IAAI,GAAG,OAApB,CAAR,CAAA;AACD,OAAA;;AAED,MAAA,IAAI8U,KAAJ,EAAW;QACT9V,OAAO,CAAC8V,KAAR,GAAgBA,KAAhB,CAAA;AACD,OAAA;;AAED,MAAA,MAAME,QAAQ,GAAGD,SAAS,IAAID,KAA9B,CAAA;;AACA,MAAA,IAAIE,QAAJ,EAAc;AACZhW,QAAAA,OAAO,CAACyO,YAAR,CAAqB,YAArB,EAAmCuH,QAAnC,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAEDhW,IAAAA,OAAO,CAACiW,SAAR,GAAoBjB,cAAc,CAACU,WAAD,CAAlC,CAAA;;IAEA,IAAI7Z,IAAI,CAACqa,MAAT,EAAiB;AACfra,MAAAA,IAAI,CAACqa,MAAL,CAAYlW,OAAZ,EAAqBhG,IAArB,CAAA,CAAA;AACD,KAAA;;IAED,IAAI6B,IAAI,CAACsa,OAAT,EAAkB;AAChBnW,MAAAA,OAAO,CAACoW,OAAR,GAAmBxf,CAAD,IAAO;AACvB,QAAA,IAAI,OAAOiF,IAAI,CAACsa,OAAZ,KAAwB,QAA5B,EAAsC;AACpC;AACAnc,UAAAA,IAAI,CAAC6B,IAAI,CAACsa,OAAN,CAAJ,EAAA,CAAA;SAFF,MAGO,IAAI,OAAOta,IAAI,CAACsa,OAAZ,KAAwB,UAA5B,EAAwC;AAC7Cta,UAAAA,IAAI,CAACsa,OAAL,CAAavf,CAAb,EAAgBoJ,OAAhB,EAAyBhG,IAAzB,CAAA,CAAA;AACD,SAAA;OANH,CAAA;AAQD,KA3EqB;;;AA8EtB,IAAA,MAAMqc,QAAQ,GAAGxa,IAAI,CAACwa,QAAL,IAAiB,KAAlC,CAAA;AACA;;AACA,IAAA,IAAIpY,SAAS,GAAGjE,IAAI,CAACgG,OAArB,CAAA;;IACA,IAAIqW,QAAQ,KAAK,KAAjB,EAAwB;AACtB,MAAA,IAAI,CAACrc,IAAI,CAACsc,MAAV,EAAkB;AAChBtc,QAAAA,IAAI,CAACsc,MAAL,GAActjB,aAAa,CAAC,mCAAD,EAAsC,KAAtC,EAA6CgH,IAAI,CAACiQ,UAAlD,CAA3B,CAAA;AACD,OAAA;;MACDhM,SAAS,GAAGjE,IAAI,CAACsc,MAAjB,CAAA;AACD,KALD,MAKO;AACL;AACA;AACAtW,MAAAA,OAAO,CAAC6H,SAAR,CAAkBlP,GAAlB,CAAsB,qBAAtB,CAAA,CAAA;;MAEA,IAAI0d,QAAQ,KAAK,SAAjB,EAA4B;QAC1BpY,SAAS,GAAGjE,IAAI,CAACiQ,UAAjB,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,CAAA,UAAA,GAAAhM,SAAS,MAAA,IAAT,IAAW3K,UAAAA,KAAAA,KAAAA,CAAAA,IAAAA,UAAAA,CAAAA,WAAX,CAAuB0G,IAAI,CAACuc,YAAL,CAAkB,WAAlB,EAA+BvW,OAA/B,EAAwCnE,IAAxC,CAAvB,CAAA,CAAA;AACD,GAAA;;AAtGa;;AC7EhB;AACA;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2a,eAAT,CAAyBxW,OAAzB,EAAkChG,IAAlC,EAAwCyc,YAAxC,EAAsD;AACpDzW,EAAAA,OAAO,CAAC6H,SAAR,CAAkBlP,GAAlB,CAAsB,qBAAtB,EADoD;;AAGpDqH,EAAAA,OAAO,CAACyO,YAAR,CAAqB,eAArB,EAAsC,aAAtC,CAAA,CAAA;AACAzU,EAAAA,IAAI,CAAC+P,EAAL,CAAQ,QAAR,EAAkB,MAAM;AACtB,IAAA,IAAI,CAAC/P,IAAI,CAACD,OAAL,CAAa2c,IAAlB,EAAwB;AACtB,MAAA,IAAID,YAAJ,EAAkB;AAChB;AACCzW,QAAAA,OAAD,CAAU2W,QAAV,GAAqB,EAAE3c,IAAI,CAACwD,SAAL,GAAiBxD,IAAI,CAAC4U,WAAL,EAAA,GAAqB,CAAxC,CAArB,CAAA;AACD,OAHD,MAGO;AACL;QACC5O,OAAD,CAAU2W,QAAV,GAAqB,EAAE3c,IAAI,CAACwD,SAAL,GAAiB,CAAnB,CAArB,CAAA;AACD,OAAA;AACF,KAAA;GATH,CAAA,CAAA;AAWD,CAAA;AAED;;;AACO,MAAMoZ,SAAS,GAAG;AACvB5V,EAAAA,IAAI,EAAE,WADiB;AAEvB/N,EAAAA,SAAS,EAAE,2BAFY;AAGvB6iB,EAAAA,KAAK,EAAE,UAHgB;AAIvBe,EAAAA,KAAK,EAAE,EAJgB;AAKvBjB,EAAAA,QAAQ,EAAE,IALa;AAMvBS,EAAAA,QAAQ,EAAE,SANa;AAOvBV,EAAAA,IAAI,EAAE;AACJT,IAAAA,WAAW,EAAE,IADT;AAEJI,IAAAA,IAAI,EAAE,EAFF;AAGJE,IAAAA,KAAK,EAAE,2EAHH;AAIJD,IAAAA,SAAS,EAAE,iBAAA;GAXU;AAavBY,EAAAA,OAAO,EAAE,MAbc;AAcvBD,EAAAA,MAAM,EAAEM,eAAAA;AAde,CAAlB,CAAA;AAiBP;;AACO,MAAMM,SAAS,GAAG;AACvB9V,EAAAA,IAAI,EAAE,WADiB;AAEvB/N,EAAAA,SAAS,EAAE,2BAFY;AAGvB6iB,EAAAA,KAAK,EAAE,MAHgB;AAIvBe,EAAAA,KAAK,EAAE,EAJgB;AAKvBjB,EAAAA,QAAQ,EAAE,IALa;AAMvBS,EAAAA,QAAQ,EAAE,SANa;AAOvBV,EAAAA,IAAI,EAAE;AACJT,IAAAA,WAAW,EAAE,IADT;AAEJI,IAAAA,IAAI,EAAE,EAFF;AAGJE,IAAAA,KAAK,EAAE,sCAHH;AAIJD,IAAAA,SAAS,EAAE,iBAAA;GAXU;AAavBY,EAAAA,OAAO,EAAE,MAbc;AAcvBD,EAAAA,MAAM,EAAE,CAAC9iB,EAAD,EAAK4G,IAAL,KAAc;AACpBwc,IAAAA,eAAe,CAACpjB,EAAD,EAAK4G,IAAL,EAAW,IAAX,CAAf,CAAA;AACD,GAAA;AAhBsB,CAAlB;;ACjDP;AACA,MAAM+c,WAAW,GAAG;AAClB/V,EAAAA,IAAI,EAAE,OADY;AAElB8U,EAAAA,KAAK,EAAE,OAFW;AAGlBe,EAAAA,KAAK,EAAE,EAHW;AAIlBjB,EAAAA,QAAQ,EAAE,IAJQ;AAKlBD,EAAAA,IAAI,EAAE;AACJT,IAAAA,WAAW,EAAE,IADT;AAEJM,IAAAA,KAAK,EAAE,uFAFH;AAGJD,IAAAA,SAAS,EAAE,iBAAA;GARK;AAUlBY,EAAAA,OAAO,EAAE,OAAA;AAVS,CAApB;;ACDA;AACA,MAAMa,UAAU,GAAG;AACjBhW,EAAAA,IAAI,EAAE,MADW;AAEjB8U,EAAAA,KAAK,EAAE,MAFU;AAGjBe,EAAAA,KAAK,EAAE,EAHU;AAIjBjB,EAAAA,QAAQ,EAAE,IAJO;AAKjBD,EAAAA,IAAI,EAAE;AACJT,IAAAA,WAAW,EAAE,IADT;AAEJ;AACAM,IAAAA,KAAK,EAAE,gGAAA,GACC,6EADD,GAEC,6EALJ;AAMJD,IAAAA,SAAS,EAAE,gBAAA;GAXI;AAajBY,EAAAA,OAAO,EAAE,YAAA;AAbQ,CAAnB;;ACDA;AACO,MAAMc,gBAAgB,GAAG;AAC9BjW,EAAAA,IAAI,EAAE,WADwB;AAE9BqV,EAAAA,QAAQ,EAAE,KAFoB;AAG9BQ,EAAAA,KAAK,EAAE,CAHuB;AAI9BlB,EAAAA,IAAI,EAAE;AACJT,IAAAA,WAAW,EAAE,IADT;AAEJ;AACAM,IAAAA,KAAK,EAAE,iIAHH;AAIJD,IAAAA,SAAS,EAAE,mBAAA;GARiB;AAU9BW,EAAAA,MAAM,EAAE,CAACgB,gBAAD,EAAmBld,IAAnB,KAA4B;AAClC;AACA,IAAA,IAAImd,SAAJ,CAAA;AACA;;IACA,IAAIC,YAAY,GAAG,IAAnB,CAAA;AAEA;AACJ;AACA;AACA;;AACI,IAAA,MAAMC,oBAAoB,GAAG,CAACpkB,SAAD,EAAY0F,GAAZ,KAAoB;MAC/Cue,gBAAgB,CAACrP,SAAjB,CAA2BW,MAA3B,CAAkC,mBAAsBvV,GAAAA,SAAxD,EAAmE0F,GAAnE,CAAA,CAAA;KADF,CAAA;AAIA;AACJ;AACA;;;IACI,MAAM2e,sBAAsB,GAAIC,OAAD,IAAa;MAC1C,IAAIJ,SAAS,KAAKI,OAAlB,EAA2B;AACzBJ,QAAAA,SAAS,GAAGI,OAAZ,CAAA;AACAF,QAAAA,oBAAoB,CAAC,QAAD,EAAWE,OAAX,CAApB,CAAA;AACD,OAAA;KAJH,CAAA;;IAOA,MAAMC,yBAAyB,GAAG,MAAM;AAAA,MAAA,IAAA,eAAA,CAAA;;MACtC,IAAI,EAAA,CAAA,eAAA,GAACxd,IAAI,CAAC+H,SAAN,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,IAAC,eAAgBjE,CAAAA,OAAhB,CAAwB2Z,SAAxB,EAAD,CAAJ,EAA0C;QACxCH,sBAAsB,CAAC,KAAD,CAAtB,CAAA;;AACA,QAAA,IAAIF,YAAJ,EAAkB;UAChB9K,YAAY,CAAC8K,YAAD,CAAZ,CAAA;AACAA,UAAAA,YAAY,GAAG,IAAf,CAAA;AACD,SAAA;;AACD,QAAA,OAAA;AACD,OAAA;;MAED,IAAI,CAACA,YAAL,EAAmB;AACjB;QACAA,YAAY,GAAG/K,UAAU,CAAC,MAAM;AAAA,UAAA,IAAA,gBAAA,CAAA;;AAC9BiL,UAAAA,sBAAsB,CAACzV,OAAO,CAAC7H,CAAAA,gBAAAA,GAAAA,IAAI,CAAC+H,SAAN,MAAC,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAgBjE,OAAhB,CAAwB2Z,SAAxB,EAAD,CAAR,CAAtB,CAAA;AACAL,UAAAA,YAAY,GAAG,IAAf,CAAA;AACD,SAHwB,EAGtBpd,IAAI,CAACD,OAAL,CAAa2d,cAHS,CAAzB,CAAA;AAID,OAAA;KAhBH,CAAA;;AAmBA1d,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,QAAR,EAAkByN,yBAAlB,CAAA,CAAA;AAEAxd,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,cAAR,EAAyBnT,CAAD,IAAO;AAC7B,MAAA,IAAIoD,IAAI,CAAC+H,SAAL,KAAmBnL,CAAC,CAACuE,KAAzB,EAAgC;QAC9Bqc,yBAAyB,EAAA,CAAA;AAC1B,OAAA;AACF,KAJD,EA7CkC;;IAoDlC,IAAIxd,IAAI,CAAC2d,EAAT,EAAa;AACX3d,MAAAA,IAAI,CAAC2d,EAAL,CAAQH,yBAAR,GAAoCA,yBAApC,CAAA;AACD,KAAA;AACF,GAAA;AAjE6B,CAAzB;;ACDP;AACO,MAAMI,gBAAgB,GAAG;AAC9B5W,EAAAA,IAAI,EAAE,SADwB;AAE9B6V,EAAAA,KAAK,EAAE,CAFuB;AAG9BX,EAAAA,MAAM,EAAE,CAAC2B,cAAD,EAAiB7d,IAAjB,KAA0B;AAChCA,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,QAAR,EAAkB,MAAM;AACtB8N,MAAAA,cAAc,CAACC,SAAf,GAA4B9d,IAAI,CAACwD,SAAL,GAAiB,CAAlB,GACGxD,IAAI,CAACD,OAAL,CAAage,iBADhB,GAEG/d,IAAI,CAAC4U,WAAL,EAF9B,CAAA;KADF,CAAA,CAAA;AAKD,GAAA;AAT6B,CAAzB;;ACMP;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASoJ,WAAT,CAAqB5kB,EAArB,EAAyB6kB,UAAzB,EAAqC;AACnC7kB,EAAAA,EAAE,CAACyU,SAAH,CAAaW,MAAb,CAAoB,iBAApB,EAAuCyP,UAAvC,CAAA,CAAA;AACD,CAAA;;AAED,MAAMC,EAAN,CAAS;AACP;AACF;AACA;EACEzf,WAAW,CAACuB,IAAD,EAAO;IAChB,IAAKA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAKme,CAAAA,YAAL,GAAoB,KAApB,CAAA;AACA;;IACA,IAAKC,CAAAA,cAAL,GAAsB,EAAtB,CAAA;AACA;;IACA,IAAKC,CAAAA,KAAL,GAAa,EAAb,CAAA;AACA;;AACA,IAAA,IAAA,CAAKb,yBAAL,GAAiC,MAAM,EAAvC,CAAA;AAEA;AACJ;AACA;AACA;;;IACI,IAAKc,CAAAA,qBAAL,GAA6BzkB,SAA7B,CAAA;AACD,GAAA;;AAED0kB,EAAAA,IAAI,GAAG;IACL,MAAM;AAAEve,MAAAA,IAAAA;AAAF,KAAA,GAAW,IAAjB,CAAA;IACA,IAAKme,CAAAA,YAAL,GAAoB,KAApB,CAAA;AACA,IAAA,IAAA,CAAKC,cAAL,GAAsB,CACpBrB,WADoB,EAEpBH,SAFoB,EAGpBE,SAHoB,EAIpBE,UAJoB,EAKpBC,gBALoB,EAMpBW,gBANoB,CAAtB,CAAA;AASA5d,IAAAA,IAAI,CAACyB,QAAL,CAAc,YAAd,EAZK;;IAeL,IAAK2c,CAAAA,cAAL,CAAoBI,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC;AACA,MAAA,OAAO,CAACD,CAAC,CAAC5B,KAAF,IAAW,CAAZ,KAAkB6B,CAAC,CAAC7B,KAAF,IAAW,CAA7B,CAAP,CAAA;KAFF,CAAA,CAAA;IAKA,IAAKwB,CAAAA,KAAL,GAAa,EAAb,CAAA;IAEA,IAAKF,CAAAA,YAAL,GAAoB,IAApB,CAAA;AACA,IAAA,IAAA,CAAKC,cAAL,CAAoBjf,OAApB,CAA6Bwf,aAAD,IAAmB;MAC7C,IAAKC,CAAAA,eAAL,CAAqBD,aAArB,CAAA,CAAA;KADF,CAAA,CAAA;AAIA3e,IAAAA,IAAI,CAAC+P,EAAL,CAAQ,QAAR,EAAkB,MAAM;AAAA,MAAA,IAAA,aAAA,CAAA;;AACtB,MAAA,CAAA,aAAA,GAAA/P,IAAI,CAACgG,OAAL,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,IAAA,aAAA,CAAc6H,SAAd,CAAwBW,MAAxB,CAA+B,iBAA/B,EAAkDxO,IAAI,CAAC4U,WAAL,OAAuB,CAAzE,CAAA,CAAA;KADF,CAAA,CAAA;IAIA5U,IAAI,CAAC+P,EAAL,CAAQ,eAAR,EAAyB,MAAM,IAAA,CAAK8O,gBAAL,EAA/B,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;;;EACED,eAAe,CAACE,WAAD,EAAc;IAC3B,IAAI,IAAA,CAAKX,YAAT,EAAuB;MACrB,IAAKE,CAAAA,KAAL,CAAWze,IAAX,CACE,IAAI6b,SAAJ,CAAc,IAAKzb,CAAAA,IAAnB,EAAyB8e,WAAzB,CADF,CAAA,CAAA;AAGD,KAJD,MAIO;AACL,MAAA,IAAA,CAAKV,cAAL,CAAoBxe,IAApB,CAAyBkf,WAAzB,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACED,EAAAA,gBAAgB,GAAG;IACjB,MAAM;MAAE9G,QAAF;MAAYhQ,SAAZ;AAAuBhI,MAAAA,OAAAA;AAAvB,KAAA,GAAmC,KAAKC,IAA9C,CAAA;;AAEA,IAAA,IAAI,IAAKA,CAAAA,IAAL,CAAU4D,MAAV,CAAiBmb,SAAjB,IAA8B,CAAChH,QAA/B,IAA2C,CAAChQ,SAAhD,EAA2D;AACzD,MAAA,OAAA;AACD,KAAA;;IAED,IAAI;AAAE3G,MAAAA,aAAAA;KAAkB2G,GAAAA,SAAxB,CAPiB;;AAUjB,IAAA,IAAI,CAAC,IAAK/H,CAAAA,IAAL,CAAU4D,MAAV,CAAiBC,MAAtB,EAA8B;AAC5BzC,MAAAA,aAAa,GAAG2G,SAAS,CAAC/E,UAAV,CAAqBT,OAArC,CAAA;AACD,KAAA;;AAED,IAAA,IAAInB,aAAa,KAAK,IAAKkd,CAAAA,qBAA3B,EAAkD;AAChD,MAAA,OAAA;AACD,KAAA;;IACD,IAAKA,CAAAA,qBAAL,GAA6Bld,aAA7B,CAAA;AAEA,IAAA,MAAM4d,iBAAiB,GAAGjX,SAAS,CAAC/E,UAAV,CAAqBT,OAArB,GAA+BwF,SAAS,CAAC/E,UAAV,CAAqBR,SAA9E,CAnBiB;;AAsBjB,IAAA,IAAIxI,IAAI,CAACG,GAAL,CAAS6kB,iBAAT,CAAA,GAA8B,IAA9B,IAAsC,CAACjX,SAAS,CAACzB,UAAV,EAA3C,EAAmE;AACjE;AACA0X,MAAAA,WAAW,CAACjG,QAAD,EAAW,KAAX,CAAX,CAAA;AACAA,MAAAA,QAAQ,CAAClK,SAAT,CAAmB5O,MAAnB,CAA0B,oBAA1B,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;AAED8Y,IAAAA,QAAQ,CAAClK,SAAT,CAAmBlP,GAAnB,CAAuB,oBAAvB,CAAA,CAAA;IAEA,MAAMsgB,kBAAkB,GAAG7d,aAAa,KAAK2G,SAAS,CAAC/E,UAAV,CAAqBT,OAAvC,GACvBwF,SAAS,CAAC/E,UAAV,CAAqBR,SADE,GACUuF,SAAS,CAAC/E,UAAV,CAAqBT,OAD1D,CAAA;AAGAyb,IAAAA,WAAW,CAACjG,QAAD,EAAWkH,kBAAkB,IAAI7d,aAAjC,CAAX,CAAA;;IAEA,IAAIrB,OAAO,CAACmf,gBAAR,KAA6B,MAA7B,IACGnf,OAAO,CAACmf,gBAAR,KAA6B,eADpC,EACqD;AACnDnH,MAAAA,QAAQ,CAAClK,SAAT,CAAmBlP,GAAnB,CAAuB,qBAAvB,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAlHM;;ACvBT;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAASwgB,kBAAT,CAA4B/lB,EAA5B,EAAgC;AAC9B,EAAA,MAAMgmB,aAAa,GAAGhmB,EAAE,CAACimB,qBAAH,EAAtB,CAAA;EACA,OAAO;IACL3lB,CAAC,EAAE0lB,aAAa,CAACE,IADZ;IAEL3lB,CAAC,EAAEylB,aAAa,CAACG,GAFZ;IAGLhkB,CAAC,EAAE6jB,aAAa,CAAC3jB,KAAAA;GAHnB,CAAA;AAKD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+jB,yBAAT,CAAmCpmB,EAAnC,EAAuCqmB,UAAvC,EAAmDC,WAAnD,EAAgE;AAC9D,EAAA,MAAMN,aAAa,GAAGhmB,EAAE,CAACimB,qBAAH,EAAtB,CAD8D;AAI9D;;AACA,EAAA,MAAM1c,MAAM,GAAGyc,aAAa,CAAC3jB,KAAd,GAAsBgkB,UAArC,CAAA;AACA,EAAA,MAAM7c,MAAM,GAAGwc,aAAa,CAAC1jB,MAAd,GAAuBgkB,WAAtC,CAAA;EACA,MAAMC,aAAa,GAAGhd,MAAM,GAAGC,MAAT,GAAkBD,MAAlB,GAA2BC,MAAjD,CAAA;EAEA,MAAMgd,OAAO,GAAG,CAACR,aAAa,CAAC3jB,KAAd,GAAsBgkB,UAAU,GAAGE,aAApC,IAAqD,CAArE,CAAA;EACA,MAAME,OAAO,GAAG,CAACT,aAAa,CAAC1jB,MAAd,GAAuBgkB,WAAW,GAAGC,aAAtC,IAAuD,CAAvE,CAAA;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,EAAA,MAAMvb,MAAM,GAAG;AACb1K,IAAAA,CAAC,EAAE0lB,aAAa,CAACE,IAAd,GAAqBM,OADX;AAEbjmB,IAAAA,CAAC,EAAEylB,aAAa,CAACG,GAAd,GAAoBM,OAFV;IAGbtkB,CAAC,EAAEkkB,UAAU,GAAGE,aAAAA;AAHH,GAAf,CAnB8D;AA0B9D;;EACAvb,MAAM,CAAC0b,SAAP,GAAmB;IACjBvkB,CAAC,EAAE6jB,aAAa,CAAC3jB,KADA;IAEjBD,CAAC,EAAE4jB,aAAa,CAAC1jB,MAFA;AAGjBhC,IAAAA,CAAC,EAAEkmB,OAHc;AAIjBjmB,IAAAA,CAAC,EAAEkmB,OAAAA;GAJL,CAAA;AAOA,EAAA,OAAOzb,MAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAS2b,cAAT,CAAwBtf,KAAxB,EAA+BD,QAA/B,EAAyCwf,QAAzC,EAAmD;AACxD;AACA,EAAA,MAAMzS,KAAK,GAAGyS,QAAQ,CAACve,QAAT,CAAkB,aAAlB,EAAiC;IAC7ChB,KAD6C;IAE7CD,QAF6C;AAG7Cwf,IAAAA,QAAAA;GAHY,CAAd,CAFwD;;EAQxD,IAAIzS,KAAK,CAAC0S,WAAV,EAAuB;AACrB;IACA,OAAO1S,KAAK,CAAC0S,WAAb,CAAA;AACD,GAAA;;EAED,MAAM;AAAEja,IAAAA,OAAAA;AAAF,GAAA,GAAcxF,QAApB,CAAA;AACA;;AACA,EAAA,IAAIyf,WAAJ,CAAA;AACA;;AACA,EAAA,IAAIC,SAAJ,CAAA;;EAEA,IAAIla,OAAO,IAAIga,QAAQ,CAACjgB,OAAT,CAAiBogB,aAAjB,KAAmC,KAAlD,EAAyD;IACvD,MAAMA,aAAa,GAAGH,QAAQ,CAACjgB,OAAT,CAAiBogB,aAAjB,IAAkC,KAAxD,CAAA;AACAD,IAAAA,SAAS,GAAGla,OAAO,CAACoa,OAAR,CAAgBD,aAAhB,IACRna,OADQ;AACE;AAAmCA,IAAAA,OAAO,CAACqa,aAAR,CAAsBF,aAAtB,CADjD,CAAA;AAED,GAAA;;AAEDD,EAAAA,SAAS,GAAGF,QAAQ,CAACzD,YAAT,CAAsB,SAAtB,EAAiC2D,SAAjC,EAA4C1f,QAA5C,EAAsDC,KAAtD,CAAZ,CAAA;;AAEA,EAAA,IAAIyf,SAAJ,EAAe;AACb,IAAA,IAAI,CAAC1f,QAAQ,CAAC8f,YAAd,EAA4B;AAC1BL,MAAAA,WAAW,GAAGd,kBAAkB,CAACe,SAAD,CAAhC,CAAA;AACD,KAFD,MAEO;MACLD,WAAW,GAAGT,yBAAyB,CACrCU,SADqC,EAErC1f,QAAQ,CAAC/E,KAAT,IAAkB+E,QAAQ,CAACjF,CAA3B,IAAgC,CAFK,EAGrCiF,QAAQ,CAAC9E,MAAT,IAAmB8E,QAAQ,CAAChF,CAA5B,IAAiC,CAHI,CAAvC,CAAA;AAKD,KAAA;AACF,GAAA;;EAED,OAAOwkB,QAAQ,CAACzD,YAAT,CAAsB,aAAtB,EAAqC0D,WAArC,EAAkDzf,QAAlD,EAA4DC,KAA5D,CAAP,CAAA;AACD;;AC9GD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM8f,eAAN,CAAsB;AACpB;AACF;AACA;AACA;AACE9hB,EAAAA,WAAW,CAACI,IAAD,EAAO2hB,OAAP,EAAgB;IACzB,IAAK3hB,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAKwG,CAAAA,gBAAL,GAAwB,KAAxB,CAAA;;AACA,IAAA,IAAImb,OAAJ,EAAa;AACXniB,MAAAA,MAAM,CAACoiB,MAAP,CAAc,IAAd,EAAoBD,OAApB,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAEDvP,EAAAA,cAAc,GAAG;IACf,IAAK5L,CAAAA,gBAAL,GAAwB,IAAxB,CAAA;AACD,GAAA;;AAfmB,CAAA;AAkBtB;AACA;AACA;AACA;;;AACA,MAAMqb,SAAN,CAAgB;AACdjiB,EAAAA,WAAW,GAAG;AACZ;AACJ;AACA;IACI,IAAKkiB,CAAAA,UAAL,GAAkB,EAAlB,CAAA;AAEA;AACJ;AACA;;IACI,IAAKC,CAAAA,QAAL,GAAgB,EAAhB,CAAA;AAEA;;IACA,IAAK5gB,CAAAA,IAAL,GAAYnG,SAAZ,CAAA;AAEA;;IACA,IAAKkG,CAAAA,OAAL,GAAelG,SAAf,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;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"}